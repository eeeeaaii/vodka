v2:~(|begin ~(_import @animation-functions_) ~(_import @vector-functions_) ~(_import @style-functions_) ~(_import @vector-functions_) ~(_import @list-functions_) [doc](|[line](_[word](_[letter]"P" [letter]"o" [letter]"e" [letter]"m"_) [separator]" " [word](_[letter]"s" [letter]"t" [letter]"u" [letter]"f" [letter]"f"_) [separator]" " [word](_[letter]"b" [letter]"e" [letter]"l" [letter]"o" [letter]"w"_) [separator]"."_)|) ~(_bind @poemtext [doc](|[line](_[word](_[letter]"i" [letter]"n"_) [separator]" " [word](_[letter]"b" [letter]"o" [letter]"x" [letter]"e" [letter]"s"_)_) [line](_[word](_[letter]"j" [letter]"u" [letter]"s" [letter]"t"_) [separator]" " [word](_[letter]"i" [letter]"n"_) [separator]" " [word](_[letter]"t" [letter]"h" [letter]"i" [letter]"s"_) [separator]" " [word](_[letter]"b" [letter]"o" [letter]"x"_)_) [line](_[word](_[letter]"i" [letter]"n"_) [separator]" " [word](_[letter]"t" [letter]"h" [letter]"i" [letter]"s"_) [separator]" " [word](_[letter]"b" [letter]"o" [letter]"x"_)_) [line](_[word](_[letter]"i" [letter]"n"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"i" [letter]"n"_) [separator]" " [word](_[letter]"t" [letter]"h" [letter]"i" [letter]"s"_) [separator]" " [word](_[letter]"b" [letter]"o" [letter]"x"_)_) [line](_[word](_[letter]"I"_) [separator]" " [word](_[letter]"a" [letter]"m"_) [separator]" " [word](_[letter]"i" [letter]"n"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"e" [letter]"v" [letter]"e" [letter]"r" [letter]"y"_) [separator]" " [word](_[letter]"d" [letter]"a" [letter]"y"_)_) [line](_[word](_[letter]"I"_) [separator]" " [word](_[letter]"a" [letter]"m"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"r" [letter]"i" [letter]"g" [letter]"h" [letter]"t"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"I"_) [separator]" " [word](_[letter]"a" [letter]"m"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"I"_) [separator]" " [word](_[letter]"a" [letter]"m"_) [separator]" " [word](_[letter]"i" [letter]"n" [letter]"s" [letter]"i" [letter]"d" [letter]"e"_)_) [line](_[word](_[letter]"I"_) [separator]" " [word](_[letter]"a" [letter]"m"_) [separator]" " [word](_[letter]"i" [letter]"n" [letter]"s" [letter]"i" [letter]"d" [letter]"e"_) [separator]" " [word](_[letter]"t" [letter]"h" [letter]"i" [letter]"s"_) [separator]" " [word](_[letter]"b" [letter]"o" [letter]"x"_)_) [line](_[word](_[letter]"I"_) [separator]" " [word](_[letter]"a" [letter]"m"_) [separator]" " [word](_[letter]"i" [letter]"n"_) [separator]" " [word](_[letter]"t" [letter]"h" [letter]"i" [letter]"s"_) [separator]" " [word](_[letter]"p" [letter]"l" [letter]"a" [letter]"c" [letter]"e"_)_) [line](_[word](_[letter]"I"_) [separator]" " [word](_[letter]"n" [letter]"e" [letter]"v" [letter]"e" [letter]"r"_) [separator]" " [word](_[letter]"g" [letter]"o"_) [separator]" " [word](_[letter]"a" [letter]"n" [letter]"y" [letter]"w" [letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"I"_) [separator]" " [word](_[letter]"a" [letter]"m"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_) [separator]" " [word](_[letter]"I"_) [separator]" " [word](_[letter]"a" [letter]"m"_)_) [line](_[word](_[letter]"j" [letter]"u" [letter]"s" [letter]"t"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"j" [letter]"u" [letter]"s" [letter]"t"_) [separator]" " [word](_[letter]"i" [letter]"n"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"s" [letter]"t" [letter]"i" [letter]"l" [letter]"l"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"s" [letter]"t" [letter]"i" [letter]"l" [letter]"l"_) [separator]" " [word](_[letter]"i" [letter]"n"_) [separator]" " [word](_[letter]"t" [letter]"h" [letter]"i" [letter]"s"_) [separator]" " [word](_[letter]"b" [letter]"o" [letter]"x"_)_) [line](_[word](_[letter]"h" [letter]"e" [letter]"l" [letter]"l" [letter]"o"_)_) [line](_[word](_[letter]"I" [letter]"'" [letter]"m"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"r" [letter]"i" [letter]"g" [letter]"h" [letter]"t"_) [separator]" " [word](_[letter]"i" [letter]"n"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"s" [letter]"t" [letter]"i" [letter]"l" [letter]"l"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"y" [letter]"u" [letter]"p"_)_) [line](_[word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"h" [letter]"e" [letter]"l" [letter]"l" [letter]"o"_)_) [line](_[word](_[letter]"I" [letter]"'" [letter]"m"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"n" [letter]"o" [letter]"t"_) [separator]" " [word](_[letter]"g" [letter]"o" [letter]"i" [letter]"n" [letter]"g"_) [separator]" " [word](_[letter]"a" [letter]"n" [letter]"y" [letter]"w" [letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_) [line](_[word](_[letter]"n" [letter]"o" [letter]"p" [letter]"e"_)_) [line](_[word](_[letter]"s" [letter]"t" [letter]"i" [letter]"l" [letter]"l"_) [separator]" " [word](_[letter]"h" [letter]"e" [letter]"r" [letter]"e"_)_)|)_) ~(_bind @numpoemlines ~(_list-length @poemtext_)_) ~(_bind @setup-text &(|~(_bind @textsurface ~"style:set-width-for to"(|~"style:set-height-for to"(|(,,) @canvasheight|) @canvaswidth|)_) ~(_bind @basedoc ~"style:set-width-for to"(|~"style:set-height-for to"(|[doc](||) @canvasheight|) @canvaswidth|)_) ~(_bind @right-container ~"style:rotate by degrees"(_~(_copy @basedoc_) %90_)_) ~(_bind @top-container ~(_copy @basedoc_)_) ~(_bind @left-container ~"style:rotate by degrees"(_~(_copy @basedoc_) %-90_)_) ~(_bind @bottom-container ~"style:rotate by degrees"(_~(_copy @basedoc_) %180_)_) ~(_cram ~(_cram [nil] @right-container_) @textsurface_) ~(_cram ~(_cram [nil] @top-container_) @textsurface_) ~(_cram ~(_cram [nil] @left-container_) @textsurface_) ~(_cram ~(_cram [nil] @bottom-container_) @textsurface_)|)_) ~(_bind @format-text &" txt"(|~(_let @t ~(_animation:fade-out-for-seconds ~(|style:uppercase ~"style:set-font-for to"(|~"style:set-font-size-for to"(|~"style:set-color-for to"(_@txt $"#ffffff"_) #35|) $"Helvetica"|)|) %3_)_) [doc](|[line](_[word](_[letter]"o" [letter]"r"_) [separator]" " [word](_[letter]"m" [letter]"a" [letter]"y" [letter]"b" [letter]"e"_) [separator]" " [word](_[letter]"a" [letter]"l" [letter]"i" [letter]"g" [letter]"n"_) [separator]" " [word](_[letter]"i" [letter]"t" [letter]"e" [letter]"m" [letter]"s"_) [separator]" " [word](_[letter]"c" [letter]"e" [letter]"n" [letter]"t" [letter]"e" [letter]"r"_) [separator]"?"_)|) ~(_let @c ~(_style:justify-content-center ~"style:set-width-for to"(_[line](__) @canvaswidth_)_)_) ~(_cons @t @c_)|)_) ~(_bind @set-right-text &" text"(|~(_cram ~(_format-text @text_) ~(_chomp @right-container_)_) ~(_force-draw @textsurface_)|)_) ~(_bind @set-top-text &" text"(|~(_cram ~(_format-text @text_) ~(_chomp @top-container_)_) ~(_force-draw @textsurface_)|)_) ~(_bind @set-left-text &" text"(|~(_cram ~(_format-text @text_) ~(_chomp @left-container_)_) ~(_force-draw @textsurface_)|)_) ~(_bind @set-bottom-text &" text"(|~(_cram ~(_format-text @text_) ~(_chomp @bottom-container_)_) ~(_force-draw @textsurface_)|)_) ~(_bind @readpoem &(|~(|animation:do-on-every-for &" n"(|~(_bind @words ~(_list-get @poemtext ~(_modulo @n @numpoemlines_)_)_) ~(_bind @whichside ~(_modulo @n #4_)_) ~(_jslog @whichside_) ~(|first-non-nil ~(_if ~(_::eq:: @whichside #0_) ~(_set-right-text @words_)_) ~(_if ~(_::eq:: @whichside #1_) ~(_set-bottom-text @words_)_) ~(_if ~(_::eq:: @whichside #2_) ~(_set-left-text @words_)_) ~(_if ~(_::eq:: @whichside #3_) ~(_set-top-text @words_)_)|) ~(_::pl:: @n #1_)|) #0 #1000 ~(_::ti:: @numpoemlines #3_)|)|)_) [doc](|[line](_[word](_[letter]"C" [letter]"a" [letter]"n" [letter]"v" [letter]"a" [letter]"s"_) [separator]" " [word](_[letter]"s" [letter]"t" [letter]"u" [letter]"f" [letter]"f"_) [separator]" " [word](_[letter]"b" [letter]"e" [letter]"l" [letter]"o" [letter]"w"_) [separator]"."_)|) ~(_bind @canvaswidth %500_) ~(_bind @canvasheight %500_) ~(_bind @maxradius %200_) ~(_bind @setup-objects &(|~(_bind @canvas ~(_make-surface ~(_to-integer @canvaswidth_) ~(_to-integer @canvasheight_)_)_) ~(_bind @centeroffset ^"vector:Vector"(_~(_::ov:: @canvaswidth %2_) ~(_::ov:: @canvasheight %2_)_)_) ~(_bind @position ^"vector:Vector"(_%0 %0_)_) ~(_bind @directions (|~"add-tag to"(_$"right" ^"vector:Vector"(_%5 %0_)_) ~"add-tag to"(_$"left" ^"vector:Vector"(_%-5 %0_)_) ~"add-tag to"(_$"down" ^"vector:Vector"(_%0 %5_)_) ~"add-tag to"(_$"up" ^"vector:Vector"(_%0 %-5_)_)|)_)|)_) ~(_bind @reset-canvas &(|~(_fill-background @canvas (|#0 #0 #0|)_) ~(_bind @position ^"vector:Vector"(_%0 %0_)_)|)_) ~(_bind @constructprobs &" rotateby"(|~(_let @probs1 ~(|map @directions &" d"(|${the position plus d (delta) gives you a distance from the origin.
divide by max radius allowed,
then
plug into the formula:
(1-x)^(1/100) which is mostly flat
but falls off sharply as you approach 1.
this gives you probability of this
distance being chosen, but you have to normalize it.} ~(_let @drotated ~(_d.rotate @rotateby_)_) ~(_let @where ~(_drotated.add @position_)_) ~(_let @radius ~(_where.magnitude _)_) ~(_let @radprob ~(_power ~(_- %1 ~(_::ov:: @radius @maxradius_)_) ~(_::ov:: %1 %100_)_)_) ~(_cons @radprob ~(_cons @where (||)_)_)|)|)_) ~(_let @total ~(_reduce @probs1 &" item val"(|~(_::pl:: ~(_car @item_) @val_)|) %0_)_) ~(_map @probs1 &" item"(|~(_let @second ~(_car ~(_cdr @item_)_)_) ~(_let @norm ~(_::ov:: ~(_car @item_) @total_)_) ~(_cons @norm ~(_cons @second (||)_)_)|)_)|)_) ~(_bind @chooseoption &" options"(|~(_let @chosen [nil]_) ~(_let @r ~(_random _)_) ~(_reduce @options &" item val"(|~(_let @prob ~(_first @item_)_) ~(_let @nextval ~(_::pl:: @val @prob_)_) ~(|if ~(_and ~(_::gte:: @r @val_) ~(_::lt:: @r @nextval_)_) ~(_set @chosen ~(_list:second @item_)_)|) @nextval|) %0_) @chosen|)_) ~(_bind @dostep &" rotateby%"(|~(_let @newposition ~(_chooseoption ~(_constructprobs @rotateby_)_)_) ~(_let @drawstart ~(_position.add @centeroffset_)_) ~(_let @drawend ~(_newposition.add @centeroffset_)_) ~(|draw-line @canvas (|#255 #255 #255|) ~(_to-integer @drawstart.x_) ~(_to-integer @drawstart.y_) ~(_to-integer @drawend.x_) ~(_to-integer @drawend.y_)|) ~(_set @position @newposition_)|)_) ~(_bind @randomwalk &(|~(|animation:do-on-every &" theta"(|~(_dostep @theta_) ~(_::pl:: @theta %0.001_)|) %0 #1|)|)_) ~(_bind @setup-and-get-root &(|~(_setup-objects _) ~(_setup-text _) ~(_reset-canvas _) ~(_bind @paddingcontainer ~"style:set-padding-for to"(_(||) #30_)_) ~(_cons ~(_cons @canvas ~(_cons @textsurface (,,)_)_) @paddingcontainer_)|)_) ~(_bind @start &(|(|~(_readpoem _) ~(_randomwalk _)|)|)_)|)