v2:~(|package @list ~(_bind @hhead &" lst()"(_~(_head ~(_head @lst_)_)_)_) ~(_bind @htail &" lst()"(_~(_head ~(_tail @lst_)_)_)_) ~(_bind @thead &" lst()"(_~(_tail ~(_head @lst_)_)_)_) ~(_bind @ttail &" lst()"(_~(_tail ~(_tail @lst_)_)_)_) ~(_bind @second &" lst()"(_~(_head ~(_tail @lst_)_)_)_) ~(_bind @third &" lst()"(_~(_head ~(_tail ~(_tail @lst_)_)_)_)_) ~(_bind @fourth &" lst()"(_~(_head ~(_tail ~(_tail ~(_tail @lst_)_)_)_)_)_) ~(_bind @reverse &"() lst()"(|~"reduce with"(|@lst &" item accum()"(|~(_push--into @item @accum_)|) (||)|)|)_) ~(_bind--to @flatten &"() lst()"(|~(_let @recurse-flatten &" nex dlist()"(|~(|first-non-nil ~(_if--then ~(_not ~(_is-list @nex_)_) ~(_hard-push--into @nex @dlist_)_) ~(_if--then ~(_not ~(_is-empty @nex_)_) ~(|begin ~(_recurse-flatten ~(_tail @nex_) @dlist_) ~(_recurse-flatten ~(_head @nex_) @dlist_)|)_) [nil]|)|)_) ~(_let--be @r (||)_) ~(_recurse-flatten @lst @r_) @r|)_) ~(_bind--to @get-child-number--from &" n# lst()"(|~(|if--then--else ~(_::eq:: @n #0_) ~(_head @lst_) ~(_get-child-number--from ~(_- @n #1_) ~(_tail @lst_)_)|)|)_) ~(_bind--to @length-of &"# lst()"(|~(|reduce--with--given @lst &" item accum#"(|~(_::pl:: @accum #1_)|) #0|)|)_) ~(_bind--to @concatenate-lists &"() lst1() lst2()"(|~(|if ~(_is-empty @lst1_) ~(_copy @lst2_) ~(_push--into ~(_head @lst1_) ~(_util:concatenate-lists ~(_tail @lst1_) @lst2_)_)|)|)_) ~(_bind--to @put-contents-of--in &"() lst() dstlst()"(|~(_concatenate-lists @lst @dstlst_)|)_)|)