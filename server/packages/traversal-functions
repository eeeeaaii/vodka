v2:~(|package @traversal ~"bind to"(_@in--when--do &" nex testf& dof&"(|~(|first-non-nil ~"if then else"(_~(_not ~(_is-list @nex_)_) ~"if then else"(|~(_testf @nex_) ~(_dof @nex_) @nex|) [nil]_) ~"if then else"(_~(_is-empty @nex_) @nex [nil]_) ~"if then else"(_!yes ~"push into"(|~"in when do"(_~(_head @nex_) @testf @dof_) ~"in when do"(_~(_tail @nex_) @testf @dof_)|) [nil]_)|)|)_) ~"bind to"(_@in--when-atom-do &" nex f&"(|~(_let @isatom &"n"(_~(_not ~(_is-list @n_)_)_)_) ~"in when do"(_@nex @isatom @f_)|)_) ~"bind to"(_@in--when--replace-with &" nex testf& replacement"(|~(_let @dof &"n"(_~(_copy @replacement_)_)_) ~"in when do"(_@nex @testf @dof_)|)_) ~"bind to"(_@in--is-there-a &"! lst() f&"(|~(_let @hasit !no_) ~"in when do"(_@lst @f &"n"(|~(_set @hasit !yes_)|)_) @hasit|)_) ~"bind to"(_@in--is-there-the-number &"! lst() a#%"(|~"in is-there-a"(_@list &"n"(|~(_::eq:: @n @a_)|)_)|)_) ~"bind to"(_@get-list-with-members-of--that-satisfy &"() lst() f&"(|~"filter with"(_@list @f_)|)_)|)