v2:~(|begin ~(_bind @results (||)_) ~(_bind @verify &"testval expectedval"(|~(_let @result ~(_equal @testval @expectedval_)_) ~"if then else"(_@result !no ~(_cram (|$"failure" (|$"expected" @expectedval|) (|$"found" @testval|)|) @results_)_)|)_) ~(_bind @verify-true &"_test"(|~(_let @result ~(_eval @test_)_) ~"if then else"(_@result !no ~(_cram (|$"failure, was not true" @test|) @results_)_)|)_) ~(_bind @wrap-up &(|~"if then else"(|~(_is-empty @results_) ~(_cram $"all tests passed." @results_) ~(_cram $"some tests failed." @results_)|)|)_) ~(_bind @add-kv-test &(|~(_use @table_) ~(_let @t (||)_) ~(_let @t ~"add-key value to"(_$"apple" #100 @t_)_) ~(_let @t ~"add-key value to"(_$"pear" #101 @t_)_) ~(_verify @t (|(|$"pear" #101|) (|$"apple" #100|)|)_)|)_) ~(_bind @remove-test &(|~(_use @table_) ~(_let @t (||)_) ~(_let @t ~"add-key value to"(_$"apple" #100 @t_)_) ~(_let @t ~"add-key value to"(_$"pear" #101 @t_)_) ~(_let @t ~"add-key value to"(_$"pear" #-1 @t_)_) ~(_let @t ~(_remove-entries $"pear" @t_)_) ~(_verify @t (|(|$"apple" #100|)|)_)|)_) ~(_bind @get-test &(|~(_use @table_) ~(_let @t (||)_) ~(_let @t ~"add-key value to"(_$"apple" #100 @t_)_) ~(_let @t ~"add-key value to"(_$"pear" #101 @t_)_) ~(_let @v ~(_get-value $"apple" @t_)_) ~(_verify @v #100_)|)_) ~(_bind @is-in-test &(|~(_use @table_) ~(_let @t (||)_) ~(_let @t ~"add-key value to"(_$"apple" #100 @t_)_) ~(_let @t ~"add-key value to"(_$"pear" #101 @t_)_) ~(_verify ~"is-key in"(_$"apple" @t_) !yes_) ~(_verify ~"is-key in"(_$"banana" @t_) !no_)|)_) ~(_bind @tests &"unused"(|~(_add-kv-test _) ~(_remove-test _) ~(_get-test _) ~(_is-in-test _) ~(_wrap-up _) @results|)_) *"tests"(_~(_import @table-functions_)_)|)