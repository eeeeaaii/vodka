v2:~(|package-named--is @util ~(_bind--to @LOG [doc](||)_) ~(_bind--to @log &"() nex"(|~(_hard-push--into ~(_copy @nex_) @LOG_)|)_) ~(_bind--to @hhead &" lst()"(|~(_head ~(_head @lst_)_)|)_) ~(_bind--to @htail &" lst()"(|~(_head ~(_tail @lst_)_)|)_) ~(_bind--to @thead &" lst()"(|~(_tail ~(_head @lst_)_)|)_) ~(_bind--to @ttail &" lst()"(|~(_tail ~(_tail @lst_)_)|)_) ~(_bind--to @second &" lst()"(|~(_head ~(_tail @lst_)_)|)_) ~(_bind--to @third &" lst()"(|~(_head ~(_tail ~(_tail @lst_)_)_)|)_) ~(_bind--to @fourth &" lst()"(|~(_head ~(_tail ~(_tail ~(_tail @lst_)_)_)_)|)_) ~(_bind--to @reverse &"() lst()"(|~(|reduce--with--starting @lst &" item accum()"(|~(_push--into @item @accum_)|) (||)|)|)_) ~(_bind--to @flatten &"() lst()"(|~(_let @recurse-flatten &" nex dlist()"(|~(|first-non-nil ~(_if--then ~(_not ~(_is-list @nex_)_) ~(_hard-push--into @nex @dlist_)_) ~(_if--then ~(_not ~(_is-empty @nex_)_) ~(|begin ~(_recurse-flatten ~(_tail @nex_) @dlist_) ~(_recurse-flatten ~(_head @nex_) @dlist_)|)_) [nil]|)|)_) ~(_let--be @r (||)_) ~(_recurse-flatten @lst @r_) @r|)_) ~(_bind--to @do--for-all-atoms-in &" f& nex"(|~(|first-non-nil ~(_if--then ~(_not ~(_is-list @nex_)_) ~(_f @nex_)_) ~(_if--then ~(_is-expectation @nex_) @nex_) ~(_if--then ~(_is-empty @nex_) @nex_) ~(_if--then !yes ~(|push--into ~(_do--for-all-atoms-in @f ~(_head @nex_)_) ~(_do--for-all-atoms-in @f ~(_tail @nex_)_)|)_)|)|)_) ~(_bind--to @do--for-all-atoms-in--that-satisfy &" nex testf& dof&"(|~(|first-non-nil ~(_if--then ~(_not ~(_is-list @nex_)_) ~(|if--then--else ~(_testf @nex_) ~(_dof @nex_) @nex|)_) ~(_if--then ~(_is-expectation @nex_) @nex_) ~(_if--then ~(_is-empty @nex_) @nex_) ~(_if--then !yes ~(|push--into ~(_do--for-all-items-in--that-satisfy @dof ~(_head @nex_) @testf_) ~(_do--for-all-items-in--that-satisfy @dof ~(_tail @nex_) @testf_)|)_)|)|)_) ~(_bind--to @do--for-all-nexes-in--that-satisfy &" dof& nex testf&"(|~(|first-non-nil ~(_if--then ~(_testf @nex_) ~(_dof @nex_)_) ~(_if--then ~(_not ~(_is-list @nex_)_) @nex_) ~(_if--then ~(_is-expectation @nex_) @nex_) ~(_if--then ~(_is-empty @nex_) @nex_) ~(_if !yes ~(|push--into ~(_util:do--for-all-children-of--that-satisfy @dof ~(_head @nex_) @testf_) ~(_util:do--for-all-children-of--that-satisfy @dof ~(_tail @nex_) @testf_)|)_)|)|)_) ~(_bind--to @get-child-number--from &" n# lst()"(|~(|if--then--else ~(_::eq:: @n #0_) ~(_head @lst_) ~(_get-child-number--from ~(_- @n #1_) ~(_tail @lst_)_)|)|)_) ~(_bind--to @length-of &"# lst()"(|~(|reduce--with--given @lst &" item accum#"(|~(_::pl:: @accum #1_)|) #0|)|)_) ~(_bind--to @concatenate-lists &"() lst1() lst2()"(|~(|if ~(_is-empty @lst1_) ~(_copy @lst2_) ~(_push--into ~(_head @lst1_) ~(_util:concatenate-lists ~(_tail @lst1_) @lst2_)_)|)|)_) ~(_bind--to @put-contents-of--in &"() lst() dstlst()"(|~(_concatenate-lists @lst @dstlst_)|)_) ~(_bind--to @--contains-item-satisfying &"! lst() f&"(|~(|reduce--with--given @lst &" item accum()"(|~(|if--then--else ~(_f @item_) !yes @accum|)|) !no|)|)_) ~(_bind--to @--contains-number &"! lst() a#%"(|~(_util:--contains-item-satisfying @lst &"! b#%"(|~(_::eq:: @a @b_)|)_)|)_) ~(_bind--to @get-list-with-members-of--that-satisfy &"() lst() f&"(|~(_filter--with @list @f_)|)_) ~(_bind--to @get-value-for-key--in-table &" key table()"(|~(_let @reclookup &" temptable()"(|~(|if--then ~(_not ~(_is-empty @temptable_)_) ~(|begin ~(_let--be @entry ~(_head @temptable_)_) ~(_let--be @thiskey ~(_head @entry_)_) ~(_let--be @value ~(_head ~(_tail @entry_)_)_) ~(|if--then--else ~(_equal @key @thiskey_) @value ~(_reclookup ~(_tail @temptable_)_)|)|)|)|)_) ~(_reclookup @table_)|)_) ~(_bind--to @remove-all-entries-with-key--from-table &"() key table()"(|~(|reduce--with--given @table &" item accum()"(|~(|if--then--else ~(_equal @key ~(_head @item_)_) @accum ~(_push--into @item @accum_)|)|) (||)|)|)_) ~(_bind--to @add-key--and-value--to-table &" key value table()"(|~(_push--into ~(_push--into @key ~(_push--into @value (||)_)_) @table_)|)_) ~(_bind--to @is-key--in-table &"! key table()"(|~(_list--contains-item-satisfying @table &" entry"(|~(_equal @key ~(_head @entry_)_)|)_)|)_)|)