v2:~(|begin ~(_bind @results (||)_) ~(_bind @verify &"testval expectedval"(|~(_let @result ~(_equal @testval @expectedval_)_) ~"if then else"(_@result !no ~(_cram (|$"failure" (|$"expected" @expectedval|) (|$"found" @testval|)|) @results_)_)|)_) ~(_bind @verify-true &"_test"(|~(_let @result ~(_eval @test_)_) ~"if then else"(_@result !no ~(_cram (|$"failure, was not true" @test|) @results_)_)|)_) ~(_bind @wrap-up &(|~"if then else"(|~(_is-empty @results_) ~(_cram $"all tests passed." @results_) ~(_cram $"some tests failed." @results_)|)|)_) ~(_bind @inwhendotest &(|~(_use @traversal_) ~(_bind @r ~"in when do"(_(|#0 %0.0 (|#0 %0.0|)|) @is-integer &"n"(_$"a"_)_)_) ~(_verify @r (|$"a" %0.0 (|$"a" %0.0|)|)_)|)_) ~(_bind @inwhenatomdotest &(|~(_use @traversal_) ~(_bind @r ~"in when-atom-do"(_(|#0 %0.0 (|#0 %0.0|)|) &"n"(_$"a"_)_)_) ~(_verify @r (|$"a" $"a" (|$"a" $"a"|)|)_)|)_) ~(_bind @inwhenreplacewithtest &(|~(_use @traversal_) ~(_bind @r ~"in when replace-with"(_(|#0 %0.0 (|#0 %0.0|)|) @is-integer $"a"_)_) ~(_verify @r (|$"a" %0.0 (|$"a" %0.0|)|)_)|)_) ~(_bind @inisthereatest &(|~(_use @traversal_) ~(_let @r ~"in is-there-a"(_(|#0 %0.0 (|#0 $"a"|)|) &"n"(_~(_is-string @n_)_)_)_) ~(_verify @r !yes_) ~(_let @r ~"in is-there-a"(_(|#0 %0.0 (|#0 %0.0|)|) &"n"(_~(_is-string @n_)_)_)_) ~(_verify @r !no_)|)_) ~(_bind @inistherethenumbertest &(|~(_use @traversal_) ~(_let @r ~"in is-there-the-number"(_(|#0 %0.0 (|#0 %0.0|)|) #0_)_) ~(_verify @r !yes_) ~(_let @r ~"in is-there-the-number"(_(|#0 %0.0 (|#0 %0.0|)|) #3_)_) ~(_verify @r !no_)|)_) ~(_bind @inwhenenlisttest &(|~(_use @traversal_) ~(_let @r ~"in when enlist"(_(|#0 %0.0 (|#0 %0.0|)|) @is-integer_)_) ~(_verify @r (|#0 #0|)_)|)_) ~(_bind @tests &"unused"(|~(_inwhendotest _) ~(_inwhenatomdotest _) ~(_inwhenreplacewithtest _) ~(_inisthereatest _) ~(_inistherethenumbertest _) ~(_inwhenenlisttest _) ~(_wrap-up _) @results|)_) *"tests"(_~(_import @traversal-functions_)_)|)