{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,IAAI,WAAW;AAAK,IAAI,WAAW;AAAK,IAAI,aAAa;AAAM,IAAI,eAAe;AAAmB,IAAI,cAAc;AAAM,OAAO,MAAM,CAAC,aAAa,GAAG;AAAmB;AAE9K,8JAA8J,GAC9J;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,GACA,IAAI,aAAa;AACjB,IAAI,YAAY,OAAO,MAAM,CAAC,MAAM;AACpC,SAAS,OAAO,UAAU;IACxB,UAAU,IAAI,CAAC,IAAI,EAAE;IACrB,IAAI,CAAC,GAAG,GAAG;QACT,MAAM,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW;QACvC,kBAAkB,EAAE;QACpB,mBAAmB,EAAE;QACrB,QAAQ,SAAU,EAAE;YAClB,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,YAAa;QAChD;QACA,SAAS,SAAU,EAAE;YACnB,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC;QAC9B;IACF;IACA,OAAO,MAAM,CAAC,OAAO,CAAC,WAAW,GAAG;AACtC;AACA,OAAO,MAAM,CAAC,MAAM,GAAG;AACvB,OAAO,MAAM,CAAC,OAAO,GAAG,CAAC;AACzB,IAAI,cAAc,0BAA0B,KAAI,gBAAgB,mCAAmC,KAAI,eAAe,mCAAmC;AAEzJ,SAAS;IACP,OAAO,YAAa,CAAA,SAAS,QAAQ,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,QAAQ,GAAG,WAAU;AAC9F;AACA,SAAS;IACP,OAAO,YAAY,SAAS,IAAI;AAClC;AAEA,wCAAwC;AACxC,IAAI,SAAS,OAAO,MAAM,CAAC,MAAM;AACjC,IAAI,AAAC,CAAA,CAAC,UAAU,CAAC,OAAO,eAAe,AAAD,KAAM,OAAO,cAAc,aAAa;IAC5E,IAAI,WAAW;IACf,IAAI,OAAO;IACX,IAAI,WAAW,cAAc,SAAS,QAAQ,IAAI,YAAY,CAAC;QAAC;QAAa;QAAa;KAAU,CAAC,QAAQ,CAAC,YAAY,QAAQ;IAClI,IAAI;IACJ,IAAI,aACF,KAAK,IAAI,YAAY;SAErB,IAAI;QACF,KAAK,IAAI,UAAU,WAAW,QAAQ,WAAY,CAAA,OAAO,MAAM,OAAO,EAAC,IAAK;IAC9E,EAAE,OAAO,KAAK;QACZ,IAAI,IAAI,OAAO,EACb,QAAQ,KAAK,CAAC,IAAI,OAAO;QAE3B,KAAK,CAAC;IACR;IAGF,wBAAwB;IACxB,IAAI,SAAS,OAAO,YAAY,cAAc,OAAO,WAAW,cAAc,OAAO,SAAS;IAE9F,oDAAoD;IACpD,0DAA0D;IAC1D,IAAI,oBAAoB;IACxB,IAAI;QACD,CAAA,GAAG,IAAG,EAAG;IACZ,EAAE,OAAO,KAAK;QACZ,oBAAoB,IAAI,KAAK,CAAC,QAAQ,CAAC;IACzC;IAEA,aAAa;IACb,GAAG,SAAS,GAAG,eAAgB,MAAM,wBAAwB,GAAzB;QAClC,gBAAgB,CAAC,EAAE,0BAA0B;QAC7C,iBAAiB,EAAE;QACnB,kBAAkB,EAAE;QACpB,IAAI,KAAK,eAAe,MAAK,KAAK,KAAK,CAAC,MAAM,IAAI;QAClD,IAAI,KAAK,IAAI,KAAK,UAAU;YAC1B,uCAAuC;YACvC,IAAI,OAAO,aAAa,aACtB;YAEF,IAAI,SAAS,KAAK,MAAM,CAAC,MAAM,CAAC,CAAA,QAAS,MAAM,OAAO,KAAK;YAE3D,oBAAoB;YACpB,IAAI,UAAU,OAAO,KAAK,CAAC,CAAA;gBACzB,OAAO,MAAM,IAAI,KAAK,SAAS,MAAM,IAAI,KAAK,QAAQ,eAAe,OAAO,MAAM,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,MAAM,YAAY;YACvH;YACA,IAAI,SAAS;gBACX,QAAQ,KAAK;gBAEb,yEAAyE;gBACzE,IAAI,OAAO,WAAW,eAAe,OAAO,gBAAgB,aAC1D,OAAO,aAAa,CAAC,IAAI,YAAY;gBAEvC,MAAM,gBAAgB;gBAEtB,0BAA0B;gBAC1B,IAAI,kBAAkB,CAAC,EAAE,0BAA0B;gBACnD,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,MAAM,EAAE,IAAK;oBAC/C,IAAI,KAAK,eAAe,CAAC,EAAE,CAAC,EAAE;oBAC9B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,WAAW,eAAe,CAAC,EAAE,CAAC,EAAE,EAAE;wBAClC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;gBAEA,8FAA8F;gBAC9F,kBAAkB,CAAC;gBACnB,IAAK,IAAI,IAAI,GAAG,IAAI,eAAe,MAAM,EAAE,IAAK;oBAC9C,IAAI,KAAK,cAAc,CAAC,EAAE,CAAC,EAAE;oBAC7B,IAAI,CAAC,eAAe,CAAC,GAAG,EAAE;wBACxB,UAAU,cAAc,CAAC,EAAE,CAAC,EAAE,EAAE;wBAChC,eAAe,CAAC,GAAG,GAAG;oBACxB;gBACF;YACF,OAAO;QACT;QACA,IAAI,KAAK,IAAI,KAAK,SAAS;YACzB,+BAA+B;YAC/B,KAAK,IAAI,kBAAkB,KAAK,WAAW,CAAC,IAAI,CAAE;gBAChD,IAAI,QAAQ,eAAe,SAAS,GAAG,eAAe,SAAS,GAAG,eAAe,KAAK;gBACtF,QAAQ,KAAK,CAAC,4BAAkB,eAAe,OAAO,GAAG,OAAO,QAAQ,SAAS,eAAe,KAAK,CAAC,IAAI,CAAC;YAC7G;YACA,IAAI,OAAO,aAAa,aAAa;gBACnC,gCAAgC;gBAChC;gBACA,IAAI,UAAU,mBAAmB,KAAK,WAAW,CAAC,IAAI;gBACtD,aAAa;gBACb,SAAS,IAAI,CAAC,WAAW,CAAC;YAC5B;QACF;IACF;IACA,IAAI,cAAc,WAAW;QAC3B,GAAG,OAAO,GAAG,SAAU,CAAC;YACtB,IAAI,EAAE,OAAO,EACX,QAAQ,KAAK,CAAC,EAAE,OAAO;QAE3B;QACA,GAAG,OAAO,GAAG;YACX,QAAQ,IAAI,CAAC;QACf;IACF;AACF;AACA,SAAS;IACP,IAAI,UAAU,SAAS,cAAc,CAAC;IACtC,IAAI,SAAS;QACX,QAAQ,MAAM;QACd,QAAQ,GAAG,CAAC;IACd;AACF;AACA,SAAS,mBAAmB,WAAW;IACrC,IAAI,UAAU,SAAS,aAAa,CAAC;IACrC,QAAQ,EAAE,GAAG;IACb,IAAI,YAAY;IAChB,KAAK,IAAI,cAAc,YAAa;QAClC,IAAI,QAAQ,WAAW,MAAM,CAAC,MAAM,GAAG,WAAW,MAAM,CAAC,MAAM,CAAC,CAAC,GAAG;YAClE,OAAO,CAAC,EAAE,EAAE;sCACoB,EAAE,mBAAmB,MAAM,QAAQ,EAAE,2FAA2F,EAAE,MAAM,QAAQ,CAAC;AACvL,EAAE,MAAM,IAAI,CAAC,CAAC;QACV,GAAG,MAAM,WAAW,KAAK;QACzB,aAAa,CAAC;;;oBAGL,EAAE,WAAW,OAAO,CAAC;;aAErB,EAAE,MAAM;;UAEX,EAAE,WAAW,KAAK,CAAC,GAAG,CAAC,CAAA,OAAQ,uBAAa,OAAO,UAAU,IAAI,CAAC,IAAI;;QAExE,EAAE,WAAW,aAAa,GAAG,CAAC,8CAAuC,EAAE,WAAW,aAAa,CAAC,sCAAsC,CAAC,GAAG,GAAG;;IAEjJ,CAAC;IACH;IACA,aAAa;IACb,QAAQ,SAAS,GAAG;IACpB,OAAO;AACT;AACA,SAAS;IACP,IAAI,YAAY,UACd,SAAS,MAAM;SACV,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,MAAM,EAC1D,OAAO,OAAO,CAAC,MAAM;AAEzB;AACA,SAAS,WAAW,MAAM,EAAE,EAAE,EAAE,mCAAmC;IACjE,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH,OAAO,EAAE;IAEX,IAAI,UAAU,EAAE;IAChB,IAAI,GAAG,GAAG;IACV,IAAK,KAAK,QACR,IAAK,KAAK,OAAO,CAAC,EAAE,CAAC,EAAE,CAAE;QACvB,MAAM,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACtB,IAAI,QAAQ,MAAM,MAAM,OAAO,CAAC,QAAQ,GAAG,CAAC,IAAI,MAAM,GAAG,EAAE,KAAK,IAC9D,QAAQ,IAAI,CAAC;YAAC;YAAQ;SAAE;IAE5B;IAEF,IAAI,OAAO,MAAM,EACf,UAAU,QAAQ,MAAM,CAAC,WAAW,OAAO,MAAM,EAAE;IAErD,OAAO;AACT;AACA,SAAS,WAAW,IAAI;IACtB,IAAI,OAAO,KAAK,YAAY,CAAC;IAC7B,IAAI,CAAC,MACH;IAEF,IAAI,UAAU,KAAK,SAAS;IAC5B,QAAQ,MAAM,GAAG;QACf,IAAI,KAAK,UAAU,KAAK,MACtB,aAAa;QACb,KAAK,UAAU,CAAC,WAAW,CAAC;IAEhC;IACA,QAAQ,YAAY,CAAC,QACrB,aAAa;IACb,KAAK,KAAK,CAAC,IAAI,CAAC,EAAE,GAAG,MAAM,KAAK,GAAG;IACnC,aAAa;IACb,KAAK,UAAU,CAAC,YAAY,CAAC,SAAS,KAAK,WAAW;AACxD;AACA,IAAI,aAAa;AACjB,SAAS;IACP,IAAI,YACF;IAEF,aAAa,WAAW;QACtB,IAAI,QAAQ,SAAS,gBAAgB,CAAC;QACtC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,gCAAgC;YAChC,IAAI,KAAK,WAAW,MAAK,KAAK,CAAC,EAAE,CAAC,YAAY,CAAC;YAC/C,IAAI,WAAW;YACf,IAAI,sBAAsB,aAAa,cAAc,IAAI,OAAO,mDAAmD,WAAW,IAAI,CAAC,QAAQ,KAAK,OAAO,CAAC,WAAW,MAAM;YACzK,IAAI,WAAW,gBAAgB,IAAI,CAAC,SAAS,KAAK,OAAO,CAAC,SAAS,MAAM,MAAM,KAAK,CAAC;YACrF,IAAI,CAAC,UACH,WAAW,KAAK,CAAC,EAAE;QAEvB;QACA,aAAa;IACf,GAAG;AACL;AACA,SAAS,YAAY,KAAK;IACxB,IAAI,MAAM,IAAI,KAAK,MAAM;QACvB,IAAI,OAAO,aAAa,aAAa;YACnC,IAAI,SAAS,SAAS,aAAa,CAAC;YACpC,OAAO,GAAG,GAAG,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;YACzC,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,IAAI,GAAG;YAEhB,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;gBACJ,OAAO,MAAM,GAAG,IAAM,QAAQ;gBAC9B,OAAO,OAAO,GAAG;gBAChB,CAAA,iBAAiB,SAAS,IAAI,AAAD,MAAO,QAAQ,mBAAmB,KAAK,KAAK,eAAe,WAAW,CAAC;YACvG;QACF,OAAO,IAAI,OAAO,kBAAkB,YAAY;YAC9C,iBAAiB;YACjB,IAAI,MAAM,YAAY,KAAK,YACzB,OAAO,OAAmB,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;iBAEtD,OAAO,IAAI,QAAQ,CAAC,SAAS;gBAC3B,IAAI;oBACF,cAA0B,MAAM,GAAG,GAAG,QAAQ,KAAK,GAAG;oBACtD;gBACF,EAAE,OAAO,KAAK;oBACZ,OAAO;gBACT;YACF;QAEJ;IACF;AACF;AACA,eAAe,gBAAgB,MAAM;IACnC,OAAO,eAAe,GAAG,OAAO,MAAM,CAAC;IACvC,IAAI;IACJ,IAAI;QACF,kEAAkE;QAClE,gEAAgE;QAChE,gEAAgE;QAChE,mDAAmD;QACnD,iDAAiD;QACjD,mDAAmD;QACnD,IAAI,CAAC,mBAAmB;YACtB,IAAI,WAAW,OAAO,GAAG,CAAC,CAAA;gBACxB,IAAI;gBACJ,OAAO,AAAC,CAAA,eAAe,YAAY,MAAK,MAAO,QAAQ,iBAAiB,KAAK,IAAI,KAAK,IAAI,aAAa,KAAK,CAAC,CAAA;oBAC3G,oBAAoB;oBACpB,IAAI,UAAU,OAAO,OAAO,IAAI,OAAO,OAAO,CAAC,WAAW,GAAG,gBAAgB,IAAI,KAAK,OAAO,4BAA4B,eAAe,kBAAkB,0BAA0B;wBAClL,OAAO,OAAO,CAAC,MAAM;wBACrB;oBACF;oBACA,MAAM;gBACR;YACF;YACA,kBAAkB,MAAM,QAAQ,GAAG,CAAC;QACtC;QACA,OAAO,OAAO,CAAC,SAAU,KAAK;YAC5B,SAAS,OAAO,MAAM,CAAC,IAAI,EAAE;QAC/B;IACF,SAAU;QACR,OAAO,OAAO,eAAe;QAC7B,IAAI,iBACF,gBAAgB,OAAO,CAAC,CAAA;YACtB,IAAI,QAAQ;gBACV,IAAI;gBACH,CAAA,kBAAkB,SAAS,IAAI,AAAD,MAAO,QAAQ,oBAAoB,KAAK,KAAK,gBAAgB,WAAW,CAAC;YAC1G;QACF;IAEJ;AACF;AACA,SAAS,SAAS,OAAO,kBAAkB,GAAnB,EAAuB,MAAM,cAAc,GAAf;IAClD,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,MAAM,IAAI,KAAK,OACjB;SACK,IAAI,MAAM,IAAI,KAAK,MAAM;QAC9B,IAAI,OAAO,MAAM,YAAY,CAAC,OAAO,aAAa,CAAC;QACnD,IAAI,MAAM;YACR,IAAI,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE;gBACrB,iEAAiE;gBACjE,oHAAoH;gBACpH,IAAI,UAAU,OAAO,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE;gBAClC,IAAK,IAAI,OAAO,QACd,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,CAAC,IAAI,EAAE;oBAC5C,IAAI,KAAK,OAAO,CAAC,IAAI;oBACrB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;oBAC7C,IAAI,QAAQ,MAAM,KAAK,GACrB,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;gBAElC;YAEJ;YACA,IAAI,mBAGF,AAFA,4DAA4D;YAC5D,+CAA+C;YAC9C,CAAA,GAAG,IAAG,EAAG,MAAM,MAAM;YAGxB,aAAa;YACb,IAAI,KAAK,OAAO,eAAe,CAAC,MAAM,EAAE,CAAC;YACzC,OAAO,CAAC,MAAM,EAAE,CAAC,GAAG;gBAAC;gBAAI;aAAK;QAChC,OAAO,IAAI,OAAO,MAAM,EACtB,SAAS,OAAO,MAAM,EAAE;IAE5B;AACF;AACA,SAAS,UAAU,MAAM,EAAE,EAAE;IAC3B,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,OAAO,CAAC,GAAG,EAAE;QACf,8EAA8E;QAC9E,IAAI,OAAO,OAAO,CAAC,GAAG,CAAC,EAAE;QACzB,IAAI,UAAU,EAAE;QAChB,IAAK,IAAI,OAAO,KAAM;YACpB,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI;YACtD,IAAI,QAAQ,MAAM,KAAK,GACrB,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI;QAE1B;QAEA,sGAAsG;QACtG,OAAO,OAAO,CAAC,GAAG;QAClB,OAAO,OAAO,KAAK,CAAC,GAAG;QAEvB,0BAA0B;QAC1B,QAAQ,OAAO,CAAC,CAAA;YACd,UAAU,OAAO,MAAM,CAAC,IAAI,EAAE;QAChC;IACF,OAAO,IAAI,OAAO,MAAM,EACtB,UAAU,OAAO,MAAM,EAAE;AAE7B;AACA,SAAS,eAAe,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACjF,IAAI,kBAAkB,QAAQ,IAAI,eAChC,OAAO;IAGT,uGAAuG;IACvG,IAAI,UAAU,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;IAC7C,IAAI,WAAW;IACf,MAAO,QAAQ,MAAM,GAAG,EAAG;QACzB,IAAI,IAAI,QAAQ,KAAK;QACrB,IAAI,IAAI,kBAAkB,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE,EAAE;QACtC,IAAI,GACF,+EAA+E;QAC/E,WAAW;aACN;YACL,yDAAyD;YACzD,IAAI,IAAI,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;YAC3C,IAAI,EAAE,MAAM,KAAK,GAAG;gBAClB,kFAAkF;gBAClF,WAAW;gBACX;YACF;YACA,QAAQ,IAAI,IAAI;QAClB;IACF;IACA,OAAO;AACT;AACA,SAAS,kBAAkB,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ,EAAgB,aAAa,uCAAuC,GAAxC;IACpF,IAAI,UAAU,OAAO,OAAO;IAC5B,IAAI,CAAC,SACH;IAEF,IAAI,gBAAgB,CAAC,YAAY,CAAC,OAAO,aAAa,CAAC,EAAE;QACvD,2EAA2E;QAC3E,yEAAyE;QACzE,IAAI,CAAC,OAAO,MAAM,EAChB,OAAO;QAET,OAAO,eAAe,OAAO,MAAM,EAAE,IAAI;IAC3C;IACA,IAAI,aAAa,CAAC,GAAG,EACnB,OAAO;IAET,aAAa,CAAC,GAAG,GAAG;IACpB,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,gBAAgB,IAAI,CAAC;QAAC;QAAQ;KAAG;IACjC,IAAI,CAAC,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAAE;QAC/D,eAAe,IAAI,CAAC;YAAC;YAAQ;SAAG;QAChC,OAAO;IACT;AACF;AACA,SAAS,WAAW,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IACjD,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,OAAO,OAAO,CAAC,GAAG,GAAG,CAAC;IACtB,IAAI,UAAU,OAAO,GAAG,EACtB,OAAO,GAAG,CAAC,IAAI,GAAG,OAAO,OAAO,CAAC,GAAG;IAEtC,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,iBAAiB,CAAC,MAAM,EAC7D,OAAO,GAAG,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAU,EAAE;QAC/C,GAAG,OAAO,OAAO,CAAC,GAAG;IACvB;IAEF,OAAO,OAAO,KAAK,CAAC,GAAG;AACzB;AACA,SAAS,UAAU,OAAO,kBAAkB,GAAnB,EAAuB,GAAG,WAAW,GAAZ;IAChD,sBAAsB;IACtB,OAAO;IAEP,6DAA6D;IAC7D,IAAI,SAAS,OAAO,KAAK,CAAC,GAAG;IAC7B,IAAI,UAAU,OAAO,GAAG,IAAI,OAAO,GAAG,CAAC,gBAAgB,CAAC,MAAM,EAC5D,OAAO,GAAG,CAAC,gBAAgB,CAAC,OAAO,CAAC,SAAU,EAAE;QAC9C,IAAI,qBAAqB,GAAG;YAC1B,OAAO,WAAW,OAAO,MAAM,CAAC,IAAI,EAAE;QACxC;QACA,IAAI,sBAAsB,eAAe,MAAM,EAAE;YAC/C,mBAAmB,OAAO,CAAC,SAAU,CAAC;gBACpC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,EAAE;YACvB;YAEA,+BAA+B;YAC/B,eAAe,IAAI,CAAC,KAAK,CAAC,gBAAgB;QAC5C;IACF;AAEJ;;;ACvfA;AACA,CAAA,GAAA,cAAK,AAAD;;;ACDJ;;;;;;;;;;;;;;;AAeA;;AAkUA,2CACC;AADD,8CAEC;AAFD,+CAGC;AAHD,oDAIC;AAJD,qDAKC;AALD,oDAMC;AAND,gDAOC;AAPD,qDAQC;AARD,+CASC;AAzUD;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAGA,cAAc;AAEd,uCAAuC;AACvC,4DAA4D;AAC5D,0EAA0E;AAE1E,IAAI,OAAO;AAEX,qBAAqB;AACrB,IAAI,SAAS,CAAC;AAEd,SAAS;IACR,CAAA,GAAA,kBAAO,AAAD,EAAE,IAAI;AACb;AAEA,SAAS;IACR,CAAA,GAAA,kBAAO,AAAD,EAAE,QAAQ;AACjB;AAEA,SAAS,eAAe,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;IAC5E,IAAI,IAAI,CAAA,GAAA,8BAAa,AAAD,EAAE,QAAQ,CAAC,SAAS,UAAU,UAAU,SAAS,SAAS;IAE9E,oEAAoE;IACpE,mFAAmF;IACnF,IAAI,CAAC,GACJ,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;IAE5C,OAAO;AACR;AAEA,OAAO;AACP,SAAS,sBAAsB,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;IACnF,CAAA,GAAA,4CAAoB,AAAD,EAAE,iBAAiB,CAAC,SAAS,UAAU,UAAU,SAAS,SAAS;IACtF,6DAA6D;IAC7D,OAAO,CAAA,GAAA,8BAAa,AAAD,EAAE,YAAY,CAAC,SAAS,UAAU,UAAU,SAAS,SAAS;AAClF;AAEA,IAAI,iBAAiB,EAAE;AAEvB,wEAAwE;AACxE,yDAAyD;AACzD,SAAS,WAAW,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO;IAChE,4DAA4D;IAC5D,kBAAkB;IAClB,iBAAiB;IAIjB,+DAA+D;IAC/D,4DAA4D;IAC5D,2DAA2D;IAC3D,yDAAyD;IACzD,wDAAwD;IACxD,qDAAqD;IACrD,kDAAkD;IAClD,CAAA,GAAA,4CAAoB,AAAD,EAAE,iBAAiB,CAAC,SAAS,UAAU,UAAU,SAAS,SAAS;IACtF,CAAA,GAAA,4CAAoB,AAAD,EAAE,8BAA8B;IACnD,OAAO,OAAO,uDAAuD;AACtE;AAGA,SAAS;IACR,wCAAwC;IACxC,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAmB,CAAA,GAAA,oCAAmB,AAAD;IACvD,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAyB,CAAA,GAAA,gDAAyB,AAAD;IACnE,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAuB,CAAA,GAAA,4CAAuB,AAAD;IAC/D,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAmB,CAAA,GAAA,oCAAmB,AAAD;IACvD,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAkB,CAAA,GAAA,kCAAkB,AAAD;IACrD,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAa,CAAA,GAAA,0BAAc,AAAD;IAC5C,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAiB,CAAA,GAAA,gCAAiB,AAAD;IACnD,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAsB,CAAA,GAAA,0CAAsB,AAAD;IAC7D,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAmB,CAAA,GAAA,oCAAmB,AAAD;IACvD,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAkB,CAAA,GAAA,kCAAkB,AAAD;IACrD,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAoB,CAAA,GAAA,sCAAoB,AAAD;IACzD,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAuB,CAAA,GAAA,4CAAuB,AAAD;IAC/D,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAkB,CAAA,GAAA,kCAAkB,AAAD;IACrD,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAqB,CAAA,GAAA,wCAAqB,AAAD;IAC3D,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAkB,CAAA,GAAA,kCAAkB,AAAD;IACrD,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAA6B,CAAA,GAAA,+CAA4B,AAAD;IAC1E,CAAA,GAAA,kCAAiB,AAAD,EAAE;IAAkB,CAAA,GAAA,kCAAkB,AAAD;AACtD;AAEA,SAAS,gBAAgB,IAAI;IAC5B,CAAA,GAAA,0BAAW,AAAD,EAAE,yBAAyB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,yBAAyB,KAAK;IAChF,IAAI,QAAQ,CAAA,GAAA,0BAAW,AAAD,EAAE,kCAAkC;IAC1D,KAAK,MAAM,CAAC;AACb;AAEA,SAAS;IACR,CAAA,GAAA,0BAAW,AAAD,EAAE,yBAAyB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,yBAAyB,KAAK;IAChF,IAAI,QAAQ,CAAA,GAAA,0BAAW,AAAD,EAAE,kCAAkC;IAC1D,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO,GAAG,cAAc,CAAC;IACrC,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO,GAAG,MAAM,CAAC;AAC9B;AAEA,SAAS;IACR,CAAA,GAAA,0BAAW,AAAD,EAAE,yBAAyB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,yBAAyB,KAAK;IAChF,IAAI,QAAQ,CAAA,GAAA,0BAAW,AAAD,EAAE,kCAAkC;IAC1D,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO,GAAG,cAAc,CAAC;IACrC,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAA,GAAA,8CAA2B,AAAD;IAC/D,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO,GAAG,cAAc;AACrC;AAEA,SAAS,mBAAmB,QAAQ;IACnC,IAAI,MAAM,CAAA,GAAA,kCAAe,AAAD,EAAE,2BAA2B,CACpD,QACA,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,mBAAmB,CACvC,QACA,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACnB,IAAI,MAAM,CAAA,GAAA,8BAAiB,AAAD,EAAE,KAAK,CAAA,GAAA,uBAAQ,AAAD;IACxC,IAAI,UAAU,KAAK,WAAW,CAAC;IAC/B,QAAQ,WAAW,CAAC;IACpB,CAAA,GAAA,0BAAW,AAAD,EAAE,kCAAkC,CAAC;AAChD;AAEA,SAAS;IACR,CAAA,GAAA,iCAAU,AAAD,EAAE,aAAa,SAAS,MAAM;QACtC,IAAI,UAAU,KAAK,WAAW,CAAC;QAC/B,QAAQ,WAAW,CAAC;QACpB,KAAK,aAAa,CAAC,CAAA,GAAA,mCAAgB,AAAD;QAClC,CAAA,GAAA,0BAAW,AAAD,EAAE,kCAAkC,CAAC;IAChD;AACD;AAEA,SAAS;IACR,KAAK,aAAa,CAAC,CAAA,GAAA,oCAAiB,AAAD;IACnC,KAAK,WAAW,CAAC;AAClB;AAGA,SAAS;IACR,IAAI,SAAS,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IACvD,IAAI,YAAY;IAChB,IAAI,OAAO,GAAG,CAAC,cAAc;QAC5B,YAAY,OAAO,GAAG,CAAC;QACvB,SAAM,SAAS,CAAC,aAAa;IAC9B,OACC,YAAY,SAAM,SAAS,CAAC;IAE7B,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;AAC1B;AAEA,SAAS;IACR,IAAI,SAAS,IAAI,gBAAgB,OAAO,QAAQ,CAAC,MAAM;IACvD,IAAI,OAAO,GAAG,CAAC,YACd,OAAO,OAAO,GAAG,CAAC;IAEnB,OAAO;AACR;AAEA,SAAS;IACR,CAAA,GAAA,wBAAU,AAAD,EAAE,UAAU;IACrB;IACA,yDAAyD;IACzD,IAAI,CAAA,GAAA,kBAAW,AAAD,IAAI,MACjB,MAAM,IAAI,MAAM;IAEjB,CAAA,GAAA,mBAAY,AAAD,EAAE;AACd;AAEA,SAAS;IACR,IAAI,CAAC,SAAM,KAAK,IAAI;QACnB,IAAI,OAAO,SAAS,sBAAsB,CAAC;QAC3C,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAChC,IAAI,CAAC,EAAE,CAAC,WAAW,GAAG;QAEvB,IAAI,QAAQ,SAAS,sBAAsB,CAAC;QAC5C,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IACjC,KAAK,CAAC,EAAE,CAAC,WAAW,GAAG;IAEzB;AACD;AAGA,SAAS,eAAe,CAAC;IACxB,CAAA,GAAA,oCAAoB,AAAD,EAAE,GAAG;IACxB,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB,IAChC,OAAO,sBAAsB,EAAE,GAAG,EAAE,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,EAAE,OAAO,EAAE,EAAE,OAAO,EAAE,EAAE,MAAM;SAEtF,OAAO;AAET;AAGA,uBAAuB;AAEvB,SAAS;IACR,CAAA,GAAA,6BAAW,AAAD;IACV,kCAAkC;IAClC;IACA;IAGD,yBAAyB;IACzB,eAAe;IAGd,CAAA,GAAA,wBAAU,AAAD,EAAE,UAAU;IAErB,IAAI,SAAM,QAAQ,CAAC,WAClB,CAAA,GAAA,qBAAW,AAAD;IAIX,CAAA,GAAA,8BAAa,AAAD,EAAE,mBAAmB,CAAC;QACjC,oBAAoB,SAAS,QAAQ;YACpC,SAAS,cAAc,CAAC,cAAc,SAAS,GAAG,AAAC,WAAY,YAAY;QAC5E;IAAC;IAEF,4BAA4B;IAC5B,OAAO,UAAU,GAAG;IACpB,OAAO,OAAO,GAAG,CAAA,GAAA,oBAAO,AAAD;IACvB;IAGD,8BAA8B;IAC9B,eAAe;IAId,yDAAyD;IACzD,IAAI,CAAA,GAAA,kBAAW,AAAD,IAAI,MACjB,MAAM,IAAI,MAAM;IAEjB,CAAA,GAAA,mBAAY,AAAD,EAAE;IAEb,8DAA8D;IAC9D,8CAA8C;IAC9C,qCAAqC;IACrC,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,aAAa;IAEhC,IAAI,SAAM,QAAQ,CAAC,eAAe;QACjC,CAAA,GAAA,kCAAkB,AAAD;QACjB,SAAS,KAAK,GAAG;IAClB;IAGA,SAAS,OAAO,GAAG,SAAS,CAAC;QAC5B,CAAA,GAAA,oCAAoB,AAAD,EAAE,GAAG;QACxB,OAAO;IACR;IACA,SAAS,OAAO,GAAG,SAAS,CAAC;QAC5B,CAAA,GAAA,oCAAoB,AAAD,EAAE,GAAG;QACxB,CAAA,GAAA,0BAAc,AAAD;QACb,OAAO;IACR;IACA,SAAS,SAAS,GAAG,SAAS,CAAC;QAC9B,CAAA,GAAA,yBAAe,AAAD,EAAE;QAChB,OAAO,eAAe;IACvB;IACA,IAAI,iBAAiB;IACrB,IAAI,CAAC,CAAC,CAAA,GAAA,4BAAU,AAAD,EAAE,IAAI,EACpB,mBAAmB,CAAA,GAAA,4BAAU,AAAD,EAAE,IAAI;SAC5B,IAAI,gBACV,mBAAmB;SACb,IAAI,CAAA,GAAA,iCAAgB,AAAD,IAAI,QAAQ,EACrC,kDAAkD;IAClD,8DAA8D;IAC9D,0CAA0C;IAC1C;SAEA;IAED,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;AAC5C;;;AC9UA;;;;;;;;;;;;;;;AAeA,GAGA,qDAAqD;AACrD,iDAAiD;AACjD,oDAAoD;AACpD,mDAAmD;AACnD,8CAA8C;AAC9C,+CAA+C;AAE/C,WAAW;AACX,iEAAiE;AACjE,gGAAgG;AAChG,cAAc;AACd,mDAAmD;AACnD,0FAA0F;AAC1F,sFAAsF;AACtF,wCAAwC;AAExC,gEAAgE;;;AAgRhE,gDAAS;AAzQT;AAEA;AACA;AACA;AACA;AACA;AAZA,MAAM,sBAAsB;AAC5B,MAAM,oBAAoB;AAC1B,MAAM,kBAAkB;AACxB,MAAM,0BAA0B;AAChC,MAAM,cAAc;AAUpB,MAAM,cAAc;AAEpB,MAAM;IACL,aAAc;QACb,IAAI,CAAC,QAAQ,GAAG,EAAE;QAClB,IAAI,CAAC,QAAQ,CAAC,oBAAoB,GAAG,EAAE;QACvC,IAAI,CAAC,QAAQ,CAAC,kBAAkB,GAAG,EAAE;QACrC,IAAI,CAAC,QAAQ,CAAC,gBAAgB,GAAG,EAAE;QACnC,IAAI,CAAC,QAAQ,CAAC,wBAAwB,GAAG,EAAE;QAC3C,IAAI,CAAC,QAAQ,CAAC,YAAY,GAAG,EAAE;IAChC;IAEA,aAAa;QACZ,CAAA,GAAA,4CAAoB,AAAD,EAAE,cAAc,CAAC,yBAAyB,IAAI;QACjE,CAAA,GAAA,4CAAoB,AAAD,EAAE,cAAc,CAAC,0BAA0B,IAAI;QAClE,CAAA,GAAA,4CAAoB,AAAD,EAAE,cAAc,CAAC,qBAAqB,IAAI;QAC7D,CAAA,GAAA,4CAAoB,AAAD,EAAE,cAAc,CAAC,+BAA+B,IAAI;QACvE,CAAA,GAAA,4CAAoB,AAAD,EAAE,cAAc,CAAC,kCAAkC,IAAI;QAC1E,CAAA,GAAA,4CAAoB,AAAD,EAAE,cAAc,CAAC,yBAAyB,IAAI;QACjE,CAAA,GAAA,4CAAoB,AAAD,EAAE,cAAc,CAAC,yBAAyB,IAAI;QACjE,CAAA,GAAA,4CAAoB,AAAD,EAAE,cAAc,CAAC,oCAAoC,IAAI;QAC5E,CAAA,GAAA,4CAAoB,AAAD,EAAE,cAAc,CAAC,yBAAyB,IAAI;QACjE,CAAA,GAAA,4CAAoB,AAAD,EAAE,cAAc,CAAC,aAAa,IAAI;IACtD;IAEA;;EAEC,GACD,sBAAsB,UAAU,EAAE;QACjC,eAAc,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO;YACV,QAAQ;YACR,cAAc;YACd,YAAY;YACZ,QAAQ,SAAS,KAAK;gBACpB,sBAAsB;gBACvB,OACC,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM,IACxB,MAAM,UAAU,IAAI,IAAI,CAAC,UAAU;YACxC;YACA,IAAI,SAAS;gBACZ,IAAI,CAAC,CAAA,GAAA,6BAAW,AAAD,EAAE,wBAAwB,EACxC,IAAI,CAAC,UAAU,CAAC,gBAAgB;YAElC;QACD;QACA,IAAI,CAAC,QAAQ,CAAC,wBAAwB,CAAC,IAAI,CAAC;QAC5C,IAAI,CAAC,+BAA+B,CAAC;IACtC;IAEA;;;;;;;EAOC,GACD,kBAAkB,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;QACxE,eAAc,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO;YACV,QAAQ;YACR,SAAS;YACT,UAAU;YACV,UAAU;YACV,SAAS;YACT,SAAS;YACT,QAAQ;YACR,cAAc;YACd,QAAQ;YACR,IAAI,SAAS;gBACZ,SAAM,cAAc,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM;YACzG;QACD;QACA,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,+BAA+B,CAAC;IACtC;IAGA;;EAEC,GACD,yBAAyB;QACxB,eAAc,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO;YACV,QAAQ;YACR,cAAc;YACd,QAAQ,SAAS,KAAK;gBACpB,sBAAsB;gBACvB,OACC,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM;YAC7B;YACA,IAAI,SAAS;gBACZ,SAAM,eAAe;YACtB;QACD;QACA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC;QACpC,IAAI,CAAC,+BAA+B,CAAC;IACtC;IAEA,iCAAiC;QAChC,eAAc,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO;YACV,QAAQ;YACR,cAAc;YACd,QAAQ,SAAS,KAAK;gBACrB,OACC,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM;YAC7B;YACA,IAAI,SAAS;gBACZ,SAAM,cAAc;YACrB;QACD;QACA,uDAAuD;QACvD,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,+BAA+B,CAAC;IACtC;IAEA,4BAA4B,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE;QAChE,eAAc,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO;YACV,QAAQ;YACR,QAAQ;YACR,cAAc;YACd,YAAY;YACZ,OAAO;YACP,UAAU;YACV,QAAQ;YACR,IAAI,SAAS;gBACZ,CAAA,GAAA,oDAAmB,AAAD,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,KAAK;YAC5E;QACD;QACA,yDAAyD;QACzD,IAAI,CAAC,QAAQ,CAAC,oBAAoB,CAAC,IAAI,CAAC;QACxC,IAAI,CAAC,+BAA+B,CAAC;IACtC;IAEA,sBAAsB,QAAQ,EAAE,MAAM,EAAE;QACvC,eAAc,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO;YACV,QAAQ;YACR,UAAU;YACV,QAAQ;YACR,cAAc;YACd,QAAQ;YACR,IAAI,SAAS;gBACZ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;YACjC;QACD;QACA,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,+BAA+B,CAAC;IACtC;IAEA,sBAAsB,QAAQ,EAAE,MAAM,EAAE;QACvC,eAAc,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO;YACV,QAAQ;YACR,UAAU;YACV,QAAQ;YACR,cAAc;YACd,QAAQ;YACR,IAAI,SAAS;gBACZ,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM;YACjC;QACD;QACA,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,+BAA+B,CAAC;IACtC;IAEA,iCAAiC,QAAQ,EAAE;QAC1C,eAAc,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO;YACV,QAAQ;YACR,UAAU;YACV,cAAc;YACd,QAAQ;YACR,IAAI,SAAS;gBACZ,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACjC;QACD;QACA,IAAI,CAAC,QAAQ,CAAC,kBAAkB,CAAC,IAAI,CAAC;QACtC,IAAI,CAAC,+BAA+B,CAAC;IACtC;IAEA,wBAAwB;QACvB,eAAc,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO;YACV,QAAQ;YACR,cAAc;YACd,QAAQ,SAAS,KAAK;gBACrB,OAAQ,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM;YACpC;YACA,IAAI,SAAS;gBACZ,SAAM,cAAc;YACrB;QACD;QACA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC;QACpC,IAAI,CAAC,+BAA+B,CAAC;IACtC;IAEA,YAAY;QACX,eAAc,QAAQ,GAAG,CAAC;QAC1B,IAAI,OAAO;YACV,QAAQ;YACR,cAAc;YACd,QAAQ,SAAS,KAAK;gBACrB,OAAQ,MAAM,MAAM,IAAI,IAAI,CAAC,MAAM;YACpC;YACA,IAAI,SAAS;gBACZ,CAAA,GAAA,QAAE,AAAD,EAAE,YAAY;YAChB;QACD;QACA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC;QAChC,IAAI,CAAC,+BAA+B,CAAC;IACtC;IAEA,gCAAgC,IAAI,EAAE;QACrC,WAAW,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,GAAG;IAC5C,2BAA2B;IAC3B,2BAA2B;IAC3B,qBAAqB;IACtB;IAEA,cAAc;QACb,uEAAuE;QACvE,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAK;YAC9C,IAAI,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,MAAM,GAAG,GAC7B,OAAO,IAAI,CAAC,QAAQ,CAAC,EAAE;QAEzB;QACA,OAAO;IACR;IAEA,mBAAmB;QAClB,IAAI,aAAa,IAAI,CAAC,WAAW;QACjC,IAAI,CAAC,YAAY,OAAO;QACxB,IAAI,OAAO,WAAW,KAAK;QAC3B,eAAc,QAAQ,GAAG,CAAC,CAAC,YAAY,EAAE,KAAK,MAAM,CAAC,CAAC;QACtD,+EAA+E;QAC/E,MAAM,WAAW,MAAM,GAAG,KAAK,UAAU,CAAC,EAAE,CAAC,YAAY,IAAI,UAAU,CAAC,EAAE,CAAC,MAAM,CAAC,MACjF,WAAW,KAAK;QAEjB,OAAO;IACR;IAEA,kBAAkB;QACjB,IAAI,OAAO,IAAI,CAAC,gBAAgB;QAChC,IAAI,CAAC,MACJ;QAED,KAAK,EAAE;QACP,IAAI,CAAC,+BAA+B;IACrC;AACD;AAEA,MAAM,aAAa,IAAI;;;AChTvB;;;;;;;;;;;;;;;AAeA;;AAoFA,wCAAS;AAAT,8CAAa;AAAb,8CAAuB;AAlFvB;AAEA;;;;;;;AAOA,GAEA,IAAI,SAAS;AAEb,SAAS;IACR,OAAO;AACR;AAEA,SAAS;IACR;AACD;AAEA,gFAAgF;AAChF,gFAAgF;AAChF,gFAAgF;AAEhF,2FAA2F;AAC3F,0FAA0F;AAC1F,uFAAuF;AACvF,wFAAwF;AACxF,oBAAoB;AAEpB;;CAEC,GACD,MAAM;IACL,yDAAyD;IACzD,yDAAyD;IACzD,4DAA4D;IAC5D,wCAAwC;IACxC,kCAAkC;IAClC,aAAc;QACb,IAAI,CAAC,SAAS,GAAG,CAAC;IACnB;IAEA,SAAS,GAAG,EAAE;QACb,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,GAAG,GAAG;YAC7B,KAAI;YACJ,aAAY;QACb;IACD;IAEA,eAAe;QACd,IAAK,IAAI,OAAO,IAAI,CAAC,SAAS,CAAE;YAC/B,IAAI,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI;YAC7B,IAAI,WAAW,GAAG;QACnB;QACA,IAAI,iBAAiB,EAAE;QACvB,eAAe,IAAI,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;QACvC,MAAM,eAAe,MAAM,GAAG,EAAG;YAChC,IAAI,OAAO,eAAe,GAAG;YAC7B,IAAI,MAAM,KAAK,MAAM;YACrB,IAAI,IAAI,WAAW,MAAM,qBAAqB,IAAI,WAAW,MAAM,qBAClE,IAAI,CAAC,SAAS,CAAC,IAAI,KAAK,GAAG,CAAC,WAAW,GAAG;YAE3C,IAAI,IAAI,cAAc,IACrB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,WAAW,IAAI,IAAK;gBAC5C,IAAI,IAAI,KAAK,UAAU,CAAC;gBACxB,eAAe,IAAI,CAAC;YACrB;QAEF;QACA,IAAK,IAAI,OAAO,IAAI,CAAC,SAAS,CAAE;YAC/B,IAAI,MAAM,IAAI,CAAC,SAAS,CAAC,IAAI;YAC7B,IAAI,CAAC,IAAI,WAAW,EACnB,IAAI,GAAG,CAAC,MAAM;QAEhB;IACD;AACD;AAEA,MAAM,KAAK,IAAI;;;ACjGf;;;;;;;;;;;;;;;AAeA;;AA2CA,yDAAS;AAzCT;AACA;AACA;AAEA,qDAAqD;AACrD,SAAS,yBAAyB,GAAG;IACpC,MAAM,OAAO,CAAC,IAAI,SAAS,CAAC,QAAQ,CAAC,OACpC,MAAM,IAAI,UAAU;IAErB,OAAO;AACR;AAEA,SAAS,oBAAoB,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY;IACnE,IAAI,IAAI,iBAAiB,EAAE;QAC1B,IAAI,iBAAiB,CAAC,aAAa,OAAO,EAAE,aAAa,OAAO;QAChE;IACD;IACA,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,mBAAmB,MAAM,UAAU;QAClD,IAAI,kBAAkB,yBAAyB,aAAa,MAAM;QAClE,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,UAAU,MAAM,iBACvD;QAED,IAAI,oBAAoB;QACxB,IAAI,kBAAkB,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACvD,IAAI,AAAC,CAAA,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,MAAM,GAAG,WAAW,MAAM,eAC/D,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,MAAM,GAAG,WAAW,MAAM,UAAS,KACtE,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,MAAM,GAAG,OAAO,MAAM,eAC9D,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,MAAM,GAAG,WAAW;aAClD,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,MAAM,GAAG,WAAW,MAAM,oBACxE,oBAAoB;QAGrB,aAAa,eAAe;QAC5B,WAAW,WAAW;QACtB,IAAI,qBAAqB,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,MAAM,iBAC/D,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC;QAEvB,CAAA,GAAA,4CAAoB,AAAD,EAAE,8BAA8B;IACpD;AACD;;;ACxDA;;;;;;;;;;;;;;;AAeA;;AAmqEA,iDAAS;AA9pET;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAhCA,IAAI,YAAY;AAChB,IAAI,2BAA2B;AAwC/B,MAAM;IAEL,uEAAuE;IAEvE,aAAa;IACb,aAAa,IAAI,EAAE;QAClB,IAAI,gBAAgB,CAAA,GAAA,UAAG,AAAD,GACrB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;aAChB,OAAO;IACf;IAEA,mFAAmF;IACnF,mFAAmF;IACnF,mFAAmF;IACnF,QAAQ;IAER,YAAY,EAAE,EAAE,EAAE,EAAE;QACnB,IAAI,KAAK,IAAI,CAAC,yBAAyB,CAAC;QACxC,IAAI,KAAK,IAAI,CAAC,yBAAyB,CAAC;QACxC,OAAO,MAAM;IACd;IAEA,eAAe,IAAI,EAAE;QACpB,OAAQ,KAAK,gBAAgB,MAAM,CAAA,GAAA,2BAAa,AAAD;IAChD;IAEA,cAAc,IAAI,EAAE;QACnB,OAAQ,KAAK,gBAAgB,MAAM,CAAA,GAAA,0BAAY,AAAD;IAC/C;IAEA,eAAe,IAAI,EAAE;QACpB,OAAQ,KAAK,gBAAgB,MAAM,CAAA,GAAA,2BAAa,AAAD;IAChD;IAEA,eAAe,IAAI,EAAE;QACpB,OAAQ,KAAK,gBAAgB,MAAM,CAAA,GAAA,2BAAa,AAAD;IAChD;IAEA,SAAS,IAAI,EAAE;QACd,OAAO,KAAK,WAAW,MAAM;IAC9B;IAEA,6BAA6B,IAAI,EAAE;QAClC,IAAI,CAAC,SAAM,QAAQ,CAAC,OAAO,OAAO;QAClC,IAAI,OAAO,KAAK,SAAS;QACzB,IAAI,CAAC,MAAM,OAAO;QAClB,IAAI,CAAC,SAAM,MAAM,CAAC,OAAO,OAAO;QAChC,IAAI,OAAO,KAAK,SAAS;QACzB,IAAI,CAAC,MAAM,OAAO;QAClB,IAAI,CAAC,SAAM,MAAM,CAAC,OAAO,OAAO;QAChC,OAAO;IAER;IAGA,qBAAqB,IAAI,EAAE;QAC1B,IAAI,CAAC,SAAM,QAAQ,CAAC,OAAO,OAAO;QAClC,IAAI,OAAO,KAAK,SAAS;QACzB,IAAI,CAAC,MAAM,OAAO;QAClB,IAAI,CAAC,SAAM,MAAM,CAAC,OAAO,OAAO;QAChC,IAAI,CAAA,GAAA,6BAAW,AAAD,EAAE,+BAA+B,EAC9C,OAAO;QAER,IAAI,OAAO,KAAK,SAAS;QACzB,IAAI,CAAC,MAAM,OAAO;QAClB,IAAI,CAAC,SAAM,MAAM,CAAC,OAAO,OAAO;QAChC,IAAI,MAAM,KAAK,SAAS;QACxB,IAAI,CAAC,KAAK,OAAO;QACjB,IAAI,CAAC,SAAM,KAAK,CAAC,MAAM,OAAO;QAC9B,OAAO;IAER;IAEA,wBAAwB,IAAI,EAAE;QAC7B,IAAI,CAAC,SAAM,WAAW,CAAC,OAAO,OAAO;QACrC,IAAI,OAAO,KAAK,SAAS;QACzB,IAAI,CAAC,MAAM,OAAO;QAClB,IAAI,CAAC,SAAM,MAAM,CAAC,OAAO,OAAO;QAChC,IAAI,CAAA,GAAA,6BAAW,AAAD,EAAE,+BAA+B,EAC9C,OAAO;QAER,IAAI,MAAM,KAAK,SAAS;QACxB,IAAI,CAAC,KAAK,OAAO;QACjB,IAAI,CAAC,SAAM,KAAK,CAAC,MAAM,OAAO;QAC9B,OAAO;IACR;IAEA,6BAA6B,IAAI,EAAE;QAClC,IAAI,CAAC,SAAM,QAAQ,CAAC,OAAO,OAAO;QAClC,IAAI,OAAO,KAAK,SAAS;QACzB,IAAI,CAAC,MAAM,OAAO;QAClB,IAAI,CAAC,SAAM,MAAM,CAAC,OAAO,OAAO;QAChC,IAAI,CAAA,GAAA,6BAAW,AAAD,EAAE,+BAA+B,EAC9C,OAAO;QAER,IAAI,MAAM,KAAK,SAAS;QACxB,IAAI,CAAC,KAAK,OAAO;QACjB,IAAI,CAAC,SAAM,KAAK,CAAC,MAAM,OAAO;QAC9B,OAAO;IACR;IAEA,6BAA6B,IAAI,EAAE;QAClC,IAAI,CAAC,SAAM,WAAW,CAAC,OAAO,OAAO;QACrC,IAAI,OAAO,KAAK,SAAS;QACzB,IAAI,CAAC,MAAM,OAAO;QAClB,IAAI,CAAC,SAAM,MAAM,CAAC,OAAO,OAAO;QAChC,IAAI,CAAA,GAAA,6BAAW,AAAD,EAAE,+BAA+B,EAC9C,OAAO;QAER,IAAI,OAAO,KAAK,SAAS;QACzB,IAAI,CAAC,MAAM,OAAO;QAClB,IAAI,CAAC,SAAM,MAAM,CAAC,OAAO,OAAO;QAChC,IAAI,MAAM,KAAK,SAAS;QACxB,IAAI,CAAC,KAAK,OAAO;QACjB,IAAI,CAAC,SAAM,KAAK,CAAC,MAAM,OAAO;QAC9B,OAAO;IACR;IAEA,eAAe,IAAI,EAAE;QACpB,OAAO,IAAI,CAAC,oBAAoB,CAAC,SAC7B,IAAI,CAAC,uBAAuB,CAAC,SAC7B,IAAI,CAAC,4BAA4B,CAAC;IACvC;IAEA,kBAAkB,IAAI,EAAE;QACvB,IAAI,OAAO,IAAI,CAAC,yBAAyB,CAAC;QAC1C,OAAQ,QAAQ,IAAI,CAAC,mBAAmB,CAAC,SACpC,QAAQ,IAAI,CAAC,kBAAkB,CAAC;IACtC;IAEA,mBAAmB,IAAI,EAAE;QACxB,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO;YACpC,IAAI,OAAO,KAAK,SAAS;YACzB,IAAI,OAAO,KAAK,SAAS;YACzB,OAAQ,KAAK,UAAU,CAAC,MAAM,QACzB,KAAK,UAAU,CAAC,MAAM;QAC5B,OAAO,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO;YAC9C,IAAI,OAAO,KAAK,SAAS;YACzB,OAAQ,KAAK,UAAU,CAAC,MAAM;QAC/B,OACC,OAAO;IAET;IAEA,kBAAkB,IAAI,EAAE;QACvB,IAAI,IAAI,KAAK,SAAS;QACtB,IAAI,CAAC,GAAG,OAAO;QACf,OAAQ,SAAM,MAAM,CAAC,SACjB,SAAM,KAAK,CAAC,MACZ,IAAI,CAAC,QAAQ,CAAC;IACnB;IAEA,eAAe,CAAC,EAAE,EAAE,EAAE;QACrB,IAAI,GAAG,WAAW,MAAM,GAAG,OAAO;QAClC,OAAQ,GAAG,YAAY,MAAM;IAC9B;IAEA,gBAAgB,CAAC,EAAE,EAAE,EAAE;QACtB,IAAI,GAAG,WAAW,MAAM,GAAG,OAAO;QAClC,OAAQ,GAAG,aAAa,MAAM;IAC/B;IAEA,oBAAoB,IAAI,EAAE,IAAI,EAAE;QAC/B,OAAO,KAAK,gBAAgB,CAAC;IAC9B;IAEA,mFAAmF;IACnF,mFAAmF;IACnF,mFAAmF;IACnF,YAAY;IAGZ,eAAe;IACf,0BAA0B;IAC1B,wCAAwC;IACxC,mCAAmC;IACnC,sBAAsB;IACtB,8BAA8B;IAC9B,0BAA0B,YAAY,EAAE,OAAO,EAAE;QAChD,IAAI,IAAI,aAAa,SAAS;QAC9B,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,EAAE,YAAY,MAAM,cACvB,OAAO,OAAO,gBAAgB;QAE/B,IAAI;QACJ,MAAO,IAAI,EAAE,aAAa,CAAC,cAAe;YACzC,EAAE,WAAW,CAAC;YACd,QAAQ,WAAW,CAAC;QACrB;QACA,IAAI,KAAK,EAAE,SAAS;QACpB,GAAG,gBAAgB,CAAC,SAAS;QAC7B,OAAO;IACR;IAEA,eAAe;IACf,0BAA0B;IAC1B,yCAAyC;IACzC,mCAAmC;IACnC,sBAAsB;IACtB,8BAA8B;IAC9B,2BAA2B,aAAa,EAAE,OAAO,EAAE;QAClD,IAAI,IAAI,cAAc,SAAS;QAC/B,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,EAAE,aAAa,MAAM,eACxB,OAAO,OAAO,gBAAgB;QAE/B,IAAI;QACJ,MAAO,IAAI,EAAE,aAAa,CAAC,eAAgB;YAC1C,EAAE,WAAW,CAAC;YACd,QAAQ,WAAW,CAAC;QACrB;QACA,EAAE,WAAW,CAAC;QACd,QAAQ,YAAY,CAAC;QACrB,IAAI,KAAK,EAAE,SAAS;QACpB,GAAG,gBAAgB,CAAC,SAAS;QAC7B,OAAO;IACR;IAEA,0BAA0B;IAC1B,4BAA4B;IAC5B,gCAAgC;IAChC,oCAAoC;IACpC,wCAAwC,YAAY,EAAE,kBAAkB,EAAE,uBAAuB,EAAE;QAClG,IAAI,IAAI,IAAI,CAAC,yBAAyB,CAAC,cAAc;QACrD,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,IAAI,aAAa,SAAS;QAC9B,OAAO,IAAI,CAAC,yBAAyB,CAAC,GAAG;IAC1C;IAEA,0BAA0B;IAC1B,4BAA4B;IAC5B,gCAAgC;IAChC,oCAAoC;IACpC,yCAAyC,aAAa,EAAE,kBAAkB,EAAE,uBAAuB,EAAE;QACpG,IAAI,IAAI,IAAI,CAAC,0BAA0B,CAAC,eAAe;QACvD,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,IAAI,cAAc,SAAS;QAC/B,OAAO,IAAI,CAAC,0BAA0B,CAAC,GAAG;IAC3C;IAEA,0BAA0B;IAC1B,gCAAgC;IAChC,8DAA8D;IAC9D,kCAAkC;IAClC,gCAAgC,aAAa,EAAE,OAAO,EAAE;QACvD,IAAI,IAAI,cAAc,SAAS;QAC/B,IAAI,CAAC,GAAG,OAAO;QACf,OAAO,IAAI,CAAC,0BAA0B,CAAC,GAAG;IAC3C;IAEA,0BAA0B;IAC1B,gCAAgC;IAChC,8DAA8D;IAC9D,kCAAkC;IAClC,+BAA+B,YAAY,EAAE,OAAO,EAAE;QACrD,IAAI,IAAI,aAAa,SAAS;QAC9B,IAAI,CAAC,GAAG,OAAO;QACf,OAAO,IAAI,CAAC,yBAAyB,CAAC,GAAG;IAC1C;IAEA,mFAAmF;IACnF,mFAAmF;IACnF,mFAAmF;IACnF,YAAY;IAEZ,sBAAsB,QAAQ,EAAE,KAAK,EAAE;QACtC,IAAI,IAAI,CAAC,YAAY,CAAC,UAAU,QAAQ;YACvC,SAAS,WAAW;YACpB,OAAO;QACR;QACA,OAAO;IACR;IAEA,aAAa,QAAQ,EAAE,KAAK,EAAE;QAC7B,IAAI,IAAI,MAAM,SAAS;QACvB,IAAI,CAAC,GAAG,OAAO;QACf,EAAE,gBAAgB,CAAC,UAAU;QAC7B,OAAO;IACR;IAEA,qBAAqB,QAAQ,EAAE,MAAM,EAAE;QACtC,OAAO,WAAW,CAAC;QACnB,OAAO;IACR;IAEA,mFAAmF;IACnF,mFAAmF;IACnF,mFAAmF;IACnF,aAAa;IAEb,wBAAwB,SAAS,EAAE,MAAM,EAAE;QAC1C,IAAI,IAAI,CAAC,cAAc,CAAC,WAAW,SAAS;YAC3C,UAAU,WAAW;YACrB,OAAO;QACR;QACA,OAAO;IACR;IAEA,eAAe,SAAS,EAAE,MAAM,EAAE;QACjC,IAAI,IAAI,OAAO,SAAS;QACxB,IAAI,CAAC,GAAG,OAAO;QACf,EAAE,iBAAiB,CAAC,WAAW;QAC/B,OAAO;IACR;IAEA,uBAAuB,SAAS,EAAE,MAAM,EAAE;QACzC,OAAO,YAAY,CAAC;QACpB,OAAO;IACR;IAEA,mFAAmF;IACnF,mFAAmF;IACnF,mFAAmF;IACnF,UAAU;IAEV,oDAAoD;IACpD,kBAAkB;IAClB,gBAAgB,EAAE,EAAE,EAAE,EAAE;QACvB,IAAI,IAAI,GAAG,SAAS;QACpB,IAAI,EAAE,cAAc,CAAC,OAAO,IAAI,OAAO;QACvC,MAAO,GAAG,WAAW,GACpB,GAAG,WAAW,CAAC,GAAG,aAAa,CAAC;QAEjC,IAAI,CAAC,WAAW,CAAC;IAClB;IAEA,mFAAmF;IACnF,mFAAmF;IACnF,mFAAmF;IACnF,WAAW;IAGX,kCAAkC;IAClC,YAAY,IAAI,EAAE;QACjB,IAAI,IAAI,KAAK,SAAS;QACtB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,KAAK,UAAU,IAClB,EAAE,WAAW;QAEd,EAAE,WAAW,CAAC;QACd,OAAO;IACR;IAEA,6BAA6B,CAAC,EAAE;QAC/B,IAAI,OAAO,EAAE,SAAS;QACtB,IAAI,CAAC,MAAM;QACX,IAAI,KAAK,WAAW,MAAM,GACzB,IAAI,CAAC,WAAW,CAAC;aAEjB,IAAI,CAAC,WAAW,CAAC;IAEnB;IAEA,gBAAgB,CAAC,EAAE;QAClB,wBAAwB;QACxB,yBAAyB;QACzB,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,CAAC,WAAW,CAAC;QACjB,IAAI,SAAM,MAAM,CAAC,IAAI;YACpB,IAAI,OAAO,EAAE,SAAS;YACtB,IAAI,CAAC,WAAW,CAAC;QAClB;QACA,OAAO;IACR;IAEA,qCAAqC,CAAC,EAAE;QACvC,IAAI,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAClC,IAAI,OAAO,IAAI,CAAC,gBAAgB,CAAC;QACjC,IAAI,CAAC,WAAW,CAAC;QACjB,IAAI,QAAQ,QAAQ,SAAM,MAAM,CAAC,SAAS,SAAM,MAAM,CAAC,OACtD,IAAI,CAAC,eAAe,CAAC,MAAM;IAE7B;IAEA,oCAAoC,QAAQ,EAAE;QAC7C,IAAI,IAAI,CAAC,oBAAoB,CAAC,WAC7B,IAAI,CAAC,4BAA4B,CAAC;aAC5B,IAAI,IAAI,CAAC,uBAAuB,CAAC,aAAa,IAAI,CAAC,4BAA4B,CAAC,WACtF,IAAI,CAAC,oCAAoC,CAAC;IAE5C;IAEA,iBAAiB,CAAC,EAAE;QACnB,IAAI,kBAAkB,IAAI,CAAC,iBAAiB,CAAC;QAC7C,IAAI,iBAAiB;YACpB,gBAAgB,WAAW;YAC3B,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpC,IAAI,QAAQ,IAAI,CAAC,kBAAkB,CAAC;gBACpC,MAAM,WAAW;gBACjB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG;YACxC;YACA,IAAI,CAAC,WAAW,CAAC;QAClB,OAAO;YACN,IAAI,IAAI,EAAE,SAAS;YACnB,EAAE,WAAW;YACb,IAAI,CAAC,WAAW,CAAC;QAClB;IACD;IAEA,iBAAiB,CAAC,EAAE;QACnB,IAAI,gBAAgB,IAAI,CAAC,yBAAyB,CAAC;QACnD,IAAI,kBAAkB,IAAI,CAAC,iBAAiB,CAAC;QAC7C,IAAI,iBAAiB,mBAAmB,SAAM,MAAM,CAAC,kBAAkB;YACtE,IAAI,CAAC,eAAe,CAAC,iBAAiB;YACtC,wBAAwB;YACxB,IAAI,gBAAgB,IAAI,CAAC,yBAAyB,CAAC;YACnD,IAAI,kBAAkB,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,sCAAsC;YACnG,IAAI,iBAAiB,mBAAmB,SAAM,MAAM,CAAC,kBACpD,IAAI,CAAC,eAAe,CAAC,iBAAiB;YAEvC,IAAI,OAAO,IAAI,CAAC,cAAc,CAAC;YAC/B,IAAI,QAAQ,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI;gBACtC,KAAK,WAAW;gBAChB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG;YACxC;YACA,OAAO;QACR;IAED;IAEA,mFAAmF;IACnF,mFAAmF;IACnF,mFAAmF;IACnF,sBAAsB;IAEtB,yBAAyB;IACzB,WAAW;QACV,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;IACzC;IAEA,iBAAiB,EAAE,EAAE;QACpB,IAAI,IAAI,GAAG,SAAS;QACpB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,MAAM,EAAE,cAAc,CAAC;QAC3B,IAAI,CAAC,KACJ,OAAO,OAAO,0CAA0C;QAEzD,OAAO;IACR;IAEA,kBAAkB,EAAE,EAAE;QACrB,IAAI,CAAC,IAAI,OAAO;QAChB,IAAI,IAAI,GAAG,SAAS;QACpB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,MAAM,EAAE,kBAAkB,CAAC;QAC/B,IAAI,CAAC,KACJ,OAAO,OAAO,0CAA0C;QAEzD,OAAO;IACR;IAEA,eAAe,MAAM,EAAE;QACtB,IAAI,IAAI;QACR,IAAI,IAAI;QACR,MAAM,CAAE,CAAA,IAAI,IAAI,CAAC,iBAAiB,CAAC,EAAC,EAAI;YACvC,IAAI,EAAE,SAAS;YACf,IAAI,CAAC,KAAK,SAAM,eAAe,CAAC,IAC/B,OAAO;QAET;QACA,IAAI;QACJ,MAAM,CAAC,SAAM,eAAe,CAAC,GAAI;YAChC,IAAI,IAAI,IAAI,CAAC,eAAe,CAAC;YAC7B,IAAI,CAAC,GACJ;iBAEA,IAAI;QAEN;QACA,OAAO;IACR;IAEA,cAAc,KAAK,EAAE;QACpB,IAAI,IAAI;QACR,IAAI,IAAI;QACR,MAAM,CAAE,CAAA,IAAI,IAAI,CAAC,gBAAgB,CAAC,EAAC,EAAI;YACtC,IAAI,EAAE,SAAS;YACf,IAAI,CAAC,KAAK,SAAM,eAAe,CAAC,IAC/B,OAAO;QAET;QACA,IAAI;QACJ,MAAM,CAAC,SAAM,eAAe,CAAC,GAAI;YAChC,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC;YAC9B,IAAI,CAAC,GACJ;iBAEA,IAAI;QAEN;QACA,OAAO;IACR;IAEA,0BAA0B,KAAK,EAAE;QAChC,IAAI,IAAI,IAAI,CAAC,aAAa,CAAC;QAC3B,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,IAC5B,OAAO;QAER,OAAO;IACR;IAEA,2BAA2B,MAAM,EAAE;QAClC,IAAI,IAAI,IAAI,CAAC,cAAc,CAAC;QAC5B,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,IAC7B,OAAO;QAER,OAAO;IACR;IAEA,iBAAiB,CAAC,EAAE;QACnB,IAAI,CAAC,SAAM,cAAc,CAAC,IAAI,OAAO;QACrC,IAAI,IAAI,EAAE,aAAa;QACvB,IAAI,CAAC,GACJ,OAAO;QAER,OAAO;IACR;IAEA,oBAAoB,CAAC,EAAE;QACtB,MAAM,SAAM,cAAc,CAAC,MACvB,AAAC,CAAA,IAAI,EAAE,aAAa,EAAC,KAAM;QAC/B,OAAO;IACR;IAEA,mBAAmB,CAAC,EAAE;QACrB,MAAM,SAAM,cAAc,CAAC,MACvB,AAAC,CAAA,IAAI,EAAE,YAAY,EAAC,KAAM;QAC9B,OAAO;IACR;IAEA,gBAAgB,CAAC,EAAE;QAClB,IAAI,CAAC,SAAM,cAAc,CAAC,IAAI,OAAO;QACrC,IAAI,IAAI,EAAE,YAAY;QACtB,IAAI,CAAC,GACJ,OAAO;QAER,OAAO;IACR;IAGA,mFAAmF;IACnF,mFAAmF;IACnF,mFAAmF;IAGnF,iFAAiF;IACjF,iFAAiF;IACjF,iFAAiF;IAEjF,kEAAkE;IAClE,6DAA6D;IAC7D,8CAA8C;IAC9C,kFAAkF;IAGlF,4BAA4B,CAAC,EAAE,OAAO,EAAE;QACvC,IAAI,IAAI,CAAC,uBAAuB,CAAC,MAAM,IAAI,CAAC,4BAA4B,CAAC;YACxE,IAAI,IAAI,CAAC,0BAA0B,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,WAAW;gBAC5F,uEAAuE;gBACvE,IAAI,CAAC,uBAAuB;gBAC5B,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG,IAAI,CAAC,QAAQ;YACrD,OACC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,UAAU,IAAI,CAAC,yBAAyB,CAAC;eAGnG,IAAI,IAAI,CAAC,4BAA4B,CAAC,IAC5C,IAAI,CAAC,wBAAwB,CAAC;IAIhC;IAEA,2BAA2B,CAAC,EAAE,OAAO,EAAE;QACtC,IAAI,IAAI,CAAC,uBAAuB,CAAC,MAAM,IAAI,CAAC,4BAA4B,CAAC;YACxE,IAAI,IAAI,CAAC,yBAAyB,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,WAAW;gBAC3F,uEAAuE;gBACvE,IAAI,CAAC,mBAAmB;gBACxB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;YACtD,OACC,6CAA6C;YAC7C,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,UAAU,IAAI,CAAC,yBAAyB,CAAC;eAE1G,IAAI,IAAI,CAAC,4BAA4B,CAAC,IAC5C,IAAI,CAAC,uBAAuB,CAAC,GAAG;IAIlC;IAEA,yBAAyB,CAAC,EAAE,OAAO,EAAE;QACpC,IAAI,6BAA8B,EAAE,gBAAgB,MAAM,CAAA,GAAA,0BAAY,AAAD;QACrE,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,4BAA4B,CAAC,IAAI;YACzE,8CAA8C;YAC9C,IAAI,IAAI,CAAC,wCAAwC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,UAAU,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,WACpJ,sBAAsB;YACtB;gBAAA,IAAI,4BAA4B;oBAC/B,IAAI,CAAC,uBAAuB;oBAC5B,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG,IAAI,CAAC,QAAQ;gBACrD;YAAA,OAEM,IAAI,IAAI,CAAC,+BAA+B,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,WAC7F;gBAAA,IAAI,4BAA4B;oBAC/B,IAAI,CAAC,uBAAuB;oBAC5B,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG,IAAI,CAAC,QAAQ;gBACrD;YAAA,OAEA,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,UAAU,IAAI,CAAC,yBAAyB,CAAC;QAG1G,OAAO,IAAI,IAAI,CAAC,4BAA4B,CAAC,IAC5C,IAAI,CAAC,2BAA2B,CAAC,GAAG;IAEtC;IAEA,wBAAwB,CAAC,EAAE,OAAO,EAAE;QACnC,IAAI,IAAI,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,4BAA4B,CAAC,IAAI;YACzE,+CAA+C;YAC/C,IAAI,IAAI,CAAC,uCAAuC,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,UAAU,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,WAAW;gBAC9J,kDAAkD;gBAClD,IAAI,CAAC,mBAAmB;gBACxB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;YACtD,+CAA+C;YAC/C,OAAO,IAAI,IAAI,CAAC,8BAA8B,CAAC,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,WAAW;gBACvG,IAAI,CAAC,mBAAmB;gBACxB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;YACtD,OACC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI,UAAU,IAAI,CAAC,yBAAyB,CAAC;QAEjH,OAAO,IAAI,IAAI,CAAC,4BAA4B,CAAC,IAC5C,IAAI,CAAC,0BAA0B,CAAC,GAAG;IAErC;IAGA,iFAAiF;IACjF,iFAAiF;IACjF,iFAAiF;IAGjF,8CAA8C;IAC9C,wDAAwD;IACxD,kDAAkD;IAClD,uDAAuD;IACvD,qDAAqD;IAErD,WAAW,CAAC,EAAE;QACb,IAAI,IAAI,CAAC,iBAAiB,CAAC;YAC1B,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI;gBAC1B,IAAI,OAAO,IAAI,CAAC,yBAAyB,CAAC;gBAC1C,IAAI,CAAC,eAAe,CAAC;gBACrB,KAAK,WAAW;gBAChB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;YACzC,OACC,IAAI,CAAC,gBAAgB,CAAC;eAEjB,IAAI,IAAI,CAAC,kBAAkB,CAAC;YAClC,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI;gBAC1B,IAAI,WAAW,IAAI,CAAC,aAAa,CAAC;gBAClC,SAAS,WAAW;gBACpB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;gBACxC,IAAI,CAAC,WAAW,CAAC;gBACjB,OAAO;YACR,OACC,kCAAkC;YAClC,IAAI,CAAC,gBAAgB,CAAC;eAEjB,IAAI,IAAI,CAAC,cAAc,CAAC;YAC9B,IAAI,IAAI,CAAC,aAAa,CAAC,IAAI;gBAC1B,IAAI,eAAe,IAAI,CAAC,cAAc,CAAC;gBACvC,aAAa,WAAW;gBACxB,IAAI,CAAC,mCAAmC,CAAC;YAC1C,OAAO;gBACN,IAAI,WAAW,IAAI,CAAC,cAAc,CAAC;gBACnC,IAAI,CAAC,mCAAmC,CAAC;gBACzC,6DAA6D;gBAC7D,yEAAyE;gBACzE,yEAAyE;gBACzE,IAAI,OAAO,IAAI,CAAC,cAAc,CAAC;gBAC/B,IAAI,QAAQ,IAAI,CAAC,yBAAyB,CAAC,SAAS,IAAI,CAAC,yBAAyB,CAAC,IAClF,KAAK,WAAW;YAElB;eAEA,qCAAqC;QACrC,IAAI,CAAC,8BAA8B,CAAC;IAEtC;IAEA,qBAAqB,CAAC,EAAE;QACvB,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAC1B,IAAI,CAAC,gBAAgB,CAAC;IAExB;IAEA,eAAe;IACf,qBAAqB;QACpB,IAAI,MAAM,IAAI,CAAC,QAAQ;QACvB,IAAI,SAAM,QAAQ,CAAC,QAAQ,SAAM,WAAW,CAAC,MAC5C,IAAI,CAAC,gBAAgB,CAAC;aAEtB,IAAI,CAAC,oBAAoB,CAAC;IAE5B;IAEA,+BAA+B,CAAC,EAAE;QACjC,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,IAAI,IAAI,IAAI,CAAC,iBAAiB,CAAC;QAC/B,IAAI,IAAI,IAAI,CAAC,gBAAgB,CAAC;QAC9B,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,WAAW,CAAC;QACjB,IAAI,GACH,EAAE,WAAW;aACP,IAAI,GAAG;YACb,EAAE,WAAW;YACb,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;QACzC,OAAO;YACN,EAAE,WAAW;YACb,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;QACzC;IACD;IAEA,sCAAsC,CAAC,EAAE;QACxC,IAAI,CAAC,EAAE,WAAW,IACjB,IAAI,CAAC,8BAA8B,CAAC;IAEtC;IAEA,mBAAmB,CAAC,EAAE;QACrB,IAAI,IAAI,CAAC,kBAAkB,CAAC;YAC3B,IAAI,EAAE,gBAAgB,MAAM,CAAA,GAAA,2BAAa,AAAD,GAAG;gBAC1C,IAAI,CAAC,uBAAuB;gBAC5B,IAAI,wBAAyB,KAAK,IAAI,CAAC,QAAQ;gBAC/C,IAAI;oBACH,IAAI,SAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,KAC7B,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;yBAErD,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG,IAAI,CAAC,QAAQ;uBAGrD,oEAAoE;gBACpE,8DAA8D;gBAC9D,qEAAqE;gBACrE,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;YAEvD,OACC,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;eAEhD,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI;YACrC,IAAI,MAAM,IAAI,CAAC,iBAAiB,CAAC;YACjC,IAAI;gBACH,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM;oBAChC,IAAI,WAAW;oBACf,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;gBACzC,OAAO;oBACN,IAAI,IAAI,IAAI,CAAC,kBAAkB,CAAC;oBAChC,EAAE,WAAW;oBACb,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG;gBACxC;mBACM,OAAO;QACf,OACC,IAAI,CAAC,uBAAuB;IAE9B;IAEA,eAAe,CAAC,EAAE;QACjB,IAAI,EAAE,gBAAgB,MAAM,CAAA,GAAA,2BAAa,AAAD,GAAG;YAC1C,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG,IAAI,CAAC,QAAQ;YACpD;QACD;QACA,IAAI,CAAC,mBAAmB;QACxB,IAAI,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,KACxC,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;aAErD,IAAI,SAAM,MAAM,CAAC,IAAI,CAAC,QAAQ,KAC7B,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;aAErD,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG,IAAI,CAAC,QAAQ;IAGvD;IAGA,qBAAqB,CAAC,EAAE,OAAO,EAAE;QAChC,IAAI,EAAE,gBAAgB,MAAM,CAAA,GAAA,0BAAY,AAAD,GACtC,IAAI,CAAC,uBAAuB,CAAC,GAAG;aAEhC,IAAI,CAAC,wBAAwB,CAAC,GAAG;IAEnC;IAEA,wBAAwB,CAAC,EAAE,OAAO,EAAE;QACnC,IAAI,EAAE,gBAAgB,MAAM,CAAA,GAAA,0BAAY,AAAD,GACtC,IAAI,CAAC,0BAA0B,CAAC,GAAG;aAEnC,IAAI,CAAC,2BAA2B,CAAC,GAAG;IAEtC;IAEA,mBAAmB,CAAC,EAAE,OAAO,EAAE;QAC9B,IAAI,KAAK,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,OAAO,IAAI;QACpD,IAAI,OAAO,EAAE,gBAAgB;QAC7B,IAAI,QAAQ,CAAA,GAAA,2BAAa,AAAD,KAAK,QAAQ,CAAA,GAAA,2BAAa,AAAD,GAChD,IAAI,CAAC,uBAAuB,CAAC,IAAI;aAEjC,IAAI,CAAC,qBAAqB,CAAC,IAAI;IAEjC;IAEA,WAAW,CAAC,EAAE;QACb,IAAI,CAAA,GAAA,6BAAW,AAAD,EAAE,uBAAuB,EAAE;YACxC,IAAI,CAAC,qBAAqB,MACtB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;YACzD;QACD;QAEA,IAAI,IAAI;QACR,IAAI,EAAE,gBAAgB,MAAM,CAAA,GAAA,0BAAY,AAAD;YACtC,IAAI,SAAM,cAAc,CAAC,MAAM,EAAE,GAAG,CAAC,iBAAiB,IACrD,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;iBAE5C,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;eAEvC,IAAI,EAAE,gBAAgB,MAAM,CAAA,GAAA,2BAAa,AAAD,GAC9C,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;aAE5C,IAAI,IAAI,IAAI,CAAC,qBAAqB,IACjC,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;QAGvD,IAAI,GACH,CAAA,GAAA,kBAAU,AAAD,EAAE;QAEZ,OAAO;IACR;IAEA,gBAAgB,CAAC,EAAE;QAClB,yDAAyD;QACzD,IAAI,UAAU,IAAI,CAAC,iBAAiB,CAAC;QACrC,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,GAAG,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,aAAa,EACrE,OAAO,IAAI,CAAC,UAAU;QAEvB,OAAO,IAAI,CAAC,kBAAkB,CAAC;IAChC;IAEA,cAAc,CAAC,EAAE;QAChB,yDAAyD;QACzD,IAAI,UAAU,IAAI,CAAC,iBAAiB,CAAC;QACrC,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,GAAG,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,aAAa,EACrE,OAAO,IAAI,CAAC,UAAU;QAEvB,OAAO,IAAI,CAAC,uCAAuC,CAAC;IACrD;IAEA,cAAc,CAAC,EAAE;QAChB,IAAI,CAAA,GAAA,6BAAW,AAAD,EAAE,uBAAuB,EAAE;YACxC,IAAI,EAAE,gBAAgB,MAAM,CAAA,GAAA,2BAAa,AAAD,GACvC,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG;iBAEvC,IAAI,CAAC,iBAAiB,MACjB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG,IAAI,CAAC,QAAQ;YAE1D;QACD;QAEA,IAAI,IAAI;QACR,IAAI,EAAE,gBAAgB,MAAM,CAAA,GAAA,2BAAa,AAAD;YACvC,IAAI,SAAM,cAAc,CAAC,MAAM,EAAE,GAAG,CAAC,iBAAiB,IACrD,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;iBAE5C,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG;eAEtC,IAAI,EAAE,gBAAgB,MAAM,CAAA,GAAA,2BAAa,AAAD,GAC9C,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG;aAE3C,IAAI,IAAI,IAAI,CAAC,iBAAiB,IAC7B,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG,IAAI,CAAC,QAAQ;QAGtD,IAAI,GACH,CAAA,GAAA,kBAAU,AAAD,EAAE;QAEZ,OAAO;IACR;IAEA,iBAAiB,CAAC,EAAE;QACnB,yDAAyD;QACzD,IAAI,UAAU,IAAI,CAAC,iBAAiB,CAAC;QACrC,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,GAAG,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,aAAa,EACrE,OAAO,IAAI,CAAC,aAAa,CAAC;QAE3B,OAAO,IAAI,CAAC,cAAc,CAAC;IAC5B;IAEA,gBAAgB,CAAC,EAAE;QAClB,yDAAyD;QACzD,IAAI,UAAU,IAAI,CAAC,iBAAiB,CAAC;QACrC,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,GAAG,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,aAAa,EACrE,OAAO,IAAI,CAAC,aAAa,CAAC;QAE3B,OAAO,IAAI,CAAC,mCAAmC,CAAC;IACjD;IAGA,SAAS;IACT,qCAAqC,CAAC,EAAE;QACvC,IAAI,CAAC,EAAE,GAAG,CAAC,iBAAiB,IAC3B;QAED,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,IAAI,CAAC,IAAI,CAAC,gBAAgB,IACzB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;aAC/C;YAEN,4DAA4D;YAC5D,2BAA2B;YAC3B,4CAA4C;YAC5C,YAAY,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;YAE5D,OAAO;QACR;IAED;IAEA,eAAe;IACf,iBAAiB,UAAU,EAAE,QAAQ,EAAE;QACtC,iDAAiD;QACjD,OAAO,WAAW,gBAAgB;YACjC,KAAK,GAAA,0BAAY;gBAChB,OAAO,IAAI,CAAC,4BAA4B,CAAC;YAC1C,KAAK,GAAA,2BAAa;gBACjB,OAAO,IAAI,CAAC,6BAA6B,CAAC;YAC3C,KAAK,GAAA,2BAAa;gBACjB,OAAO,IAAI,CAAC,kBAAkB,CAAC;YAChC,KAAK,GAAA,2BAAa;gBACjB,IAAI,SAAM,cAAc,CAAC,WACxB,OAAO,IAAI,CAAC,uBAAuB,CAAC;qBAEpC,OAAO,IAAI,CAAC,6BAA6B,CAAC;QAE7C;IACD;IAEA,mDAAmD;IACnD,oBAAoB;QAClB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;IACvD;IAEA,mDAAmD;IACnD,mBAAmB;QACjB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG,IAAI,CAAC,QAAQ;IACtD;IAEA,mDAAmD;IACnD,oBAAoB;QAClB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;IACvD;IAEA,mDAAmD;IACnD,oBAAoB;QAClB,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG,IAAI,CAAC,QAAQ;IACvD;IAGA,kBAAkB;IAElB,2CAA2C,YAAY,EAAE;QACxD,IAAI,IAAI,IAAI,CAAC,QAAQ;QAErB,IAAI,cAAc,IAAI,CAAC,4BAA4B,CAAC;QACpD,IAAI,CAAC,aAAa;YACjB,IAAI,CAAC,gBAAgB,CAAC,GAAG;YACzB;QACD;QAEA,IAAI,EAAE,gBAAgB,MAAM,CAAA,GAAA,0BAAY,AAAD,GAAG;YACzC,IAAI,IAAI,EAAE,SAAS;YACnB,6CAA6C;YAC7C,mDAAmD;YACnD,QAAQ;YACR,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI;gBAC/B,IAAI,KAAK,IAAI,CAAC,OAAO;gBACrB,IAAI,CAAC,yBAAyB,CAAC,GAAG;YACnC;YACA,IAAI,CAAC,qBAAqB,CAAC,cAAc;QAC1C,OAAO;YACN,IAAI,IAAI,EAAE,SAAS;YACnB,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,IAAI;gBAChC,IAAI,KAAK,IAAI,CAAC,OAAO;gBACrB,IAAI,CAAC,0BAA0B,CAAC,GAAG;gBACnC,IAAI,CAAC,uBAAuB,CAAC,cAAc;YAC5C,OACC,IAAI,CAAC,uBAAuB,CAAC,cAAc;QAE7C;IACD;IAEA,kDAAkD;IAClD,iEAAiE;IACjE,qBAAqB,SAAS,EAAE,IAAI,EAAE;QACrC,IAAI,KAAK,gBAAgB,MAAM,CAAA,GAAA,2BAAa,AAAD;YAC1C,IAAI,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,SAAM,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ;gBACtE,IAAI,OAAO,IAAI,CAAC,OAAO;gBACvB,IAAI,CAAC,sBAAsB,CAAC,WAAW;gBACvC,IAAI,CAAC,sBAAsB,CAAC,MAAM;gBAClC,UAAU,WAAW;gBACrB,OAAO;YACR,OAAO;gBACN,IAAI,OAAO,IAAI,CAAC,gBAAgB,CAAC;gBACjC,IAAI,CAAC,sBAAsB,CAAC,WAAW;gBACvC,UAAU,WAAW;gBACrB,OAAO;YACR;eAEA,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM;IAErC;IAEA,wBAAwB,YAAY,EAAE,IAAI,EAAE;QAC3C,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM;IACpC;IAEA,mBAAmB,IAAI,EAAE;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC;QACzB,IAAI,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACzC,IAAI,UAAU,EAAE,YAAY,CAAC;QAC7B,QAAQ,WAAW;QACnB,OAAO;IACR;IAIA,wCAAwC,CAAC,EAAE;QAC1C,IAAI,WAAW,SAAM,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,yBAAyB,CAAC;QACpE,4EAA4E;QAC5E,yCAAyC;QACzC,IAAI,CAAC,UACJ,WAAW,SAAM,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,yBAAyB,CAAC;QAEjE,IAAI,CAAC,UACJ,gFAAgF;QAChF,WAAW;QAEZ,IAAI,MAAM,IAAI,CAAC,iBAAiB,CAAC;QACjC,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,SAAM,MAAM,CAAC,MAAM;YACvB,IAAI,WAAW;YACf;QACD;QACA,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM;YAChC,IAAI,WAAW;YACf,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;YACxC;QACD;QACA,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI;YAC9B,IAAI,KAAK,IAAI,CAAC,mBAAmB,CAAC;YAClC,4CAA4C;YAC5C,kBAAkB;YAClB,GAAG,WAAW;YACd,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG;YACvC;QACD;QACA,IAAI,YAAY,IAAI,CAAC,cAAc,CAAC;QACpC,IAAI,UAAU,EAAE,QAAQ;QACxB,0BAA0B;QAC1B,IAAI,WAAW,WAAW;QAC1B,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC;QACjC,MAAM,KAAK,EAAE,QAAQ,KAAK,QAAS;YAClC,IAAI,IAAI,IAAI,CAAC,yBAAyB,CAAC;YACvC,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM;YAC5B,IAAI,CAAC,GACJ;iBAEA,IAAI;QAEN;QACA,IAAI,CAAC,GACJ,MAAM,IAAI,MAAM;QAEjB,EAAE,WAAW;QACb,IAAI,WACH,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;QAEzC,OAAO;IACR;IAEA,oCAAoC,CAAC,EAAE;QACtC,IAAI,WAAW,SAAM,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,yBAAyB,CAAC;QACpE,4EAA4E;QAC5E,yCAAyC;QACzC,IAAI,CAAC,UACJ,WAAW,SAAM,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,yBAAyB,CAAC;QAEjE,IAAI,CAAC,UACJ,gFAAgF;QAChF,WAAW;QAEZ,IAAI,MAAM,IAAI,CAAC,gBAAgB,CAAC;QAChC,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,SAAM,MAAM,CAAC,MAAM;YACvB,IAAI,WAAW;YACf;QACD;QACA,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM;YAChC,IAAI,WAAW;YACf,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;YACxC;QACD;QACA,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI;YAC9B,IAAI,KAAK,IAAI,CAAC,mBAAmB,CAAC;YAClC,4CAA4C;YAC5C,kBAAkB;YAClB,GAAG,WAAW;YACd,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG;YACvC;QACD;QACA,IAAI,YAAY,IAAI,CAAC,cAAc,CAAC;QACpC,IAAI,UAAU,EAAE,QAAQ;QACxB,0BAA0B;QAC1B,IAAI,WAAW,WAAW;QAC1B,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC;QACjC,MAAM,KAAK,EAAE,QAAQ,KAAK,QAAS;YAClC,IAAI,IAAI,IAAI,CAAC,yBAAyB,CAAC;YACvC,IAAI,KAAK,GAAG,MAAM,IAAI,MAAM;YAC5B,IAAI,CAAC,GACJ;iBAEA,IAAI;QAEN;QACA,IAAI,CAAC,GACJ,MAAM,IAAI,MAAM;QAEjB,EAAE,WAAW;QACb,IAAI,WACH,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;QAEzC,OAAO;IACR;IAGA,6BAA6B,CAAC,EAAE;QAC/B,MAAO,IAAI,CAAC,iBAAiB,GAAI;YAChC,IAAI,EAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,KACtC,OAAO;QAET;QACA,OAAO;IACR;IAEA,0BAA0B,CAAC,EAAE;QAC5B,MAAM,IAAI,EAAE,SAAS,GAAI;YACxB,IAAI,SAAM,KAAK,CAAC,IACf,mDAAmD;YACnD,OAAO;YAER,IAAI,SAAM,MAAM,CAAC,IAChB,OAAO;QAET;QACA,OAAO;IACR;IAEA,0BAA0B,CAAC,EAAE;QAC5B,MAAO,IAAI,EAAE,SAAS,GAAI;YACzB,IAAI,SAAM,KAAK,CAAC,IACf,mDAAmD;YACnD,OAAO;YAER,IAAI,SAAM,MAAM,CAAC,IAChB,OAAO;QAET;QACA,OAAO;IACR;IAEA,8BAA8B,CAAC,EAAE,IAAI,EAAE;QACtC,MAAO,IAAI,EAAE,SAAS,GAAI;YACzB,IAAI,CAAC,GAAG,OAAO;YACf,IAAI,KAAK,IACR,OAAO;QAET;QACA,OAAO;IACR;IAEA,YAAY;IAEZ,UAAU,CAAC,EAAE,IAAI,EAAE;QAClB,IAAI,MAAM,IAAI,CAAC,6BAA6B,CAAC,GAAG;QAChD,IAAI,KAAK;YACR,IAAI,WAAW;YACf,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,0BAAY,AAAD,GAAG;QACxC;IACD;IAEA,aAAa,CAAC,EAAE;QACf,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG;YAC7B,OAAO,SAAM,MAAM,CAAC;QACrB;IACD;IAEA,YAAY,CAAC,EAAE;QACd,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG;YAC7B,OAAO,SAAM,KAAK,CAAC;QACpB;IACD;IAEA,YAAY,CAAC,EAAE;QACd,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG;YAC7B,OAAO,SAAM,KAAK,CAAC;QACpB;IACD;IAEA,aAAa,CAAC,EAAE;QACf,IAAI,CAAC,SAAS,CAAC,GAAG,SAAS,GAAG;YAC7B,OAAO,SAAM,MAAM,CAAC;QACrB;IACD;IAGA,0BAA0B;QACzB,IAAI,QAAS,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC9C,MAAM,CAAC,IAAI,CAAC,qBAAqB,GAAI;YACpC,IAAI,IAAI,IAAI,CAAC,YAAY;YACzB,IAAI,CAAC,KAAK,SAAM,eAAe,CAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,KAAM;gBACvE,MAAM,WAAW;gBACjB,OAAO;YACR;QACD;QACA,MAAM,CAAC,SAAM,eAAe,CAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,OAAQ,IAAI,CAAC,eAAe;QAC3F,OAAO;IACR;IAEA,sBAAsB;QACrB,IAAI,QAAS,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC9C,MAAM,CAAC,IAAI,CAAC,iBAAiB,GAAI;YAChC,IAAI,IAAI,IAAI,CAAC,YAAY;YACzB,IAAI,CAAC,KAAK,SAAM,eAAe,CAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,KAAM;gBACvE,MAAM,WAAW;gBACjB,OAAO;YACR;QACD;QACA,MAAM,CAAC,SAAM,eAAe,CAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,OAAQ,IAAI,CAAC,gBAAgB;QAC5F,OAAO;IACR;IAEA,kBAAkB;QACjB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,MAAM,SAAM,cAAc,CAAC,MAAM,EAAE,WAAW,GAC7C,IAAI,EAAE,aAAa;QAEpB,EAAE,WAAW;QACb,OAAO;IACR;IAEA,0BAA0B;IAE1B,kBAAkB;QACjB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,CAAC,SAAM,cAAc,CAAC,IAAI,OAAO;QACrC,IAAI,IAAI,EAAE,YAAY;QACtB,IAAI,GAAG;YACN,EAAE,WAAW;YACb,OAAO;QACR;QACA,OAAO;IACR;IAEA,mBAAmB;QAClB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,CAAC,SAAM,cAAc,CAAC,IAAI,OAAO;QACrC,IAAI,IAAI,EAAE,aAAa;QACvB,IAAI,GAAG;YACN,EAAE,WAAW;YACb,OAAO;QACR;QACA,OAAO;IACR;IAEA,eAAe,CAAC,EAAE;QACjB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,KAAK,EAAE,WAAW,IAAI,OAAO;QACjC,IAAI,IAAI,GAAG,OAAO;QAClB,IAAI,IAAI,EAAE,UAAU,CAAC;QACrB,IAAI,CAAC,GAAG,OAAO;QACf,EAAE,WAAW;QACb,OAAO;IACR;IAEA,oBAAoB;QACnB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,UAAU,EAAE,cAAc,CAAC;QAC/B,IAAI,SAAS;YACZ,QAAQ,WAAW;YACnB,OAAO;QACR;QACA,OAAO;IACR;IAEA,wBAAwB;QACvB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,MAAM,EAAE,kBAAkB,CAAC;QAC/B,IAAI,KAAK;YACR,IAAI,WAAW;YACf,OAAO;QACR;QACA,OAAO;IACR;IAEA,eAAe;QACd,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,EAAE,WAAW;QACb,OAAO;IACR;IAEA,kBAAkB;IAElB,6CAA6C;IAC7C,kCAAkC,IAAI,EAAE;QACvC,IAAI,IAAI,IAAI,CAAC,QAAQ;QACrB,OAAO,EAAE,gBAAgB;YACxB,KAAK,GAAA,0BAAY;gBAChB,OAAO,YAAY,4BAA4B,CAAC;YACjD,KAAK,GAAA,2BAAa;gBACjB,OAAO,YAAY,6BAA6B,CAAC;YAClD,KAAK,GAAA,2BAAa;gBACjB,OAAO,YAAY,kBAAkB,CAAC;YACvC,KAAK,GAAA,2BAAa;gBACjB,IAAI,KAAK,MAAM,GAAG,cAAc,IAC/B,OAAO,YAAY,uBAAuB,CAAC;qBAE3C,OAAO,YAAY,6BAA6B,CAAC;QAEpD;IACD;IAEA,OAAO,CAAC,EAAE;QACT,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,IAAI;QACR,IAAI,WAAW;QACf,MAAM,EAAE,WAAW,GAAI;YACtB,IAAI,EAAE,aAAa;YACnB,IAAI,CAAC,UACJ,WAAW;YAEZ,EAAE,iBAAiB,CAAC,GAAG;QACxB;QACA,IAAI,GAAG;YACN,EAAE,WAAW,CAAC;YACd,SAAS,WAAW;QACrB;IACD;IAEA,wBAAwB,WAAW,EAAE;QACpC,IAAI,IAAI,IAAI,CAAC,QAAQ;QACrB,IAAI,IAAI,EAAE,SAAS;QACnB,EAAE,gBAAgB,CAAC,GAAG;QACtB,YAAY,WAAW,CAAC;QACxB,YAAY,WAAW;QACvB,OAAO;IACR;IAEA,gBAAgB,IAAI,EAAE;QACrB,OAAO,IAAI,CAAC,YAAY,CAAC;QACzB,IAAI,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACzC,IAAI,UAAU,EAAE,WAAW,CAAC;QAC5B,QAAQ,WAAW;QACnB,OAAO;IACR;IAIA,oBAAoB,IAAI,EAAE;QACzB,OAAO,IAAI,CAAC,YAAY,CAAC;QACzB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,EAAE,gBAAgB,CAAC,MAAM;QACzB,OAAO;IACR;IAEA,6BAA6B,IAAI,EAAE;QAClC,OAAO,IAAI,CAAC,YAAY,CAAC;QACzB,IAAI,IAAI,IAAI,CAAC,mBAAmB,CAAC,SAC7B,IAAI,CAAC,iBAAiB;QAC1B,OAAO;IACR;IAEA,qBAAqB,IAAI,EAAE;QAC1B,OAAO,IAAI,CAAC,YAAY,CAAC;QACzB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,EAAE,iBAAiB,CAAC,MAAM;QAC1B,OAAO;IACR;IAEA,uBAAuB;IACvB,8BAA8B,IAAI,EAAE;QACnC,IAAI,IAAI,IAAI,CAAC,oBAAoB,CAAC,SAC9B,IAAI,CAAC,qBAAqB;QAC9B,OAAO;IACR;IAEA,mCAAmC;QAClC,IAAI,IAAI,AAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAI,SAAS;QACvD,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,EAAE,WAAW,MAAM,KAAK,SAAM,eAAe,CAAC,IAAI;YACrD,IAAI,CAAC,IAAI,CAAC,SAAS,CAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,KAAM,OAAO;YACnE,EAAE,WAAW;YACb,IAAI,CAAC,mBAAmB,CAAC,CAAA,GAAA,2BAAa,AAAD,GAAG;YACxC,OAAO;QACR;QACA,OAAO;IACR;IAEA,+EAA+E;IAC/E,yCAAyC;QACxC,IAAI,QAAS,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC9C,OACC,IAAI,CAAC,gCAAgC,MAErC,AAAC,CAAA,IAAI,CAAC,qBAAqB,MAAM,IAAI,CAAC,YAAY,EAAC,KAEnD,IAAI,CAAC,SAAS,CAAC;IAEjB;IAEA,2CAA2C;IAC3C,UAAU,KAAK,EAAE;QAChB,mDAAmD;QACnD,IAAI,CAAE,CAAA,iBAAiB,CAAA,GAAA,wBAAU,AAAD,CAAA,GAC/B,MAAM,IAAI,MAAM;QAEjB,IAAI,IAAI,MAAM,SAAS;QACvB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,MAAM,UAAU,IACnB,EAAE,WAAW;QAEd,EAAE,WAAW,CAAC;QACd,OAAO;IACR;IAEA,uBAAuB;IACvB,oBAAoB,GAAG,EAAE;QACxB,MAAM,IAAI,CAAC,YAAY,CAAC;QACxB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,MAAM,KAAK,OAAO,MAAM,iBAAiB;QAC7C,IAAI,IAAI,EAAE,SAAS,CAAC;QACpB,IAAI,CAAC,GAAG,OAAO;QACf,EAAE,gBAAgB,CAAC,GAAG;QACtB,IAAI,WAAW;QACf,OAAO;IACR;IAEA,0CAA0C;QACzC,IAAI,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACzC,IAAI,IAAI,EAAE,SAAS,CAAC;QACpB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,CAAE,CAAA,EAAE,WAAW,MAAM,CAAA,GAAI,OAAO;QACpC,IAAI,MAAM,EAAE,UAAU,CAAC;QACvB,EAAE,gBAAgB,CAAC,GAAG;QACtB,IAAI,WAAW;QACf,OAAO;IACR;IAEA,aAAa;IAEb,6BAA6B;QAC5B,IAAI,IAAI,AAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAI,SAAS;QACvD,IAAI,CAAC,GAAG,OAAO;QACf,MAAM,CAAC,SAAM,MAAM,CAAC,GAAI;YACvB,IAAI,EAAE,SAAS;YACf,IAAI,CAAC,GAAG,OAAO;QAChB;QACA,MAAM,SAAM,MAAM,CAAC,GAAI;YACtB,IAAI,KAAK,EAAE,SAAS;YACpB,IAAI,MAAM,SAAM,MAAM,CAAC,KACtB,IAAI;iBAEJ;QAEF;QACA,EAAE,WAAW;QACb,OAAO;IACR;IAEA,0BAA0B,GAAG,EAAE;QAC9B,MAAM,IAAI,CAAC,YAAY,CAAC;QACxB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,EAAE,YAAY,MAAM,GACvB,OAAO,MAAM,gBAAgB;QAE9B,IAAI;QACJ,MAAO,IAAI,EAAE,aAAa,CAAC,GAAI;YAC9B,EAAE,WAAW,CAAC;YACd,IAAI,WAAW,CAAC;QACjB;IACD;IAEA,gDAAgD;IAChD,0CAA0C;IAC1C,kDAAkD;IAClD,mCAAmC;IACnC,OAAO;IACP,SAAS;IACT,0BAA0B;IAC1B,cAAc;IACd,MAAM;IACN,8BAA8B;IAC9B,MAAM,GAAG,EAAE;QACV,MAAM,IAAI,CAAC,YAAY,CAAC;QACxB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,EAAE,YAAY,MAAM,GACvB,OAAO,MAAM,gBAAgB;QAE9B,IAAI;QACJ,MAAO,IAAI,EAAE,aAAa,CAAC,GAAI;YAC9B,EAAE,WAAW,CAAC;YACd,IAAI,WAAW,CAAC;QACjB;QACA,IAAI,KAAK,EAAE,SAAS;QACpB,GAAG,gBAAgB,CAAC,KAAK;QACzB,OAAO;IACR;IAGA,8BAA8B;QAC7B,qCAAqC;QACrC,iCAAiC;QACjC,uBAAuB;QACvB,uBAAuB;QACvB,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,WAAW,EAAE,YAAY;QAC7B,IAAI,CAAC,UACJ,OAAO;QAER,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,IAAI,EAAE,aAAa,CAAC;QACxB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI;QACJ,MAAO,KAAK,EAAE,gBAAgB,GAC7B,EAAE,WAAW,CAAC;QAEf,kCAAkC;QAClC,EAAE,WAAW,CAAC;QACd,SAAS,WAAW;QACpB,OAAO;IACR;IAEA,KAAK,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACb,IAAI,IAAI,CAAC,YAAY,CAAC;QACtB,IAAI,IAAI,CAAC,YAAY,CAAC;QACtB,IAAI,IAAI,CAAC,YAAY,CAAC;QACtB,IAAI;QACJ,MAAO,IAAI,EAAE,gBAAgB,GAC5B,EAAE,WAAW,CAAC;QAEf,kCAAkC;QAClC,EAAE,WAAW,CAAC;QACd,OAAO;IACR;IAEA,sCAAsC;QACrC,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,IAAI,EAAE,aAAa,CAAC;QACxB,IAAI,AAAC,SAAM,MAAM,CAAC,MAAM,SAAM,MAAM,CAAC,MAC/B,SAAM,MAAM,CAAC,MAAM,SAAM,MAAM,CAAC,MAChC,SAAM,KAAK,CAAC,MAAM,SAAM,KAAK,CAAC,IACnC,OAAO,IAAI,CAAC,2BAA2B;IAEzC;IAEA,8CAA8C;QAC7C,IAAI,IAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1C,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,EAAE,WAAW;QACb,IAAI,CAAC,mCAAmC;IACzC;IAEA,oBAAoB,CAAC,EAAE;QACtB,IAAI,IAAI,CAAC,YAAY,CAAC;QACtB,IAAI,IAAI,EAAE,SAAS;QACnB,IAAI,CAAC,GAAG,OAAO;QACf,IAAI,IAAI,EAAE,aAAa,CAAC;QACxB,IAAI,AAAC,SAAM,MAAM,CAAC,MAAM,SAAM,MAAM,CAAC,MAC/B,SAAM,MAAM,CAAC,MAAM,SAAM,MAAM,CAAC,MAChC,SAAM,KAAK,CAAC,MAAM,SAAM,KAAK,CAAC,IACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG;aAEvB,OAAO;IAET;IAIG,0CAA0C;IAG7C,0BAA0B,GAAG,EAAE;QAC9B,UAAU,WAAW,CAAC,KAAK,CAAC;YAAC,MAAM;QAAiB,GAAG,IAAI,CAAC,CAAA;YAC3D,IAAI,OAAO,KAAK,IAAI,aAAa,OAAO,KAAK,IAAI,UAChD,UAAU,SAAS,CAAC,SAAS,CAAC;QAEhC;IACD;IAEA,2BAA2B;IAC3B,QAAQ;QACP,YAAY,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,MAAM;QACtD,2BAA2B,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,gBAAgB;QAC/E,IAAI,CAAC,CAAA,GAAA,+BAAe,AAAD,KAClB,IAAI,CAAC,yBAAyB,CAAC,UAAU,WAAW;QAErD,IAAI,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACzC,IAAI,CAAC,qBAAqB,MAAM,IAAI,CAAC,YAAY;QACjD,IAAI,CAAC,SAAS,CAAC;IAChB;IAEA,2BAA2B;IAC3B,SAAS;QACR,IAAI,IAAI,IAAI,CAAC,QAAQ;QAErB,MAAM,CAAC,SAAM,MAAM,CAAC,GAAI;YACvB,IAAI,SAAM,SAAS,CAAC,MAAM,EAAE,GAAG,CAAC,cAAc,MAAM,QACnD,OAAO;YAER,IAAI,EAAE,SAAS;QAChB;QAEA,6BAA6B;QAE7B,IAAI,MAAM,IAAI,CAAC,kBAAkB,CAAC,QAAQ;QAC1C,IAAI,GAAG,CAAC,WAAW;QACnB,IAAI,MAAM,IAAI,CAAC,kBAAkB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB;QAChE,IAAI,WAAW;QACf,IAAI,WAAW,CAAC;QAEhB,IAAI,EAAE,WAAW,MAAM,GAAG;YACzB,IAAI,WAAW,CAAC,EAAE,UAAU,CAAC;YAC7B,EAAE,aAAa,CAAC;YAChB,EAAE,WAAW,CAAC;QACf,OAAO;YACN,IAAI,MAAM,IAAI,CAAC,MAAM;YACrB,MAAM,EAAE,WAAW,GAAI;gBACtB,IAAI,IAAI,EAAE,UAAU,CAAC;gBACrB,IAAI,WAAW,CAAC;YAChB,oCAAoC;YACpC,uDAAuD;YACvD,qDAAqD;YACrD,+BAA+B;YAChC;YACA,IAAI,WAAW,CAAC;YAChB,EAAE,WAAW,CAAC;QACf;QACA,OAAO;IACR;IAEA,2BAA2B;IAC3B,SAAS;QACR,IAAI;YACH,YAAY,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,MAAM,GAAG,QAAQ;YACjE,2BAA2B,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,gBAAgB;YAC/E,IAAI,CAAC,CAAA,GAAA,+BAAe,AAAD,KAClB,IAAI,CAAC,yBAAyB,CAAC,UAAU,WAAW;QAEtD,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IAAI;gBAC1B,SAAM,IAAI;gBACV,IAAI,CAAC,6BAA6B,CAAC;YACpC,OAAO;gBACN,IAAI,EAAE,OAAO,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,yBAAyB,GAAG;oBAC9D,IAAI,KAAK,CAAA,GAAA,6BAAmB,AAAD,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC;oBAC9C,SAAM,IAAI;oBACV,IAAI,CAAC,6BAA6B,CAAC;gBACpC,OACC,MAAM;YAER;QACD;IACD;IAEA,2BAA2B;IAC3B,UAAU;QACT,IAAI,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACzC,IAAI;YACH,IAAI,SAAS,UAAU,QAAQ;YAC/B,OAAO,mBAAmB,CAAC;YAC3B,OAAO,EAAE,gBAAgB;gBACxB,KAAK,GAAA,0BAAY;oBAChB,IAAI,CAAC,4BAA4B,CAAC;oBAClC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC;oBACjC;gBACD,KAAK,GAAA,2BAAa;gBAClB,KAAK,GAAA,2BAAa;oBACjB,IAAI,CAAC,6BAA6B,CAAC;oBACnC,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC;oBACjC;gBACD,KAAK,GAAA,2BAAa;oBACjB,IAAI,CAAC,kBAAkB,CAAC;oBACxB,IAAI,CAAC,QAAQ,GAAG,gBAAgB,CAAC;oBACjC;YACF;QACD,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IAAI;gBAC1B,SAAM,IAAI;gBACV,IAAI,CAAC,6BAA6B,CAAC;YACpC,OAAO;gBACN,IAAI,EAAE,OAAO,IAAI,EAAE,OAAO,CAAC,OAAO,CAAC,yBAAyB,GAAG;oBAC9D,IAAI,KAAK,CAAA,GAAA,6BAAmB,AAAD,EAAE,EAAE,OAAO,CAAC,MAAM,CAAC;oBAC9C,SAAM,IAAI;oBACV,IAAI,CAAC,6BAA6B,CAAC;gBACpC,OACC,MAAM;YAER;QACD;IACD;IAEA,UAAU;IAEV,kBAAkB,IAAI,EAAE;QACvB,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;QACjC,IAAI,IAAI,KAAK,SAAS;QACtB,IAAI,GACH,MAAM,AAAC,CAAA,UAAU,EAAE,MAAM,GAAG,cAAc,EAAC,KAAM,CAAA,GAAA,0BAAW,AAAD,EAAE,WAAW,CACvE,IAAI,EAAE,SAAS;QAGjB,OAAO;IACR;IAGA,2BAA2B;IAE3B,kCAAkC;QACjC,OAAO,IAAI,CAAC,4BAA4B;IACzC;IAEA,sBAAsB,GAAG,EAAE,OAAO,EAAE;QACnC,IAAI,SAAM,kBAAkB,CAAC,UAAU;YACtC,IAAI,IAAI;YACR,IAAI,aAAa,CAAA,GAAA,wBAAU,AAAD,GAAG,IAAI,EAAE,MAAM;YACzC,EAAE,UAAU,CAAC;QACd;QACA,OAAO;IACR;IAEA,SAAS;QACR,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,mBAAY,AAAD;QAChB,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,UAAU;QACT,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,qBAAa,AAAD;QACjB,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,OAAO;IACR;IAEA,UAAU;QACT,IAAI,OAAO;QACX,IAAI;YACH,OAAO,CAAA,GAAA,qBAAa,AAAD;QACpB,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,KAAK,UAAU,CAAC;QAChB,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,OAAO;IACR;IAEA,SAAS;IACT,YAAY;QACX,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,yBAAe,AAAD;QACnB,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,mBAAmB,GAAG,EAAE;QACvB,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,2BAAgB,AAAD,EAAE;QACtB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,aAAa;QACZ,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,2BAAgB,AAAD;QACpB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,mBAAmB,GAAG,EAAE,UAAU,EAAE;QACnC,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,2BAAgB,AAAD,EAAE;QACtB,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,IAAI,CAAC,YACJ,EAAE,uBAAuB;QAE1B,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,SAAS;IACT,aAAa;QACZ,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,2BAAgB,AAAD;QACpB,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,UAAU;QACT,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,qBAAa,AAAD;QACjB,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO;iBAEP,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,oBAAoB,CAAC,EAAE;QACtB,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,2BAAgB,AAAD,EAAE,OAAO;QAC7B,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,aAAa;QACZ,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,2BAAgB,AAAD;QACpB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,aAAa;QACZ,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,2BAAgB,AAAD;QACpB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,WAAW;QACV,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,uBAAc,AAAD;QAClB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,kBAAkB;QACjB,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,qCAAqB,AAAD;QACzB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,SAAS;QACR,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,mBAAY,AAAD;QAChB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,OAAO;IACR;IAEA,qBAAqB;QACpB,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,2CAAwB,AAAD;QAC5B,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,EAAE,uBAAuB;QACzB,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,SAAS;QACR,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,mBAAY,AAAD;QAChB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,CAAA,GAAA,kBAAU,AAAD,EAAE;QACX,OAAO;IACR;IAEA,aAAa,GAAG,EAAE;QACjB,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QACxB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,OAAO;IACR;IAEA,UAAU,GAAG,EAAE;QACd,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,yBAAe,AAAD,EAAE;QACrB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,OAAO;IACR;IAEA,eAAe;QACd,IAAI,IAAI;QACR,IAAI;YACH,IAAI,CAAA,GAAA,+BAAkB,AAAD;QACtB,EAAE,OAAO,KAAK;YACb,IAAI,SAAM,YAAY,CAAC,MACtB,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;iBAEtB,MAAM;QAER;QACA,EAAE,UAAU,CAAC;QACb,IAAI,IAAI,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QACvB,IAAI,CAAC,4BAA4B,GAAG;QACpC,OAAO;IACR;IAGA,uBAAuB;IACvB,aAAa,GAAG,EAAE;QACjB,OAAO;YACN,KAAK;gBAAK,OAAO,IAAI,CAAC,UAAU;YAChC,KAAK;gBAAK,OAAO,IAAI,CAAC,OAAO;YAC7B,KAAK;gBAAK,OAAO,IAAI,CAAC,UAAU;YAChC,KAAK;gBAAK,OAAO,IAAI,CAAC,UAAU;YAChC,KAAK;gBAAK,OAAO,IAAI,CAAC,UAAU;YAChC,KAAK;gBAAK,OAAO,IAAI,CAAC,QAAQ;YAC9B,KAAK;gBAAK,OAAO,IAAI,CAAC,MAAM;YAC5B,KAAK;gBAAK,OAAO,IAAI,CAAC,SAAS;YAC/B,KAAK;gBAAK,OAAO,IAAI,CAAC,kBAAkB;YACxC,KAAK;gBAAK,OAAO,IAAI,CAAC,MAAM;YAC5B,KAAK;gBAAK,OAAO,IAAI,CAAC,MAAM;YAC5B,KAAK;gBAAK,OAAO,IAAI,CAAC,OAAO;YAC7B,KAAK;gBAAK,OAAO,IAAI,CAAC,OAAO;YAC7B,KAAK;gBAAK,OAAO,IAAI,CAAC,YAAY;QACnC;QACA,6BAA6B;QAC7B,IAAI,cAAc;QAClB,IAAI,cAAc,CAAC,YAAY,IAAI,CAAC;QACpC,IAAI,aACH,OAAO,IAAI,CAAC,YAAY,CAAC;aAEzB,OAAO,IAAI,CAAC,SAAS,CAAC;IAExB;AACD;AAEA,MAAM,cAAc,IAAI;;;AChrExB;;;;;;;;;;;;;;;AAeA;;AAoLA,yCAAS;AAAT,kDAAc;AAlLd;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;CAEC,GACD,MAAM,YAAY,CAAA,GAAA,4BAAY,AAAD;IAC5B,aAAc;QACb,KAAK;QACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,kBAAU,AAAD;QAC7B,IAAI,CAAC,WAAW;IACjB;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,IAAI,CAAC,UAAU;QAEvB,OAAO,MAAM,KAAK,CAAC,qBAAqB;IACzC;IAEA,8BAA8B;QAC7B,IAAI,CAAC,UAAU,CAAC;IACjB;IAGA,aAAa;QACZ,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,GAAG,IAAI,EAAE,IAAI,CAAC,4BAA4B,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,EAAE,IAAI,CAAC,iBAAiB,GAAG,EAAE,KAAK,CAAC,iBAAiB,MAAM,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC;IAClL;IAEA,YAAY,CAAC;IACb,gBAAgB,CAAC;IAEjB,oBAAoB,GAAG,EAAE,IAAI,EAAE;QAC9B,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,SAAS;IACnD;IAEA,SAAS,QAAQ,EAAE;QAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAClB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;YAC7B,EAAE,QAAQ,CAAC;QACZ;IACD;IAEA,qBAAqB,IAAI,EAAE;QAC1B,OAAO,CAAC,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC;IACnC;IAEA,uBAAuB,IAAI,EAAE;QAC5B,IAAI,CAAC,eAAe,CAAC;IACtB;IAEA,cAAc,CAAC,EAAE,CAAC,EAAE;QACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,IACpB,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG;QAE7B,KAAK,CAAC,cAAc,GAAG;IACxB;IAEA,cAAc;QACb,OAAO;IACR;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,IAAI;QACR,IAAI,CAAC,cAAc,CAAC,GAAG;QACvB,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACR;IAEA,mBAAmB;QAClB,IAAI,IAAI;QACR,IAAI,QAAQ;QACZ,IAAI,CAAC,cAAc,CAAC,CAAA;YACnB,IAAI,EAAE,WAAW,MAAM,UAAU;gBAChC,IAAI,QAAQ,GACX,KAAK;gBAEN,KAAK,EAAE,gBAAgB;YACxB,OACC,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,4DAA4D,EAAE,MAAM,MAAM,EAAE,EAAE,WAAW,GAAG,SAAS,CAAC;YAElI;QACD;QACA,OAAO;IACR;IAEA,iBAAiB;QAChB,IAAI,IAAI,CAAC,SAAS,IACjB,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,GAAG;aAEtB,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,aAAa;IAElC;IAEA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,IAAI,UAAU,WAAW,UAAU;QACnC,KAAK,CAAC,WAAW,YAAY,aAAa;QAC1C,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,QAAQ,SAAS,CAAC,GAAG,CAAC;IACvB;IAEA;;CAEA,GACA,SAAS,GAAG,EAAE;QACb,IAAI,IAAI,CAAC,OAAO,EAAE;YACjB,wCAAwC;YACxC,IAAI,WAAW,IAAI,CAAC,QAAQ,CAAC;YAC7B,IAAI,WAAW;YACf,IAAI,CAAC,cAAc,CAAC,SAAS,KAAK;gBACjC,IAAI,WAAW,CAAA,GAAA,8BAAiB,AAAD,EAAE,OAAO;gBACxC,yEAAyE;gBACzE,WAAW,SAAS,oBAAoB,CAAC,UAAU;YACpD;YACA,SAAS,UAAU,CAAC;YACpB,OAAO;QACR,OACC,OAAO,IAAI;IAEb;IAGA,WAAW,GAAG,EAAE;QACf,KAAK,CAAC,WAAW;QACjB,uDAAuD;QACvD,IAAI,CAAC,cAAc,CAAC,CAAA;YACnB,IAAI,SAAM,YAAY,CAAC,IACtB,EAAE,UAAU,CAAC;QAEf;IACD;IAEA,oBAAoB;QACnB,OAAO;IACR;IAEA,cAAc,OAAO,EAAE;QACtB,OAAO;YACN,cAAe;YACf,aAAa;YAEb,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;QACN;IACD;IAEA,UAAU;QACT,OAAO,KAAK,CAAC,YAAY,CAAA,GAAA,YAAI,AAAD,EAAE,OAAO,KAAK,IAAI,CAAC,QAAQ,CAAC,OAAO;IAChE;AACD;AAEA,SAAS;IACR,IAAI,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,OAAO,KAChC,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC;OACtB,EAAE,CAAA,GAAA,YAAI,AAAD,EAAE,KAAK,GAAG,CAAC;IAEtB,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI;AAC1B;;;ACjMA;;;;;;;;;;;;;;;AAeA;;AAsMA,0CAAS;AAAT,mDAAe;AApMf;AAGA;AACA;AACA;AACA;AACA;AAEA;AAOA;AAIA,MAAM,aAAa,CAAA,GAAA,4BAAY,AAAD;IAC7B,aAAc;QACb,KAAK;QACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,kBAAU,AAAD;QAC7B,IAAI,CAAC,aAAa;IACnB;IAEA,cAAc;QACb,OAAO;IACR;IAEA,8BAA8B;QAC7B,IAAI,CAAC,UAAU,CAAC;IACjB;IAGA,SAAS,OAAO,EAAE;QACjB,IAAI,IAAI;QACR,IAAI,CAAC,cAAc,CAAC,GAAG;QACvB,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACR;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,IAAI,CAAC,UAAU;QAEvB,OAAO,MAAM,KAAK,CAAC,qBAAqB;IACzC;IAEA,aAAa;QACZ,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,GAAG,KAAK,EAAE,IAAI,CAAC,4BAA4B,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,EAAE,IAAI,CAAC,iBAAiB,GAAG,EAAE,KAAK,CAAC,iBAAiB,MAAM,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC;IACnL;IAEC,oBAAoB,GAAG,EAAE,IAAI,EAAE;QAC/B,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,UAAU;IACpD;IAEA,WAAW,GAAG,EAAE;QACf,KAAK,CAAC,WAAW;QACjB,uDAAuD;QACvD,IAAI,CAAC,cAAc,CAAC,CAAA;YACnB,IAAI,SAAM,YAAY,CAAC,IACtB,EAAE,UAAU,CAAC;QAEf;IACD;IAEA,YAAY,CAAC;IACb,cAAc,CAAC;IAEf,iBAAiB;QAChB,IAAI,IAAI,CAAC,SAAS,IACjB,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,IAAI;aAEvB,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,cAAc;IAEnC;IAEA,mBAAmB;QAClB,IAAI,IAAI;QACR,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;YAC7B,IAAI,CAAE,CAAA,EAAE,WAAW,MAAM,UAAS,GACjC,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE;YAE3B,KAAK,EAAE,OAAO;QACf;QACA,OAAO;IACR;IAEA,eAAe;QACd,OAAO,IAAI,cAAc,IAAI;IAC9B;IAEA,qBAAqB,IAAI,EAAE;QAC1B,OAAO,CAAC,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC;IACnC;IAEA,uBAAuB,IAAI,EAAE;QAC5B,IAAI,CAAC,eAAe,CAAC;IACtB;IAIA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,IAAI,UAAU,WAAW,UAAU;QAEnC,IAAI,WAAW;QAEf,KAAK,CAAC,WAAW,YAAY,aAAa;QAC1C,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,IAAI,cAAc,CAAA,GAAA,2CAAwB,AAAD,GACxC,QAAQ,SAAS,CAAC,GAAG,CAAC;aAChB,IAAI,cAAc,CAAA,GAAA,4CAAyB,AAAD,GAChD,QAAQ,SAAS,CAAC,GAAG,CAAC;aAChB,IAAI,cAAc,CAAA,GAAA,4CAAyB,AAAD,GAChD,QAAQ,SAAS,CAAC,GAAG,CAAC;aAChB,IAAI,cAAc,CAAA,GAAA,4CAAyB,AAAD,GAChD,QAAQ,SAAS,CAAC,GAAG,CAAC;QAEvB,QAAQ,SAAS,CAAC,GAAG,CAAC;IACvB;IAEA,SAAS,QAAQ,EAAE;QAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAClB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;YAC7B,EAAE,QAAQ,CAAC;QACZ;IACD;IAEA,cAAc,CAAC,EAAE,CAAC,EAAE;QACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,IACpB,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG;QAE7B,KAAK,CAAC,cAAc,GAAG;IACxB;IAEA;;CAEA,GACA,SAAS,GAAG,EAAE;QACb,IAAI,IAAI,CAAC,OAAO,EAAE;YACjB,wCAAwC;YACxC,IAAI,WAAW,IAAI,CAAC,QAAQ,CAAC;YAC7B,IAAI,WAAW;YACf,IAAI,CAAC,cAAc,CAAC,SAAS,KAAK;gBACjC,IAAI,WAAW,CAAA,GAAA,8BAAiB,AAAD,EAAE,OAAO;gBACxC,yEAAyE;gBACzE,WAAW,SAAS,oBAAoB,CAAC,UAAU;YACpD;YACA,SAAS,UAAU,CAAC;YACpB,OAAO;QACR,OACC,OAAO,IAAI;IAEb;IAIA,oBAAoB;QACnB,OAAO;IACR;IAEA,cAAc,OAAO,EAAE;QACtB,OAAO;YACN,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;QAEN;IACD;IAEA,UAAU;QACT,OAAO,KAAK,CAAC,YAAY,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ;IACvC;AACD;AAEA,SAAS;IACR,IAAI,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,KACjC,MAAM,IAAI,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC;OAC1B,EAAE,CAAA,GAAA,YAAI,AAAD,EAAE,KAAK,GAAG,CAAC;IAEtB,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI;AAC1B;;;ACnNA;;;;;;;;;;;;;;;AAeA;;AAoPA,0CAAS;AAAT,mDAAe;AAlPf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;;;CAGC,GACD,MAAM,aAAa,CAAA,GAAA,4BAAY,AAAD;IAE7B;;EAEC,GACD,aAAc;QACb,KAAK;QACL,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAA,GAAA,kBAAU,AAAD;QAC7B,IAAI,CAAC,aAAa;IACnB;IAEA,8BAA8B;QAC7B,IAAI,CAAC,UAAU,CAAC;IACjB;IAGA,cAAc,GACd,cAAc;QACb,OAAO;IACR;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,IAAI;QACR,IAAI,CAAC,cAAc,CAAC,GAAG;QACvB,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACR;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,IAAI,CAAC,UAAU;QAEvB,OAAO,MAAM,KAAK,CAAC,qBAAqB;IACzC;IAEA,aAAa;QACZ,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,GAAG,KAAK,EAAE,IAAI,CAAC,4BAA4B,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,EAAE,IAAI,CAAC,iBAAiB,GAAG,EAAE,KAAK,CAAC,iBAAiB,MAAM,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC;IACnL;IAEA,oBAAoB,GAAG,EAAE,IAAI,EAAE;QAC9B,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,UAAU;IACpD;IAEA,qBAAqB,IAAI,EAAE;QAC1B,OAAO,CAAC,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC;IACnC;IAEA,uBAAuB,IAAI,EAAE;QAC5B,IAAI,CAAC,eAAe,CAAC;IACtB;IAEA,WAAW,GAAG,EAAE;QACf,KAAK,CAAC,WAAW;QACjB,uDAAuD;QACvD,IAAI,CAAC,cAAc,CAAC,CAAA;YACnB,IAAI,SAAM,YAAY,CAAC,IACtB,EAAE,UAAU,CAAC;QAEf;IACD;IAEA,YAAY,CAAC;IACb,cAAc,CAAC;IAEf,mBAAmB;QAClB,IAAI,IAAI;QACR,IAAI,CAAC,cAAc,CAAC,CAAA;YACnB,IAAI,EAAE,WAAW,MAAM,YACtB,KAAK,EAAE,OAAO;iBACR,IAAI,EAAE,WAAW,MAAM,eAC7B,KAAK,EAAE,OAAO;iBACR,IAAI,EAAE,WAAW,MAAM,aAC7B,KAAK;iBACC,IAAI,EAAE,WAAW,MAAM,UAC7B,KAAK,EAAE,gBAAgB;iBAEvB,MAAM,IAAI,CAAA,GAAA,gBAAM,AAAD,EAAE;QAEnB;QACA,OAAO;IACR;IAEA,uBAAuB,OAAO,EAAE;QAC/B,IAAI,WAAW,WAAW,GAAG,EAC5B,OAAO,IAAI,cAAc,IAAI;QAE9B,OAAO;IACR;IAEA,SAAS,QAAQ,EAAE;QAClB,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC;QAClB,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC;YAC7B,EAAE,QAAQ,CAAC;QACZ;IACD;IAEA,cAAc,CAAC,EAAE,CAAC,EAAE;QACnB,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,IACpB,EAAE,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG;QAE7B,KAAK,CAAC,cAAc,GAAG;IACxB;IAEA,iBAAiB;QAChB,IAAI,IAAI,CAAC,SAAS,IACjB,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,IAAI;aAEvB,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,cAAc;IAEnC;IAEA,aAAa;IACb,eAAe;QACd,OAAO,IAAI,cAAc,IAAI;IAC9B;IAEA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,IAAI,UAAU,WAAW,UAAU;QAEnC,KAAK,CAAC,WAAW,YAAY,aAAa;QAC1C,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,IAAI,cAAc,CAAA,GAAA,2CAAwB,AAAD,GACxC,QAAQ,SAAS,CAAC,GAAG,CAAC;aAChB,IAAI,cAAc,CAAA,GAAA,4CAAyB,AAAD,GAChD,QAAQ,SAAS,CAAC,GAAG,CAAC;aAChB,IAAI,cAAc,CAAA,GAAA,4CAAyB,AAAD,GAChD,QAAQ,SAAS,CAAC,GAAG,CAAC;aAChB,IAAI,cAAc,CAAA,GAAA,4CAAyB,AAAD,GAChD,QAAQ,SAAS,CAAC,GAAG,CAAC;QAEvB,QAAQ;QACR,IAAI,cAAc;QAClB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,IAAI,IAAK;YAC5C,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC;YACxB,IAAI,SAAM,YAAY,CAAC,IAAI;gBAC1B,cAAc;gBACd;YACD;QACD;QACA,IAAI,AAAC,CAAE,CAAA,cAAc,CAAA,GAAA,uCAAoB,AAAD,CAAA,KAAO,CAAC,aAC/C,QAAQ,SAAS,CAAC,GAAG,CAAC;aAEtB,QAAQ,SAAS,CAAC,MAAM,CAAC;QAE1B,QAAQ,SAAS,CAAC,GAAG,CAAC;IACvB;IAEA;;CAEA,GACA,SAAS,GAAG,EAAE;QACb,IAAI,IAAI,CAAC,OAAO,EAAE;YACjB,wCAAwC;YACxC,IAAI,WAAW,IAAI,CAAC,QAAQ,CAAC;YAC7B,IAAI,WAAW;YACf,IAAI,CAAC,cAAc,CAAC,SAAS,KAAK;gBACjC,IAAI,WAAW,CAAA,GAAA,8BAAiB,AAAD,EAAE,OAAO;gBACxC,yEAAyE;gBACzE,WAAW,SAAS,oBAAoB,CAAC,UAAU;YACpD;YACA,SAAS,UAAU,CAAC;YACpB,OAAO;QACR,OACC,OAAO,IAAI;IAEb;IAIA,oBAAoB;QACnB,OAAO;IACR;IAEA,cAAc,OAAO,EAAE;QACtB,OAAO;YAEN,sDAAsD;YACtD,sDAAsD;YACtD,kDAAkD;YAClD,qCAAqC;YACrC,WAAW;YACX,aAAa;YACb,aAAa;YACb,cAAc;YAGd,SAAS;YACT,aAAa;YAEb,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;QAEN;IACD;IAGA,UAAU;QACT,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ;IACrB;AACD;AAEA,SAAS;IACR,IAAI,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,KACjC,MAAM,IAAI,CAAA,GAAA,gBAAM,AAAD,EAAE,CAAC;OACb,EAAE,CAAA,GAAA,YAAI,AAAD,EAAE,KAAK,GAAG,CAAC;IAEtB,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI;AAC1B;;;ACjQA;;;;;;;;;;;;;;;AAeA;;AA2SA,qDAAS;AAAT,8DAA0B;AAzS1B;AAEA;AACA;AACA;AACA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AAGA,MAAM,wBAAwB,CAAA,GAAA,kBAAO,AAAD;IACnC,YAAY,GAAG,CAAE;QAChB,KAAK,CAAC;QAEN,iEAAiE;QACjE,8DAA8D;QAC9D,iEAAiE;QACjE,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,UAAU,GAAG;QAElB,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,QAAQ,GAAG;QAEhB,CAAA,GAAA,QAAE,AAAD,EAAE,QAAQ,CAAC,IAAI;IACjB;IAEA,cAAc;QACb,OAAO,IAAI,CAAC,UAAU;IACvB;IAEA,aAAa;QACZ,OAAO,IAAI,CAAC,SAAS;IACtB;IAEA,QAAQ;QACP,OAAO;IACR;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,IAAI,CAAC,UAAU;QAEvB,OAAO,CAAC,EAAE,EAAE,KAAK,CAAC,mBAAmB,EAAE,CAAC;IACzC;IAEA,aAAa;QACZ,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,GAAG,EAAE,IAAI,CAAC,4BAA4B,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,EAAE,IAAI,CAAC,iBAAiB,GAAG,EAAE,KAAK,CAAC,iBAAiB,MAAM,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC;IAC9K;IAEA,uBAAuB,IAAI,EAAE;QAC5B,IAAI,MACH,IAAI,CAAC,cAAc,CAAC;IAEtB;IAEA,uBAAuB;QACtB,IAAI,IAAI,IAAI,CAAC,cAAc;QAC3B,IAAI,CAAC,GAAG,OAAO;QACf,OAAO;IACR;IAGA,oBAAoB,GAAG,EAAE,IAAI,EAAE;QAC9B,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,KAAK;IAC/C;IAEA,cAAc;QACb,OAAO;IACR;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,IAAI;QACR,IAAI,CAAC,cAAc,CAAC,GAAG;QACvB,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACR;IAEA,aAAa,GAAG,EAAE;QACjB,KAAK,CAAC,aAAa;IACpB;IAEA,SAAS,YAAY,EAAE;QACtB,0EAA0E;QAE1E,2DAA2D;QAC3D,yDAAyD;QACzD,IAAI,aAAa,IAAI,CAAC,QAAQ,CAAC;QAC/B,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,IAAI,IACvC,WAAW,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC;QAGxC,iEAAiE;QACjE,qCAAqC;QAErC,IAAI,KAAK,CAAA,GAAA,uCAAsB,AAAD;QAC9B,WAAW,QAAQ,GAAG,WAAW,aAAa,CAAC;QAE/C,iEAAiE;QACjE,sEAAsE;QACtE,mEAAmE;QACnE,sEAAsE;QACtE,mBAAmB;QACnB,WAAW,QAAQ,CAAC,YAAY,CAAC,YAAY,CAAC;QAE9C,WAAW,cAAc,GAAG;QAE5B,GAAG,WAAW,CAAC;QACf,IAAI,MAAM,IAAI,CAAA,GAAA,4DAA0C,AAAD,EAAE,YAAY;QACrE,GAAG,GAAG,CAAC;QACP,GAAG,QAAQ;QAEX,kFAAkF;QAElF,OAAO;IACR;IAEA,SAAS,YAAY,EAAE;QACtB,CAAA,GAAA,YAAI,AAAD,EAAE,eAAe,CAAC;QACrB,IAAI,CAAC,cAAc,GAAG;QACtB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,WAAW;IACjB;IAEA,cAAc;QACb,IAAI,IAAI,CAAC,UAAU,EAClB;QAED,IAAI,IAAI,CAAC,cAAc,CAAC,QAAQ,EAC/B;QAED,IAAI,mBAAmB;QACvB,IAAI;YACH,mBAAmB,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,+BAA+B,CAAC,IAAI;QAClF;;;;;;;;;;;;;GAaA,GACD,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,IAAI,CAAC,MAAM,CAAC;iBAEZ,MAAM;QAER;QACA,IAAI,oBAAoB,CAAA,GAAA,iCAAiB,AAAD,KAAK,oBAAoB,CAAA,GAAA,kCAAkB,AAAD,GAAG;YACpF,IAAI,kBAAkB,CAAA,GAAA,kCAAc,AAAD,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,cAAc;YACvE,IAAI,SAAM,YAAY,CAAC,kBACtB,IAAI,CAAC,MAAM,CAAC;iBACN,IAAI,oBAAoB,CAAA,GAAA,iCAAiB,AAAD,GAC9C,IAAI,CAAC,MAAM,CAAC;iBAEZ,IAAI,CAAC,MAAM,CAAC;QAEd;QACA,IAAI,CAAC,oBAAoB,CAAC;QAC1B,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;IAE5C;IAEA,OAAO,MAAM,EAAE;QACd,CAAA,GAAA,YAAI,AAAD,EAAE,kBAAkB,CAAC,IAAI,CAAC,cAAc;QAC3C,IAAI,CAAC,QAAQ,CAAC,QAAQ;QACtB,IAAI,CAAC,QAAQ,GAAG;QAEhB,IAAI,CAAC,SAAS,GAAG;QACjB,kEAAkE;QAClE,iEAAiE;QACjE,4EAA4E;QAC5E,sEAAsE;QACtE,6EAA6E;QAC7E,4EAA4E;QAC5E,yEAAyE;QACzE,iEAAiE;QACjE,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;IAC5B;IAEA,OAAO,MAAM,EAAE;QACd,mBAAmB;QACnB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC;IAC5B;IAEA,SAAS;QACR,CAAA,GAAA,YAAI,AAAD,EAAE,kBAAkB,CAAC,IAAI,CAAC,cAAc;QAC3C,IAAI,CAAC,QAAQ,CAAC,QAAQ;QACtB,IAAI,CAAC,QAAQ,GAAG;QAChB,IAAI,CAAC,UAAU,GAAG;IACnB;IAEA,SAAS;QACR,IAAI,CAAC,WAAW;IACjB;IAEA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,IAAI,UAAU,WAAW,UAAU;QACnC,IAAI,UAAU;QACd,IAAI,CAAE,CAAA,cAAc,CAAA,GAAA,sCAAmB,AAAD,CAAA,GAAI;YACzC,UAAU,SAAS,aAAa,CAAC;YACjC,QAAQ,SAAS,CAAC,GAAG,CAAC;YACtB,QAAQ,WAAW,CAAC;QACrB;QACA,KAAK,CAAC,eAAe,YAAY,aAAa;QAC9C,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,IAAI,CAAE,CAAA,cAAc,CAAA,GAAA,sCAAmB,AAAD,CAAA,GAAI;YACzC,IAAI,cAAc,CAAA,GAAA,uCAAoB,AAAD,GACpC,QAAQ,SAAS,CAAC,GAAG,CAAC;iBAEtB,QAAQ,SAAS,CAAC,MAAM,CAAC;YAE1B,IAAI,IAAI,CAAC,SAAS,EACjB,QAAQ,SAAS,CAAC,GAAG,CAAC;iBAEtB,QAAQ,SAAS,CAAC,MAAM,CAAC;YAE1B,QAAQ,SAAS,GAAG,IAAI,CAAC,cAAc,IAAI,oBAAoB;QAChE;IACD;IAEA,mBAAmB,CAAC;IAEpB,oBAAoB;IACnB,6CAA6C;IAC9C;IAEA,cAAc,OAAO,EAAE;QACtB,+BAA+B;QAC/B,OAAO;YACN,kBAAkB;QACnB;IACD;IAEA,OAAO,4BAA4B,OAAO,EAAE,SAAS,EAAE;QACtD,IAAI,MAAM,yBAAyB;QAEnC,mDAAmD;QACnD,IAAI,OAAO,EAAE;QACb,IAAI,MAAM,OAAO,CAAC,YACjB,OAAO;aAEP,OAAO,MAAM,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,MAAM,CAAC;QAErD,IAAI,iBAAiB;QACrB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAChC,iBAAiB,IAAI,oBAAoB,CAAC,IAAI,CAAC,EAAE,EAAE;QAEpD,OAAO;IACR;IAEA,UAAU;QACT,IAAI,IAAI,CAAA,GAAA,YAAI,AAAD,EAAE,mBAAmB;QAChC,IAAI,IAAI,CAAC,QAAQ,EAChB,KAAK,IAAI,CAAC,QAAQ,CAAC,OAAO;QAE3B,OAAO,IAAI,KAAK,CAAC;IAClB;IAEA,sBAAsB;QACrB,IAAI,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,SAAS,EACrC,IAAI,CAAC,MAAM;QAEZ,wEAAwE;QACxE,iFAAiF;QACjF,IAAI,IAAI,CAAC,QAAQ,EAChB,IAAI,CAAC,QAAQ,CAAC,QAAQ;IAExB;AACD;AAEA,SAAS,yBAAyB,GAAG;IACpC,IAAI,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,mBAAmB,KAC5C,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC;OACtB,EAAE,CAAA,GAAA,YAAI,AAAD,EAAE,KAAK,GAAG,CAAC;IAEtB,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI,gBAAgB;AAC1C;;;ACxTA;;;;;;;;;;;;;;;AAeA,GAGA,yEAAyE;;;AAmSzE,mDAAS;AAAT,4DAAwB;AAjSxB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM,oBAAoB;AAC1B,MAAM,cAAc;AACpB,MAAM,oBAAoB;AAC1B,MAAM,kBAAkB;AACxB,MAAM,mBAAmB;AAGzB,MAAM,sBAAsB,CAAA,GAAA,4BAAY,AAAD;IACtC,aAAc;QACb,KAAK;QACL,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,2BAA2B,GAAG;QACnC,IAAI,CAAC,SAAS,GAAG,EAAE;QAEnB,IAAI,CAAC,KAAK,GAAG;IACd;IAEA,YAAY,GAAG,EAAE;QAChB,IAAI,IAAI,CAAC,WAAW,CAAC,MACpB;QAED,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QACpB,IAAI,IAAI,CAAC,SAAS,EACjB,CAAA,GAAA,4CAAoB,AAAD,EAAE,gCAAgC,CAAC,IAAI;IAE5D;IAEA,YAAY,GAAG,EAAE;QAChB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,IAAK;YAC/C,IAAI,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,KACxB,OAAO;QAET;QACA,OAAO;IACR;IAEA,qBAAqB;QACpB,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAA,SAAS,QAAQ;YACvC,SAAS,MAAM;QAChB,CAAA,EAAE,IAAI,CAAC,IAAI;IACZ;IAEA,SAAS;QACR,IAAI,CAAC,KAAK;QACV,IAAI,CAAC,KAAK,GAAG;IACd;IAEA,cAAc;QACb,OAAO,IAAI,CAAC,KAAK,IAAI;IACtB;IAEA,YAAY;QACX,OAAO,IAAI,CAAC,KAAK,IAAI;IACtB;IAEA,aAAa;QACZ,OAAO,IAAI,CAAC,KAAK,IAAI;IACtB;IAEA,cAAc;QACb,OAAO,IAAI,CAAC,KAAK,IAAI;IACtB;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,IAAI,CAAC,UAAU;IAExB;IAEA,aAAa;QACZ,mGAAmG;QACnG,yHAAyH;QACzH,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,UAAU;IACrC;IAEA,kFAAkF;IAClF,oBAAoB;QACnB,OAAO;IACR;IAEA,cAAc;IACd,IAAI,2BAA2B,EAAE;QAChC,IAAI,CAAC,2BAA2B,GAAG;QACnC,IAAI,CAAC,KAAK,GAAG,CAAA,GAAA,cAAQ,AAAD;IACrB;IAEA,OAAO,KAAK,EAAE;QACb,IAAI,CAAC,cAAc,CAAC,OAAO;IAC5B;IAEA,OAAO,KAAK,EAAE;QACb,IAAI,CAAC,cAAc,CAAC,OAAO;IAC5B;IAEA,eAAe,KAAK,EAAE,YAAY,EAAE;QACnC,IAAI,IAAI,CAAC,UAAU,IAClB,oDAAoD;QACpD;QAED,IAAI,IAAI,CAAC,KAAK,GAAG,CAAA,GAAA,cAAQ,AAAD,KAAK;YAC5B,qEAAqE;YACrE,IAAI,CAAC,UAAU,GAAG;YAClB;QACD;QACA,IAAI,CAAC,oBAAoB,CAAC;QAC1B,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;QAC3C,IAAI;YACH,IAAI,IAAI,CAAC,WAAW,MAAM,GACzB,IAAI,CAAC,WAAW,CAAC;iBAEjB,IAAI,CAAC,cAAc,CAAC,OAAO;;QAG7B,IAAI,CAAC,KAAK,GAAG,eAAe,kBAAkB;QAC9C,IAAI,CAAC,CAAA,GAAA,6BAAW,AAAD,EAAE,wBAAwB,EACxC,IAAI,CAAC,gBAAgB;QAEtB,IAAI,CAAC,kBAAkB;IACxB;IAEA,iBAAiB,KAAK,EAAE;QACvB,IAAI,CAAC,MAAM,CAAC,OAAO;IACpB;IAEA,YAAY,KAAK,EAAE;QAClB,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC,IAAI,EAAE;IAClD;IAEA,YAAY,KAAK,EAAE;QAClB,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC,IAAI,EAAE;IAClD;IAEA,WAAW;QACV,IAAI,iBAAkB,CAAC,QAAU,IAAI,CAAC,WAAW,CAAC;QAClD,IAAI,iBAAkB,CAAC,QAAU,IAAI,CAAC,WAAW,CAAC;QAClD,IAAI,CAAC,2BAA2B,CAAC,WAAW,CAAC,gBAAgB,gBAAgB,IAAI;QACjF,IAAI,CAAC,KAAK,GAAG;IACd;IAEA,oBAAoB,GAAG,EAAE,IAAI,EAAE;QAC9B,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,KAAK;IAC/C;IAEA,uBAAuB,IAAI,EAAE;QAC5B,IAAI,CAAC,WAAW,GAAG;IACpB;IAEA,uBAAuB;QACtB,OAAO,IAAI,CAAC,WAAW;IACxB;IAEA,cAAc;QACb,OAAO;IACR;IAEA,SAAS,OAAO,EAAE;QACjB,6EAA6E;QAC7E,kEAAkE;QAClE,4EAA4E;QAC5E,+DAA+D;QAC/D,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,QAAQ;IACnC;IAEA,mBAAmB;QAClB,IAAI,KAAK,IAAI,CAAC,cAAc;QAC5B,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,MAAM,EAAE,IAC9B,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC,EAAE,CAAC,EAAE;IAElD;IAEA,aAAa,GAAG,EAAE;QACjB,KAAK,CAAC,aAAa;IACpB;IAEA,kBAAkB;QACjB,IAAI,IAAI,CAAC,WAAW,KAAK,GACxB,OAAO,IAAI,CAAC,UAAU,CAAC;aAEvB,OAAO,IAAI,CAAA,GAAA,UAAG,AAAD;IAEf;IAEA,SAAS,GAAG,EAAE;QACb,IAAI,CAAC,IAAI,CAAC,WAAW,IAAI;YACxB,IAAI,CAAC,QAAQ;YACb,OAAO,IAAI;QACZ;QACA,IAAI,IAAI,CAAC,UAAU,IAAI;YACtB,IAAI,IAAI,CAAC,WAAW,KAAK,GAAG;gBAC3B,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC;gBACxB,IAAI,SAAM,eAAe,CAAC,MAAM,EAAE,UAAU,IAC3C,OAAO,EAAE,QAAQ,CAAC;qBAElB,OAAO;YAET,OACC,OAAO,IAAI,CAAA,GAAA,UAAG,AAAD;QAEf;QACA,kDAAkD;QAClD,OAAO,IAAI;IACZ;IAEA,WAAW,CAAC,EAAE;QACb,IAAI,GACH,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE;IAE5B;IAEA,oBAAoB;QACnB,OAAO;IACR;IAEA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,IAAI,UAAU,WAAW,UAAU;QACnC,IAAI,UAAU;QACd,IAAI,CAAE,CAAA,cAAc,CAAA,GAAA,sCAAmB,AAAD,CAAA,GAAI;YACzC,UAAU,SAAS,aAAa,CAAC;YACjC,QAAQ,SAAS,CAAC,GAAG,CAAC;YACtB,QAAQ,WAAW,CAAC;QACrB;QACA,KAAK,CAAC,WAAW,YAAY,aAAa;QAC1C,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,QAAQ,WAAW,CAAC;QACpB,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,IAAI,CAAE,CAAA,cAAc,CAAA,GAAA,sCAAmB,AAAD,CAAA,GAAI;YACzC,IAAI,cAAc,CAAA,GAAA,uCAAoB,AAAD,GACpC,QAAQ,SAAS,CAAC,GAAG,CAAC;iBAEtB,QAAQ,SAAS,CAAC,MAAM,CAAC;YAE1B,IAAI,IAAI,CAAC,SAAS,EACjB,QAAQ,SAAS,CAAC,GAAG,CAAC;iBAEtB,QAAQ,SAAS,CAAC,MAAM,CAAC;YAI1B,OAAO,IAAI,CAAC,KAAK;gBAChB,KAAK;oBACJ,QAAQ,SAAS,GAAG;oBACpB;gBACD,KAAK;oBACJ,IAAI,CAAA,GAAA,6BAAW,AAAD,EAAE,WAAW,EAC1B,QAAQ,SAAS,GAAG;yBAEpB,QAAQ,SAAS,GAAG;oBAErB;gBACD,KAAK;oBACJ,QAAQ,SAAS,GAAG;oBACpB;gBACD,KAAK;oBACJ,QAAQ,SAAS,GAAG;oBACpB;gBACD,KAAK;gBACL;oBACC,mBAAmB;oBACnB,QAAQ,SAAS,GAAG;oBACpB;YACF;QACD;IACD;IAEA,UAAU;QACT,OAAO,KAAK,CAAC,YAAY,CAAA,GAAA,YAAI,AAAD,EAAE,iBAAiB;IAChD;AACD;AAEA,SAAS;IACR,IAAI,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,iBAAiB,KAC1C,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC;OACtB,EAAE,CAAA,GAAA,YAAI,AAAD,EAAE,KAAK,GAAG,CAAC;IAEtB,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI;AAC1B;;;ACnTA;;;;;;;;;;;;;;;AAeA;;AA0EA,yCAAS;AAAT,kDAAc;AAxEd;AACA;AACA;AACA;AAEA,MAAM,YAAY,CAAA,GAAA,oBAAQ,AAAD;IACxB,aAAc;QACb,KAAK,CAAC,IAAI,WAAW;IACtB;IAEA,cAAc;QACb,OAAO;IACR;IAEA,WAAW;QACV,IAAI,IAAI;QACR,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACR;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,IAAI,CAAC,UAAU;QAEvB,OAAO,KAAK,CAAC,SAAS;IACvB;IAEA,aAAa;QACZ,OAAO,UAAU,IAAI,CAAC,iBAAiB;IACxC;IAEA,UAAU;QACT,OAAO;IACR;IAEA,mBAAmB;QAClB;IACD;IAEA,WAAW,GAAG,EAAE;QACf;IACD;IAEA,oBAAoB;QACnB,OAAO;IACR;IAEA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,KAAK,CAAC,WAAW,YAAY,aAAa;QAC1C,IAAI,UAAU,WAAW,UAAU;QACnC,QAAQ,SAAS,CAAC,GAAG,CAAC;IACvB;IAEA,cAAc,OAAO,EAAE;QACtB,OAAO,CACP;IACD;IAEA,UAAU;QACT,OAAO,KAAK,CAAC,YAAY,CAAA,GAAA,YAAI,AAAD,EAAE,OAAO;IACtC;AACD;AAEA,SAAS;IACR,IAAI,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,OAAO,KAChC,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC;OACtB,EAAE,CAAA,GAAA,YAAI,AAAD,EAAE,KAAK,GAAG,CAAC;IAEtB,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI;AAC1B;;;ACtFA;;;;;;;;;;;;;;;AAeA,GAEA,0BAA0B;;;AA4L1B,0EACC;AADD,sEAEC;AAFD,sEAGC;AAHD,wEAIC;AAJD,qEAKC;AALD,gFAMC;AAND,kFAOC;AAPD,yEAQC;AARD,6EASC;AAnMD;AACA;AAEA,MAAM;IAEL,aAAc,CACd;IAEA,YAAY,EAAE,EAAE,GAAG,EAAE,CAAC;IAEtB,aAAa,CAAC;AACf;AAEA,MAAM,mDAAmD;IACxD,YAAY,eAAe,EAAE,GAAG,CAAE;QACjC,KAAK;QACL,IAAI,CAAC,eAAe,GAAG;QACvB,IAAI,CAAC,GAAG,GAAG;IACZ;IAEA,YAAY,cAAc,EAAE,cAAc,EAAE,GAAG,EAAE;QAChD,OAAO,CAAA;YACN,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG;QACvC,CAAA,EAAE,IAAI,CAAC,IAAI;IACZ;IAEA,aAAa;QACZ,OAAO;IACR;AACD;AAGA,MAAM,2CAA2C;IAChD,YAAY,IAAI,EAAE,aAAa,CAAE;QAChC,KAAK;QACL,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,aAAa,GAAG;IACtB;IAEA,YAAY,cAAc,EAAE,cAAc,EAAE,GAAG,EAAE;QAChD,OAAO,CAAA;YACN,IAAI,CAAC,aAAa,CAAC,gBAAgB;QACpC,CAAA,EAAE,IAAI,CAAC,IAAI;IACZ;IAEA,aAAa;QACZ,OAAO,IAAI,CAAC,IAAI;IACjB;AACD;AAGA,MAAM,6CAA6C;IAClD,YAAY,cAAc,EAAE,cAAc,EAAE,GAAG,EAAE;QAChD,OAAO;YACN,eAAe;QAChB;IACD;IAEA,aAAa;QACZ,OAAO;IACR;AACD;AAEA,MAAM,yCAAyC;IAC9C,YAAY,OAAO,CAAE;QACpB,KAAK;QACL,IAAI,CAAC,OAAO,GAAG;IAChB;IAEA,YAAY,cAAc,EAAE,cAAc,EAAE,GAAG,EAAE;QAChD,OAAO,CAAA;YACN,WAAW;gBACV,eAAe;YAChB,GAAG,IAAI,CAAC,OAAO;QAChB,CAAA,EAAE,IAAI,CAAC,IAAI;IACZ;IAEA,aAAa;QACZ,OAAO;IACR;AACD;AAEA,MAAM,gDAAgD;IACrD,YAAY,GAAG,CAAE;QAChB,KAAK;QACL,IAAI,CAAC,GAAG,GAAG;IACZ;IAEA,YAAY,cAAc,EAAE,cAAc,EAAE,GAAG,EAAE;QAChD,OAAO,CAAA;YACN,IAAI,CAAC,GAAG,CAAC,uBAAuB,CAAC,CAAA;gBAChC,eAAe,IAAI,CAAC,GAAG;YACxB,CAAA,EAAE,IAAI,CAAC,IAAI;QACZ,CAAA,EAAE,IAAI,CAAC,IAAI;IACZ;IAEA,aAAa;QACZ,OAAO;IACR;AACD;AAEA,MAAM,4CAA4C;IACjD,YAAY,OAAO,CAAE;QACpB,KAAK;QACL,IAAI,CAAC,OAAO,GAAG;IAChB;IAEA,YAAY,cAAc,EAAE,cAAc,EAAE,GAAG,EAAE;QAChD,OAAO,CAAA;QACN,6CAA6C;QAC9C,CAAA,EAAE,IAAI,CAAC,IAAI;IACZ;IAEA,aAAa;QACZ,OAAO;IACR;AACD;AAGA,MAAM,yCAAyC;IAC9C,YAAY,GAAG,CAAE;QAChB,KAAK;QACL,IAAI,CAAC,GAAG,GAAG;IACZ;IAEA,YAAY,cAAc,EAAE,cAAc,EAAE,GAAG,EAAE;QAChD,OAAO,CAAA;YACN,IAAI,CAAC,GAAG,CAAC,iBAAiB,GAAG,SAAS,CAAC,EAAE,CAAC;gBACzC,IAAI,MAAM,CAAA,GAAA,wBAAiB,AAAD,EAAE;oBAAC,KAAI;oBAAG,KAAI;gBAAC;gBACzC,eAAe;YAChB;QACD,CAAA,EAAE,IAAI,CAAC,IAAI;IACZ;IAEA,aAAa;QACZ,OAAO;IACR;AACD;AAEA,MAAM,wCAAwC;IAC7C,YAAY,EAAE,CAAE;QACf,KAAK;QACL,IAAI,CAAC,EAAE,GAAG;QACV,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,YAAY,GAAG,EAAE;IACvB;IAEA,YAAY,cAAc,EAAE,cAAc,EAAE,GAAG,EAAE;QAChD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;QACvB,OAAO,CAAA;YACN,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;gBACpB,IAAI,CAAC,SAAS,GAAG;gBACjB,CAAA,GAAA,gCAAe,AAAD,EAAE,IAAI,CAAC,EAAE,EAAE,CAAA,SAAS,QAAQ;oBACzC,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAC7C,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;gBAEvB,CAAA,EAAE,IAAI,CAAC,IAAI;YACZ;QACD,CAAA,EAAE,IAAI,CAAC,IAAI;IACZ;IAEA,aAAa;QACZ,OAAO;IACR;AACD;AAEA,MAAM,qDAAqD;IAC1D,YAAY,GAAG,CAAE;QAChB,KAAK;QACL,IAAI,CAAC,GAAG,GAAG;IACZ;IAEA,YAAY,cAAc,EAAE,cAAc,EAAE,GAAG,EAAE;QAChD,OAAO,CAAA;YACN,IAAI,CAAC,GAAG,CAAC,yBAAyB,GAAG;gBACpC;YACD;QACD,CAAA,EAAE,IAAI,CAAC,IAAI;IACZ;IAEA,aAAa;QACZ,OAAO;IACR;AACD;;;AC1MA;;;;;;;;;;;;;;;AAeA;;AA0HA,oDAAS;AAAT,qDAAyB;AAxHzB;AACA;AAGA,IAAI,OAAO;AACX,IAAI,UAAU;AAEd,MAAM,iBAAiB,CAAC;AACxB,MAAM,wBAAwB,CAAC;AAE/B,kDAAkD;AAGlD,SAAS,yBAAyB,EAAE,EAAE,SAAS,GAE/C;AAEA,SAAS,cAAc,UAAU;IAChC,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IACZ,OAAO;IACP,IAAI,SACH;AAEF;AAEA,SAAS,cAAc,GAAG;IACzB,QAAQ,GAAG,CAAC,uBAAuB;IACnC,OAAO;AACR;AAEA,SAAS,eAAe,EAAE;IACzB,IAAI,CAAC,MAAM;QACV,UAAU;QACV,UAAU,iBAAiB,GAAG,IAAI,CAAE,eAAe;IACpD,OACC;AAEF;AAEA,SAAS,SAAS,CAAC,EAAE,IAAI,EAAE,IAAI;IAC9B,CAAC,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;AACrB;AAEA,SAAS,gBAAgB,EAAE,EAAE,CAAC;IAC7B,IAAI,cAAc,CAAC,GAAG,EACrB,cAAc,CAAC,GAAG,CAAC,IAAI,CAAC;SAExB,wBAAwB,IAAI;AAE9B;AAEA,SAAS,wBAAwB,EAAE,EAAE,CAAC;IACrC,cAAc,CAAC,GAAG,GAAG;QAAE;KAAG;IAC1B,KAAK,IAAI,SAAS,KAAK,MAAM,CAAE;QAC9B,IAAI,QAAQ,KAAK,CAAC,EAAE;QACpB,IAAI,MAAM,MAAM,EAAE,EAAE;YACnB,qBAAqB,CAAC,GAAG,GAAG;YAC5B,MAAM,aAAa,GAAG,CAAC;gBACtB,qBAAqB,IAAI;YAC1B;QACD;IACD;AACD;AAEA,SAAS,OAAO,GAAG,EAAE,IAAI;IACxB,IAAI,UAAU,IAAI,IAAI,CAAC,EAAE,GAAG;IAC5B,IAAI,KAAK,IAAI,IAAI,CAAC,EAAE,GAAG;IACvB,IAAI,MAAM,IAAI,IAAI,CAAC,EAAE,GAAG;IACxB,OAAO,CAAA,GAAA,wBAAiB,AAAD,EAAE;QACxB,QAAQ;QACR,OAAO;QACP,QAAQ;IACT;AACD;AAEA,SAAS,iBAAiB,GAAG;IAC5B,IAAI,SAAS,IAAI,IAAI,CAAC,EAAE;IACxB,yBAAyB;IACzB,SAAS,SAAS;IAClB,OAAO;QACN,KAAK;YACJ,OAAO,OAAO,KAAK;QACpB,KAAK;YACJ,OAAO,OAAO,KAAK;IACrB;IACA,OAAO,CAAA,GAAA,mBAAY,AAAD;AAEnB;AAEA,SAAS,qBAAqB,EAAE,EAAE,GAAG;IACpC,QAAQ,GAAG,CAAC;IACZ,QAAQ,GAAG,CAAC;IACZ,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,CAAC,GAAG,CAAC,MAAM,EAAE,IAC9C,cAAc,CAAC,GAAG,CAAC,EAAE,CAAC,iBAAiB;AAEzC;AAEA,SAAS,eAAe,IAAI;IAC3B,IAAI,KAAK;QACR,IAAI,IAAI,EAAE;QACV,KAAK,IAAI,SAAS,KAAK,MAAM,CAAE;YAC9B,IAAI,QAAQ,KAAK,CAAC,EAAE;YACpB,IAAI,IAAI,CAAC;YACT,SAAS,GAAG,OAAO;YACnB,SAAS,GAAG,OAAO;YACnB,SAAS,GAAG,OAAO;YACnB,SAAS,GAAG,OAAO;YACnB,SAAS,GAAG,OAAO;YACnB,SAAS,GAAG,OAAO;YACnB,SAAS,GAAG,OAAO;YAEnB,EAAE,IAAI,CAAC;QACR;QACA,KAAK;IACN;IACA,eAAe;AAChB;;;ACtIA;;;;;;;;;;;;;;;AAeA;;AAqJA,4CAAS;AAAT,qDAAiB;AAnJjB;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA,MAAM,eAAe,CAAA,GAAA,UAAG,AAAD;IACtB,YAAY,MAAM,CAAE;QACnB,KAAK;QACL,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAA,GAAA,4BAAU,AAAD,EAAE,2BAA2B,EAAE;YAC3C,IAAI,CAAC,KAAK,GAAG,CAAA,GAAA,qCAAqB,AAAD,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC;YACzD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW;QACtC,OACC,IAAI,CAAC,KAAK,GAAG;QAEd,IAAI,UAAU,IACb,MAAM,IAAI,MAAM;IAElB;IAEA,cAAc;QACb,OAAO;IACR;IAEA,WAAW;QACV,IAAI,IAAI,gBAAgB,IAAI,CAAC,WAAW;QACxC,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACR;IAEA,aAAa,GAAG,EAAE;QACjB,KAAK,CAAC,aAAa;QACnB,IAAI,IAAI,CAAC,KAAK,EACb,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI;IAE7B;IAEA,SAAS,QAAQ,EAAE;QAClB,IAAI,IAAI,CAAC,KAAK,IAAI,CAAA,GAAA,qCAAqB,AAAD,EAAE,UAAU,CAAC,IAAI,CAAC,KAAK,EAAE,WAC9D,CAAA,GAAA,qCAAqB,AAAD,EAAE,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE;aACnD;YACN,IAAI,CAAC,KAAK,GAAG,CAAA,GAAA,qCAAqB,AAAD,EAAE,gBAAgB,CAAC;YACpD,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,WAAW;QACtC;QACA,IAAI,CAAC,oBAAoB,CAAC;IAC3B;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,IAAI,CAAC,UAAU;QAEvB,OAAO,OAAO,IAAI,CAAC,WAAW,GAAG;IAClC;IAEA,aAAa;QACZ,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,GAAG,OAAO,EAAE,IAAI,CAAC,4BAA4B,GAAG,EAAE,IAAI,CAAC,iBAAiB,GAAG,CAAC;IAC9G;IAEA,qBAAqB,IAAI,EAAE;QAC1B,IAAI,QAAQ,IAAI,CAAC,eAAe;QAChC,IAAI,OACH,OAAO,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,GAAG,CAAC;aAEtD,OAAO,CAAC,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;IAE9B;IAEA,uBAAuB,IAAI,EAAE;QAC5B,IAAI,IAAI,KAAK,KAAK,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC,EAAE;QACvB,IAAI,EAAE,MAAM,GAAG,GACd,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,EAAE;IAE3B;IAEA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,IAAI,UAAU,WAAW,UAAU;QACnC,KAAK,CAAC,WAAW,YAAY,aAAa;QAC1C,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,IAAI,cAAc,CAAA,GAAA,2CAAwB,AAAD,GACxC,QAAQ,SAAS,CAAC,GAAG,CAAC;aAEtB,QAAQ,SAAS,CAAC,GAAG,CAAC;QAEvB,IAAI,IAAI,CAAC,KAAK,EACb,QAAQ,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW;aACzD;YACN,IAAI,WAAW,AAAC,IAAI,CAAC,WAAW,IAAI,OAAO,IAAI,CAAC,WAAW,IAAI,WAAY,SAAS,IAAI,CAAC,WAAW;YACpG,QAAQ,WAAW,CAAC,SAAS,cAAc,CAAC;QAC7C;IACD;IAEA,UAAU;QACT,OAAO,IAAI,CAAC,WAAW;IACxB;IAEA,oBAAoB;QACnB,OAAO;IACR;IAEA,cAAc,OAAO,EAAE;QACtB,OAAO;YACN,OAAO;YACP,WAAW;YACX,aAAa;YACb,aAAa;YACb,cAAc;YACd,aAAc;YACd,kBAAmB;YACnB,SAAS;YAET,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;QACN;IACD;IAGA,UAAU;QACT,OAAO,KAAK,CAAC,YAAY,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU;IACzC;AACD;AAEA,SAAS,gBAAgB,MAAM;IAC9B,IAAI,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,KACnC,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC;OACtB,EAAE,CAAA,GAAA,YAAI,AAAD,EAAE,KAAK,GAAG,CAAC;IAEtB,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI,OAAO;AACjC;;;ACjKA;;;;;;;;;;;;;;;AAeA;;AAwEA,2DAAS;AAtET;AACA;AAEA,MAAM;IACL,aAAc;QACb,IAAI,CAAC,KAAK,GAAG;YACZ,SAAS,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,CAAC,GAAG,CAAC;YACxB,kBAAkB,IAAI,CAAA,GAAA,gCAAc,AAAD,EAAE,CAAC,GAAG,CAAC;QAC3C;IACD;IAEA,QAAQ,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE;QACnC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,EACvB,OAAO,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,gBAAgB,CAAC,UAAU;QAExD,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,UAAU;IACvD;IAEA,4CAA4C;IAC5C,+CAA+C;IAC/C;;;;;;CAMA,GAEA,gBAAgB,UAAU,EAAE;QAC3B,IAAI,SAAS,CAAC;QAEd,IAAI,WAAW,WAAW,KAAK,CAAC;QAChC,OAAO,QAAQ,GAAG,QAAQ,CAAC,EAAE;QAC7B,IAAI,YAAY,QAAQ,CAAC,EAAE;QAC3B,IAAI,aAAa,QAAQ,CAAC,EAAE;QAE5B,OAAO,QAAQ,GAAG,CAAC;QACnB,IAAI,YAAY,UAAU,KAAK,CAAC;QAChC,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,MAAM,EAAE,IAAK;YAC1C,IAAI,YAAY,SAAS,CAAC,EAAE,CAAC,KAAK,CAAC;YACnC,OAAO,QAAQ,CAAC,SAAS,CAAC,EAAE,CAAC,GAAG,OAAO,SAAS,CAAC,EAAE;QACpD;QAEA,OAAO,SAAS,GAAG,CAAC;QACpB,IAAI,aAAa,WAAW,KAAK,CAAC;QAClC,IAAK,IAAI,IAAI,GAAG,IAAI,WAAW,MAAM,EAAE,IAAK;YAC3C,IAAI,aAAa,UAAU,CAAC,EAAE,CAAC,KAAK,CAAC;YACrC,OAAO,SAAS,CAAC,UAAU,CAAC,EAAE,CAAC,GAAG,OAAO,UAAU,CAAC,EAAE;QACvD;QACA,OAAO;IACR;IAEA,iBAAiB,UAAU,EAAE;QAC5B,IAAI,SAAS,IAAI,CAAC,eAAe,CAAC;QAClC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,QAAQ,EAAE,OAAO,QAAQ,EAAE,OAAO,SAAS;IACvE;IAEA,WAAW,IAAI,EAAE,UAAU,EAAE;QAC5B,IAAI,SAAS,IAAI,CAAC,eAAe,CAAC;QAClC,OAAQ,KAAK,WAAW,MAAM,OAAO,QAAQ;IAC9C;IAEA,uBAAuB,IAAI,EAAE,UAAU,EAAE;QACxC,IAAI,SAAS,IAAI,CAAC,eAAe,CAAC;QAClC,KAAK,SAAS,CAAC,OAAO,QAAQ,EAAE,OAAO,SAAS;IACjD;AACD;AAEA,MAAM,wBAAwB,IAAI;;;ACrFlC;;;;;;;;;;;;;;;AAeA,GAEA,kDAAkD;;;AAk9ClD,2CAAS;AAh9CT;AAKA;AACA;AAGA,MAAM,SAAS;IACd,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI,EAAE;IACrB,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAK;aAC3C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,MAAO,EAAE,KAAK,GAAG;gBAAM;gBAC7D;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBACtD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBACtD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,MAAO,EAAE,KAAK,GAAG;gBAAM;gBAC9D;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAK;aAC5C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,MAAO,EAAE,KAAK,GAAG;gBAAM;gBAC9D;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;gBAC1D;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;gBAC1D;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,AAAC,EAAE,MAAM,GAAG,MAAQ,EAAE,KAAK,GAAG;gBAAM;gBAC/D;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAO,EAAE,MAAM,GAAG;gBAAM;aAC7C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,AAAC,EAAE,MAAM,GAAG,MAAQ,EAAE,KAAK,GAAG;gBAAM;gBAC/D;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,AAAC,EAAE,MAAM,GAAG,MAAQ,EAAE,KAAK,GAAG;gBAAM;gBAChE;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAO,EAAE,MAAM,GAAG;gBAAM;aAC9C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAK;aAC5C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAK;aAC9C;QAAA;KACD;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAC/C;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;KACH;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC7C;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACF;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACF;YAAE,IAAI,CAAA,GAAA,2BAAa,AAAD;YAAG,GAAG;gBACvB;oBAAE,KAAI,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBACpC;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,2BAAa,AAAD;YAAG,GAAG;gBACvB;oBAAE,KAAI,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACtC;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;KACD;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACjD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACH;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KAED;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACF;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC7C;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACF;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACF;YAAE,IAAI,CAAA,GAAA,2BAAa,AAAD;YAAG,GAAG;gBACvB;oBAAE,KAAI,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACtC;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAK,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBACvC;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,KAAK;gBAAI;gBAC3C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACtC;QAAA;QACF;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACtC;QAAA;KACD;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAC/C;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACH;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,IAAI,GAAG;gBAAI;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,IAAI;gBAAE;gBAC3C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,IAAI;gBAAE;aAClC;QAAA;QACH;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,IAAI;gBAAE;gBAC3C;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,IAAI,GAAG,KAAK,EAAE,KAAK;gBAAE;gBACjD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,IAAI,GAAG;gBAAI;aACxC;QAAA;KACH;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aACzC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAO,EAAE,IAAI,GAAG;gBAAK;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,AAAC,EAAE,IAAI,GAAG,KAAM;gBAAI;gBAC9C;oBAAE,GAAE,CAAA,IAAM,AAAC,EAAE,IAAI,GAAG,KAAM;oBAAK,GAAE,CAAA,IAAM,EAAE,IAAI;gBAAE;gBAC/C;oBAAE,GAAE,CAAA,IAAO,EAAE,IAAI,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,IAAI;gBAAE;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aACzC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI,GAAG,EAAE,KAAK,GAAG;oBAAK,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aACzD;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,KAAK,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,KAAK,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,MAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aAC3C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,MAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAI,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAC/C;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;KACH;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,IAAI;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAC/C;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;KACH;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC9C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QAED;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAC/C;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACH;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,IAAI;gBAAE;aACnC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACtC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBAC7E;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBACrD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBACrD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBAC3D;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBAC3D;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAK;gBAC3D;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAK;gBAC3D;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBAC5D;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aAC3C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBAC5D;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBAC5E;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aAC1C;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAK,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aAC5C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAK,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aAC/C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAK,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBACjE;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG,KAAM,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAC9D;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAK,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aAC7C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG,KAAM,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAC9D;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBAC5D;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aAC3C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,KAAK,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,KAAK,EAAE,KAAK;gBAAE;gBACrD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aAC3C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtD;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtD;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,AAAC,EAAE,KAAK,GAAG,MAAQ,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aAChE;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,AAAC,EAAE,KAAK,GAAG,MAAQ,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aAChE;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,AAAC,EAAE,KAAK,GAAG,KAAO,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAK;aACnE;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,AAAC,EAAE,KAAK,GAAG,KAAO,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAK;aACnE;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,AAAC,EAAE,KAAK,GAAG,MAAQ,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aAChE;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,AAAC,EAAE,KAAK,GAAG,MAAQ,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aAChE;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;KAED;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,IAAI;gBAAE;aAClC;QAAA;KAED;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;KAED;IAGD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjD;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjD;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAK,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC9C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAK,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC9C;QAAA;KACD;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAChC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAC3C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,MAAM,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAK;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,MAAM,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,MAAM,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAK;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,MAAM,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACtC;QAAA;QACF;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACF;YAAE,IAAI,CAAA,GAAA,2BAAa,AAAD;YAAG,GAAG;gBACvB;oBAAE,KAAI,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBACjC;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,2BAAa,AAAD;YAAG,GAAG;gBACvB;oBAAE,KAAI,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACtC;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACvC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACzD;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACzD;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACtC;QAAA;QACF;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACF;YAAE,IAAI,CAAA,GAAA,2BAAa,AAAD;YAAG,GAAG;gBACvB;oBAAE,KAAI,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBACjC;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,2BAAa,AAAD;YAAG,GAAG;gBACvB;oBAAE,KAAI,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACtC;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aAC9C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAK;aAClD;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAK;aACpD;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAC/C;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK;gBAAG;aAClD;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI,GAAG;oBAAK,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aAC3C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBAClB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBAClB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;KACD;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAChC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAC3C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,MAAM,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAK;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,MAAM,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACtC;QAAA;KACD;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBAClB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBAClB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,IAAK,EAAE,KAAK,GAAG;gBAAM;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAK,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtD;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG,EAAE,KAAK;gBAAE;aAC1D;QAAA;KACD;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAChC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAC3C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,MAAM,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAK;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,MAAM,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;KACD;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAG;gBACjB;oBAAC,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBAC1E;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAClD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAK;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAK;gBACxD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBACzD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI,GAAI,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,KAAM,EAAE,KAAK,GAAG;gBAAK;gBACzE;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACvC;QAAA;KACD;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;KACD;IAED,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACnD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;gBAChD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG,IAAI,EAAE,KAAK;gBAAE;gBACpD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aAC9C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aAC9C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aAC9C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aAC9C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAG;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aAClC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACnC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACxC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAI;aAC3C;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAI;aAC3C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAI,EAAE,KAAK,GAAG;gBAAK;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI,GAAG,MAAO,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAK;gBACpE;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAI;aAClD;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAI;aAC3C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAI,EAAE,KAAK,GAAG;gBAAK;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI,GAAG,MAAO,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAK;gBACpE;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAI;aAClD;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAI;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAI;aAC3C;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aACzC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM,GAAG;gBAAG;aAC1C;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAO,EAAE,MAAM,GAAG;gBAAK;aAC5C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,AAAC,EAAE,MAAM,GAAG,KAAM,EAAE,KAAK;gBAAE;gBACtD;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAC3C;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;aACjC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG;gBAAE;gBAC3C;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,AAAC,EAAE,MAAM,GAAG,KAAM,EAAE,KAAK;gBAAE;gBACvD;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAO,EAAE,MAAM,GAAG;gBAAK;aAC7C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,AAAC,EAAE,MAAM,GAAG,KAAO,EAAE,KAAK,GAAG;gBAAK;gBAC9D;oBAAE,GAAE,CAAA,IAAM,AAAC,EAAE,GAAG,GAAG,MAAQ,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC7D;oBAAE,GAAE,CAAA,IAAO,EAAE,GAAG,GAAG;oBAAO,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aAC5C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,uBAAS,AAAD;YAAG,GAAG;gBACnB;oBAAE,GAAE,CAAA,IAAM,AAAC,EAAE,GAAG,GAAG,MAAQ,EAAE,KAAK,GAAG;oBAAM,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;gBAC7D;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,AAAC,EAAE,MAAM,GAAG,MAAQ,EAAE,KAAK,GAAG;gBAAK;gBAC7D;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAO,EAAE,MAAM,GAAG;gBAAM;aAC5C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAI;aAC3C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ,GAAG;gBAAI;aAC3C;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,QAAQ;gBAAE;aACtC;QAAA;KACD;IACD,KAAM,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QACnB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACtC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,GAAG;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACpC;QAAA;KACD;IACD,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,IAAI;QAClB;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACvC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,IAAI;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACrC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,GAAG,GAAG;gBAAI;aACxC;QAAA;QACD;YAAE,IAAI,CAAA,GAAA,qBAAO,AAAD;YAAG,GAAE;gBAChB;oBAAE,GAAE,CAAA,IAAM,EAAE,KAAK;oBAAG,GAAE,CAAA,IAAM,EAAE,MAAM;gBAAE;aACtC;QAAA;KAED;AAEF;AAEA,MAAM,iBAAiB;IACtB,qBAAqB;IACrB,OAAO;IACP,OAAO;IACP,QAAQ;IACR,UAAU;IACV,OAAO;IACP,iBAAiB;IACjB,SAAS;IACT,YAAY;IACZ,WAAW;IACX,YAAY;IAEZ,gBAAgB;IAEhB,6CAA6C;IAC7C,gCAAgC;IAChC,YAAY;IACZ,QAAQ;AAET;AAEA,MAAM,mBAAmB;IACxB,YAAY;IACZ,gBAAgB;IAChB,iBAAiB;IACjB,QAAQ;AACT;AAEA,IAAI,2BAA2B;AAC/B,IAAI,gBAAgB,CAAC;AAErB,MAAM,cAAc,CAAA,GAAA,YAAI,AAAD;IACtB,YAAY,QAAQ,EAAE,QAAQ,CAAE;QAC/B,KAAK,CAAC,UAAU;QAChB,IAAI,CAAC,0BAA0B;YAC9B,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC;YACvD,2BAA2B;QAC5B;IACD;IAEA,mBAAmB;QAClB,OAAO;IACR;IAEA,qBAAqB;QACpB,OAAO;IACR;IAEA,iBAAiB,QAAQ,EAAE,QAAQ,EAAE;QACpC,OAAO,IAAI,MAAM,UAAU;IAC5B;IAEA,OAAO;QACN,IAAI,IAAI,IAAI,MAAM,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM;QAC7E,EAAE,SAAS,CAAC,IAAI,CAAC,MAAM;QACvB,OAAO;IACR;IAEA,cAAc;QACb,OAAO;IACR;IAEA,iBAAiB,MAAM,EAAE,QAAQ,EAAE;QAClC,IAAI,CAAC,SAAS,GAAG,EAChB,OAAO,GAAG,GAAG,OAAO,MAAM,GAAG;QAE9B,IAAI,CAAC,SAAS,KAAK,EAClB,OAAO,KAAK,GAAG,OAAO,MAAM,GAAG;QAEhC,OAAO,QAAQ,8CAA8C;IAC9D;IAEA,YAAY;QACX,OAAO;IACR;AACD;;;ACj+CA;;;;;;;;;;;;;;;AAeA;;AAqHA,4CAAS;AAAT,6CAAiB;AAAjB,8CACG;AADH,+CACa;AADb,4CAEG;AAFH,6CAEW;AAFX,kDAGG;AAHH,mDAGiB;AAtHjB;AAEA,MAAM,UAAU;AAChB,MAAM,YAAY;AAClB,MAAM,UAAU;AAChB,MAAM,gBAAgB;AAGtB,MAAM;IACL,YAAY,CAAC,EAAE,CAAC,CAAE;QACjB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,CAAC,GAAG;QACT,IAAI,CAAC,CAAC,GAAG;IACV;IAEA,UAAU,MAAM,EAAE;QACjB,qBAAqB;QACrB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACpB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;IACrB;IAEA,KAAK,GAAG,EAAE;QACT,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC1B;AACD;AAEA,MAAM;IACL,YAAY,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAE;QAC/C,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;IACb;IAEA,UAAU,MAAM,EAAE;QACjB,qBAAqB;QACrB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;IACxB;IAEA,KAAK,GAAG,EAAE;QACT,IAAI,aAAa,CAAC,IAAI,CAAC,IAAI,EACrB,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI;IAChB;AAED;AAEA,MAAM;IACL,YAAY,CAAC,EAAE,CAAC,CAAE;QACjB,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,CAAC,GAAG;QACT,IAAI,CAAC,CAAC,GAAG;IACV;IAEA,UAAU,MAAM,EAAE;QACjB,qBAAqB;QACrB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACpB,IAAI,CAAC,CAAC,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;IACrB;IAEA,KAAK,GAAG,EAAE;QACT,IAAI,MAAM,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,CAAC;IAC1B;AACD;AAEA,MAAM;IACL,YAAY,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,MAAM,CAAE;QAC/D,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,GAAG,GAAG;IACZ;IAEA,UAAU,MAAM,EAAE;QACjB,qBAAqB;QACrB,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,EAAE,CAAC,GAAG;QAC7B,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACtB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACvB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;QACtB,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,EAAE,CAAC,CAAC;IACvB;IAEA,KAAK,GAAG,EAAE;QACT,IAAI,CAAA,GAAA,gBAAM,AAAD,EAAE,IAAI,CAAC,GAAG,EACd,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,IAAI,EACT,IAAI,CAAC,GAAG,EACR,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,QAAQ;IAEvC;AACD;;;AClIA;;;;;;;;;;;;;;;AAeA,GAEA,oBAAoB;;;AAoDpB,4CAAS;AAnDT,MAAM;IACL,YAAY,GAAG,EACZ,GAAG,EACH,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,IAAI,EACJ,GAAG,EACH,GAAG,CAAE;QACP,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,GAAG,GAAG;QACX,IAAI,CAAC,GAAG,GAAG;IACZ;IACA,6EAA6E;IAC7E,iEAAiE;IACjE,EAAE;IACF,uCAAuC;IACvC,iCAAiC;IACjC,gCAAgC;IAChC,gCAAgC;IAChC,KAAK,GAAG,EAAE,MAAM,EAAE;QACjB,IAAI,CAAC,QAAQ,SAAS;QACtB,oDAAoD;QACpD,qDAAqD;QACrD,qDAAqD;QACrD,4CAA4C;QAC5C,uDAAuD;QACvD,sDAAsD;QACtD,IAAI,OAAO,KAAK,IAAI,CAAC,KAAK,GAAG,CAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAG,KAAK,KAAK,GAAG,CAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,EAAG;QAC1F,IAAI,MAAM,MAAM;QAChB,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,GAAG;QAC7B,IAAK,IAAI,IAAI,KAAK,IAAI,QAAQ,KAAK,IAAK;YACvC,mDAAmD;YACnD,IAAI,IAAU,KAAK,GAAG,CAAE,IAAI,GAAI,KAAsB,IAAI,CAAC,GAAG,GAC1D,IAAI,KAAK,GAAG,CAAE,IAAI,GAAI,KAAc,IAAQ,IAAI,CAAC,IAAI,GACrD,IAAc,CAAA,IAAI,CAAA,IAAS,KAAK,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,GAC1B,KAAK,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG;YACxD,IAAI,IAAU,KAAK,GAAG,CAAE,IAAI,GAAI,KAAsB,IAAI,CAAC,GAAG,GAC1D,IAAI,KAAK,GAAG,CAAE,IAAI,GAAI,KAAc,IAAQ,IAAI,CAAC,IAAI,GACrD,IAAc,CAAA,IAAI,CAAA,IAAS,KAAK,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,IAAI,GAC1B,KAAK,GAAG,CAAC,GAAG,KAAK,IAAI,CAAC,GAAG;YACxD,IAAI,MAAM,CAAC,GAAG;QACf;IACD;AACD;;;ACnEA;;;;;;;;;;;;;;;AAeA;;AAoBA,2CAAS;AAlBT,MAAM;IACL,YAAY,SAAS,EAAE,gBAAgB,CAAE;QACxC,yCAAyC;QACzC,kDAAkD;QAClD,0CAA0C;QAC1C,IAAI,CAAC,SAAS,GAAG;QACjB,IAAI,CAAC,gBAAgB,GAAG;IACzB;IAEA,WAAW;QACV,OAAO,IAAI,CAAC,SAAS;IACtB;IAEA,kBAAkB;QACjB,OAAO,IAAI,CAAC,gBAAgB;IAC7B;AACD;;;ACjCA;;;;;;;;;;;;;;;AAeA,GAEA,kDAAkD;;;AAqVlD,0CAAS;AAnVT;AAEA;AAMA,gCAAgC;AAChC,wBAAwB;AACxB,EAAE;AACF,2DAA2D;AAC3D,sCAAsC;AACtC,EAAE;AACF,uDAAuD;AACvD,+BAA+B;AAC/B,EAAE;AACF,2DAA2D;AAC3D,4CAA4C;AAC5C,yCAAyC;AACzC,qBAAqB;AACrB,EAAE;AACF,wDAAwD;AACxD,yDAAyD;AACzD,4DAA4D;AAC5D,wDAAwD;AACxD,6DAA6D;AAG7D,MAAM,aAAa;AAEnB,MAAM;IACL,YAAY,QAAQ,EAAE,QAAQ,CAAE;QAC/B,IAAI,CAAC,SAAS,CAAC,UAAU;QACzB,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,YAAY,GAAG;QACpB,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,WAAW,GAAG;IACpB;IAEA,UAAU,UAAU,EAAE,QAAQ,EAAE;QAC/B,uDAAuD;QACvD,sDAAsD;QACtD,gCAAgC;QAChC,0DAA0D;QAC1D,4DAA4D;QAC5D,qDAAqD;QACrD,uDAAuD;QACvD,uDAAuD;QACvD,sDAAsD;QACtD,yCAAyC;QAEzC,IAAI,WAAW,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB;QACtD,IAAI,CAAC,cAAc,CAAC,UAAU;QAC9B,IAAI,CAAC,QAAQ,GAAG;QAEhB,IAAI,SAAS,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB;QAClD,IAAI,CAAC,cAAc,CAAC,QAAQ;QAC5B,IAAI,CAAC,gBAAgB,CAAC,QAAQ;QAC9B,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,IAAI,CAAC,KAAK,EACb,IAAI,CAAC,yBAAyB;QAE/B,IAAI,CAAC,WAAW,GAAG;IACpB;IAEA,qBAAqB;QACpB,OAAO,CAAC;IACT;IAEA,mBAAmB;QAClB,OAAO,CAAC;IACT;IAEA,WAAW,QAAQ,EAAE;QACpB,IAAI,IAAI,CAAC;QACT,IAAK,IAAI,KAAK,SACb,CAAC,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE;QAEnB,OAAO;IACR;IAEA,eAAe,MAAM,EAAE,QAAQ,EAAE;QAChC,IAAK,IAAI,KAAK,SACb,IAAI,MAAM,CAAC,EAAE,EACZ,MAAM,CAAC,EAAE,GAAG,QAAQ,CAAC,EAAE;IAG1B;IAEA;;;;;EAKC,GACD,iBAAiB,MAAM,EAAE,QAAQ,EAAE;IAClC,yBAAyB;IAC1B;IAEA,YACE,WAAW,EACX,aAAa,EACb,WAAW,EACX,kBAAkB,EAClB,aAAa,EACb,cAAc,EACd,eAAe,EACf,WAAW,EACX,OAAO,EAAE;QAEV,sDAAsD;QACtD,gCAAgC;QAEhC,SAAS;QACT,IAAI,kBAAkB,cAAc;QACpC,IAAI,aAAa,gBAAgB;QACjC,IAAI,uBAAuB,cAAc;QACzC,IAAI,eAAe,AAAC,aAAa,IAAM,UAAU;QAEjD,QAAQ;QACR,IAAI,iBAAiB,gBAAgB;QACrC,IAAI,iBAAiB,AAAC,CAAA,cAAc,cAAa,IAAK;QACtD,IAAI,gBAAgB,iBAAkB,UAAU;QAChD,IAAI,kBAAkB,AAAC,CAAA,cAAc,eAAc,IAAK;QACxD,IAAI,sBAAsB,gBAAgB,iBAAiB;QAE3D,IAAI,SAAS,SAAS,aAAa,CAAC;QACpC,OAAO,YAAY,CAAC,UAAU,CAAC,EAAE,gBAAgB,GAAG,CAAC;QACrD,OAAO,YAAY,CAAC,SAAS,CAAC,EAAE,eAAe,GAAG,CAAC;QACnD,IAAI,cAAc;QAClB,eAAe,CAAC,IAAI,EAAE,aAAa,GAAG,CAAC;QACvC,eAAe,CAAC,KAAK,EAAE,cAAc,GAAG,CAAC;QAEzC,YAAY,WAAW,CAAC;QACxB,IAAI,mBAAmB;QACvB,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,GAAG,CAAC;QACrD,oBAAoB,CAAC,OAAO,EAAE,YAAY,GAAG,CAAC;QAE9C,IAAI,YAAY;YACf,IAAI,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;YACpC,IAAI,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;YACpC,IAAI,KAAK,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK;YACpC,oBAAoB,CAAC,kBAAkB,EAAE,GAAG,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC;QAC5D;QAEA,OAAO,YAAY,CAAC,SAAS;QAC7B,YAAY,YAAY,CAAC,SAAS;QAClC,OAAO;IACR;IAEA,cAAc;QACb,OAAO;IACR;IAEA,cAAc,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;QAC/B,IAAI,gBAAgB,IAAI,CAAC,QAAQ,CAAC,IAAI;QACtC,2DAA2D;QAC3D,IAAI,iBAAiB,GACpB,OAAO;QAER,6BAA6B;QAE7B,IAAI,eAAe;QACnB,IAAI,cAAc,MAAO,CAAE;QAC3B,IAAI,cAAc,cAAc;QAChC,IAAI,cAAc,GACjB,eAAe,QAAQ,cAAc;aAErC,eAAe,QAAQ,IAAI,MAAM;QAGlC,iDAAiD;QACjD,4CAA4C;QAC5C,IAAI,IAAI,CAAC,YAAY,IAAI,cACxB,OAAO,IAAI,CAAC,YAAY;aAExB,kCAAkC;QAClC,OAAO,eAAe,IAAI,6BAA6B;IAEzD;IAEA,cAAc,KAAK,EACd,iBAAiB,EACjB,OAAO,EACP,aAAa,EACb,eAAe,EACf,gBAAgB,EAChB,WAAW,EAAE;QAEjB,IAAI,CAAC,GAAG,GAAG,IAAI,CAAA,GAAA,UAAG,AAAD,EAAE,OAAO,mBAAmB;QAE7C,IAAI,CAAC,WAAW,GAAG,SAAS,aAAa,CAAC;QAE1C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAC7B,IAAI,CAAC,WAAW,EAChB,eACA,OAAiB,eAAe,GAChC,oBAAoB,OAAQ,sBAAsB,GAClD,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,OAAU,iBAAiB,GAC/C,iBACA,kBACA,aACA;IACF;IAEA,UAAU,CAAC,EAAE;QACZ,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,0BAA0B;QACrD,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,yBAAyB;QACpD,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,qBAAqB;QAClD,IAAI,SAAS,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,eAAe;QAChD,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG,EAAE,4BAA4B;QACvD,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,0BAA0B;QACzD,IAAI,WAAW,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,kBAAkB;QAEvD,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI;QAC3B,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK;QAC7B,IAAI,WAAW,IAAI,CAAC,MAAM,CAAC,QAAQ;QACnC,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG;QAEzB,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK;QAE7B,IAAI,OAAO,KAAK,UACf,OAAO,KAAK;aAEZ,OAAO,EAAE,IAAI,CAAC,MAAM;IAEtB;IAEA,+DAA+D;IAC/D,8BAA8B;IAC9B,UAAU,MAAM,EAAE;QACjB,IAAI,IAAI,CAAC,MAAM,IAAI,QAClB;QAED,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,MAAM,GAAG;QACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,OAAO;QACrC,IAAI,CAAC,IAAI,CAAC,KAAK,EACd,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,SAAS,EAAE,CAAC,IAAI;QAEnC,IAAI,CAAC,yBAAyB;IAC/B;IAEA,4BAA4B;QAC3B,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,MAAM,CAAC,YAAY;QACpE,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK;QACrC,IAAI,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,GAAG;IACvC;IAEA,kBAAkB;QACjB,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,wBAAwB;QAC5D,IAAI,kBAAkB,IAAI,CAAC,QAAQ,CAAC,YAAY;QAChD,IAAI,mBAAmB,IAAI,CAAC,QAAQ,CAAC,aAAa;QAClD,IAAI,gBAAgB,QAAQ,QAAQ,IAAI,CAAC,MAAM,CAAC,OAAO;QACvD,IAAI,cAAc,QAAQ,IAAI,CAAC,MAAM,CAAC,QAAQ;QAC9C,IAAI,gBAAgB,IAAI,CAAC,MAAM,CAAC,aAAa;QAC7C,IAAI,oBAAoB,IAAI,CAAC,MAAM,CAAC,iBAAiB;QACrD,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG;QACzB,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG;QACzB,IAAI,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI;QAC3B,IAAI,SAAS,IAAI,CAAC,MAAM,CAAC,MAAM;QAC/B,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,GAAG;QACzB,IAAI,QAAQ,IAAI,CAAC,MAAM,CAAC,KAAK;QAC7B,IAAI,WAAW,IAAI,CAAC,MAAM,CAAC,QAAQ;QAEnC,IAAI,UAAU,IAAI,CAAC,aAAa,CAAC,KAAK,MAAM;QAE5C,IAAI,sBAAsB;QAE1B,IAAI,IAAI,CAAC,WAAW,IAAI,MACvB,sBAAsB;QAGvB,IAAI,WAAW,IAAI,CAAC,YAAY,EAAE;YACjC,sBAAsB;YACtB,IAAI,CAAC,YAAY,GAAG;QACrB;QAEA,IAAI,SAAS,IAAI,CAAC,gBAAgB,EAAE;YACnC,sBAAsB;YACtB,IAAI,CAAC,gBAAgB,GAAG;QACzB;QAEA,IAAI,qBAAqB;YACxB,IAAI,CAAC,WAAW,GAAG;YACnB,IAAI,CAAC,aAAa,CAAC,OACZ,mBACA,SACA,eACA,iBACA,kBACA;QAER;QAEA,IAAI,IAAI,CAAC,WAAW,EAAE;YACrB,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;YACjC,IAAI,SAAS,GAAG,gBAAgB;YAChC,IAAI,SAAS;YACb,IAAI,SAAS,CAAC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,MAAM;YACzD,IAAI,eAAe,IAAI,CAAC,KAAK,CAAC,eAAe;YAE7C,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,MAAM,EAAE,IAAK;gBAC7C,IAAI,WAAW,YAAY,CAAC,EAAE;gBAC9B,IAAI,QAAQ,IAAI,CAAC,QAAQ,CAAC,SAAS,EAAE;gBACrC,IAAI,SAAS,EAAE;gBACf,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,CAAC,CAAC,MAAM,EAAE,IAAK;oBAC3C,IAAI,IAAI,SAAS,CAAC,CAAC,EAAE;oBACrB,MAAM,CAAC,EAAE,GAAG,CAAC;oBACb,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxD,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,CAAC;oBACxD,IAAI,EAAE,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,EAAE,GAAG;gBAChD;gBACA,MAAM,SAAS,CAAC;gBAChB,MAAM,IAAI,CAAC;YACZ;YACA,IAAI,MAAM;YACV,IAAI,CAAC,WAAW,GAAG;QACpB;QACA,OAAO,IAAI,CAAC,WAAW;IACxB;IAEA,SAAS,KAAK,EAAE;QACf,OAAO;YACN,KAAK,GAAA,qBAAO;gBACX,OAAO,IAAI,CAAA,GAAA,oBAAM,AAAD;YACjB,KAAK,GAAA,uBAAS;gBACb,OAAO,IAAI,CAAA,GAAA,sBAAQ,AAAD;YACnB,KAAK,GAAA,2BAAa;gBACjB,OAAO,IAAI,CAAA,GAAA,0BAAY,AAAD;YACvB,KAAK,GAAA,qBAAO;gBACX,OAAO,IAAI,CAAA,GAAA,oBAAM,AAAD;QAClB;IACD;AACD;;;ACpWA;;;;;;;;;;;;;;;AAeA,GAEA;;CAEC;;AAiBD,yCAAS;AAhBT,MAAM;IACL,YAAY,gBAAgB,EAAE,oBAAoB,EAAE,YAAY,CAAE;QACjE,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,oBAAoB,GAAG;QAC5B,IAAI,CAAC,YAAY,GAAG;IACrB;IAEA,MAAM,GAAG,EAAE;QACV,OAAO,IAAI,CAAC,gBAAgB,GAAG,MAAO,IAAI,CAAC,YAAY,GAAG;IAC3D;IAEA,MAAM,GAAG,EAAE;QACV,OAAO,IAAI,CAAC,gBAAgB,GAAI,CAAA,AAAC,CAAC,MAAO,IAAI,CAAC,oBAAoB,AAAD,IAAM,IAAI,CAAC,YAAY,GAAG;IAC5F;AACD;;;AClCA;;;;;;;;;;;;;;;AAeA;;AA2GA,oDAAS;AAzGT;AACA;AACA;AAEA,MAAM,SAAS;IACd,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK,EAAE;IACtB,KAAK,IAAI,CAAA,GAAA,cAAK,AAAD,EAAE,KAAK;QACnB,IAAI,CAAA,GAAA,oBAAM,AAAD,EAAG,QAAQ;QACpB,IAAI,CAAA,GAAA,sBAAQ,AAAD,EAAE,QAAQ,wBACjB,eAAe,UACf,OAAO;QACX,IAAI,CAAA,GAAA,sBAAQ,AAAD,EAAE,eAAe,UACxB,SAAS,wBACT,SAAS;QACb,IAAI,CAAA,GAAA,sBAAQ,AAAD,EAAE,SAAS,wBAClB,eAAe,aACf,OAAO;QACX,IAAI,CAAA,GAAA,sBAAQ,AAAD,EAAE,eAAe,aACxB,QAAQ,2BACR,QAAQ;QACZ,IAAI,CAAA,GAAA,sBAAQ,AAAD,EAAE,QAAQ,2BACjB,eAAe,YACf,OAAO;QACX,IAAI,CAAA,GAAA,sBAAQ,AAAD,EAAE,eAAe,YACxB,SAAS,2BACT,SAAS;QACb,IAAI,CAAA,GAAA,oBAAM,AAAD,EAAE,SAAS;QACpB,IAAI,CAAA,GAAA,oBAAM,AAAD,EAAE,SAAS;QACpB,IAAI,CAAA,GAAA,sBAAQ,AAAD,EAAE,SAAS,2BAClB,uBAAuB,YACvB,eAAe;KACnB;AACF;AAGA,MAAM,iBAAiB;IACtB,YAAY;IACZ,OAAO;IACP,OAAO;IACP,QAAQ;IACR,UAAU;IACV,OAAO;IACP,iBAAiB;IACjB,SAAS;IACT,YAAY;IACZ,WAAW;IACX,YAAY;IACZ,cAAc,MAAM;IACpB,WAAW;IACX,iBAAiB;AAClB;AAEA,MAAM,mBAAmB;IACxB,YAAY;IACZ,gBAAgB;IAChB,iBAAiB;IACjB,QAAQ;AACT;AAEA,IAAI,2BAA2B;AAC/B,IAAI,gBAAgB,CAAC;AAErB,MAAM,uBAAuB,CAAA,GAAA,YAAI,AAAD;IAC/B,YAAY,QAAQ,EAAE,QAAQ,CAAE;QAC/B,KAAK,CAAC,UAAU;QAChB,IAAI,CAAC,0BAA0B;YAC9B,gBAAgB,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC;YACvD,2BAA2B;QAC5B;IACD;IAEA,mBAAmB;QAClB,OAAO;IACR;IAEA,qBAAqB;QACpB,OAAO;IACR;IAEA,iBAAiB,QAAQ,EAAE,QAAQ,EAAE;QACpC,OAAO,IAAI,eAAe,UAAU;IACrC;IAEA,cAAc;QACb,OAAO;IACR;IAEA,iBAAiB,MAAM,EAAE,QAAQ,EAAE;QAClC,IAAI,CAAC,SAAS,UAAU,EACvB,OAAO,UAAU,GAAG,OAAO,MAAM,GAAG;QAErC,IAAI,CAAC,SAAS,OAAO,EACpB,OAAO,OAAO,GAAG,OAAO,MAAM,GAAG;QAElC,IAAI,CAAC,SAAS,aAAa,EAC1B,OAAO,aAAa,GAAG,OAAO,MAAM,GAAG;QAExC,OAAO,QAAQ,8CAA8C;IAC9D;IAEA,YAAY;QACX,OAAO;IACR;AACD;;;ACxHA;;;;;;;;;;;;;;;AAeA;;AAoGA,+CAAS;AAAT,wDAAoB;AAlGpB;AACA;AACA;AACA;AACA;AAEA,MAAM,kBAAkB,CAAA,GAAA,gBAAM,AAAD;IAC5B,YAAY,MAAM,CAAE;QACnB,KAAK,CAAC;IACP;IAEA,WAAW;QACV,IAAI,IAAI,mBAAmB,IAAI,CAAC,OAAO;QACvC,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACR;IAEA,cAAc;QACb,OAAO;IACR;IAEA,iCAAiC;IAEjC,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,IAAI,CAAC,UAAU;QAEvB,OAAO,OAAO,IAAI,CAAC,OAAO,KAAK;IAChC;IAEA,aAAa;QACZ,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,GAAG,UAAU,EAAE,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,OAAO,IAAI,EAAE,IAAI,CAAC,iBAAiB,GAAG,CAAC;IAC/H;IAEA,eAAe;QACd,OAAO,IAAI,mBAAmB,IAAI;IACnC;IAEA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,IAAI,UAAU,WAAW,UAAU;QACnC,KAAK,CAAC,WAAW,YAAY,aAAa;QAC1C,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,IAAI,cAAc,CAAA,GAAA,2CAAwB,AAAD,GACxC,QAAQ,SAAS,CAAC,GAAG,CAAC;aAEtB,QAAQ,SAAS,CAAC,GAAG,CAAC;IAExB;IAEA,cAAc,OAAO,EAAE;QACtB,OAAO;IACR;IAEA,oBAAoB;QACnB,OAAO;IACR;IAEA,gBAAgB;QACf,OAAO;YACN,OAAO;YACP,WAAW;YACX,aAAa;YACb,aAAa;YACb,cAAc;YACd,kBAAkB;YAClB,aAAa;YACb,SAAS;YAET,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;QACN;IACD;IAEA,UAAU;QACT,OAAO,KAAK,CAAC,YAAY,CAAA,GAAA,YAAI,AAAD,EAAE,aAAa;IAC5C;AACD;AAEA,SAAS,mBAAmB,MAAM;IACjC,IAAI,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,aAAa,KACtC,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC;OACtB,EAAE,CAAA,GAAA,YAAI,AAAD,EAAE,KAAK,GAAG,CAAC;IAEtB,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI,UAAU;AACpC;;;ACjHA;;;;;;;;;;;;;;;AAeA;;AAmdA,mDACC;AAldD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAM;IACL,aAAc;QACb,IAAI,CAAC,OAAO,GAAG;QACf,IAAI,CAAC,gBAAgB,GAAG;IACzB;IAEA,oBAAoB,GAAG,EAAE;QACxB,IAAI,CAAC,gBAAgB,GAAG;IACzB;IAEA,aAAa,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;QACnE,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,SAAS,UAAU,SAAS,SAAS,QAAQ;QAC/E,IAAI,aAAa,YAAY,aAAa,UACzC,OAAO;QAER,IAAI,WAAY,WAAW,KAC1B,OAAO;QAER,OAAO;IACR;IAEA,SAAS,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE;QAC/D,uGAAuG;QACvG,sCAAsC;QACtC,EAAE;QACF,0FAA0F;QAC1F,IAAI,WAAW,YAAY;QAC3B,IAAI,WAAW,SAAS;QACxB,IAAI,WAAW,OAAO;QACtB,IAAI,WAAW,QAAQ;QACvB,IAAI,WAAW,WAAW;QAE1B,IAAI,WAAY,WAAW,KAC1B;QAED,IAAI,YAAY,IAAI,CAAC,YAAY,CAAC,SAAS,UAAU,SAAS,SAAS,QAAQ;QAE/E,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,WAAW,IAAI;YACtD,yCAAyC;YACzC,yEAAyE;YACzE,8DAA8D;YAC9D,mDAAmD;YAEnD,YAAY,IAAI,CAAC,aAAa,CAAC;YAC/B,IAAI,cAAc,MACjB;QAEF;QAGA,gCAAgC;QAChC,IAAI,aAAa;aAEV,IAAI,aAAa,UACvB,CAAA,GAAA,eAAI,AAAD;aACG,IAAI,aAAa,UACvB,CAAA,GAAA,eAAI,AAAD;aACG,IAAI,aAAa,UAAU;YACjC,IAAI,KAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM;YAC3B,IAAI,IACH,CAAA,GAAA,qCAAe,AAAD,EAAE;QAElB,OAAO,IAAI,aAAa,UACvB,CAAA,GAAA,0BAAW,AAAD,EAAE,KAAK;aACX,IAAI,aAAa,UACvB,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM;aACZ,IAAI,aAAa,UACvB,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;aACb,IAAI,aAAa,YAAY,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,WAAW,IACnF,IAAI,CAAC,wBAAwB;aACvB;YACN,4BAA4B;YAC5B,2BAA2B;YAC3B,wBAAwB;YACxB,oDAAoD;YACpD,IAAI,OAAO,2BAA2B,IACjC,aAAa,gBAEf,CAAA,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,MAAM,GAAG,WAAW,MAAM,eAC3D,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,MAAM,GAAG,WAAW,MAAM,UAAS,GAE5E,YAAY;YAEb,IAAI;gBACH,IAAI,aAAa,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;gBAElD,IAAI,aAAa,IAAI,CAAC,6BAA6B,CAAC,YAAY;gBAChE,IAAI,CAAC,YACJ,aAAa,IAAI,CAAC,6BAA6B,CAAC,YAAY;gBAE7D,IAAI,CAAC,cAAc,cAAc,oBAChC,aAAa,IAAI,CAAC,0BAA0B,CAAC,YAAY;gBAE1D,IAAI,YAAY;oBACf,8DAA8D;oBAC9D,2BAA2B;oBAC3B,IAAI,SAAS,CAAA,GAAA,wBAAa,AAAD,EAAE,YAAY;oBACvC,CAAA,GAAA,kCAAuB,AAAD,EAAE;gBACzB;YACD,EAAE,OAAO,GAAG;gBACX,IAAI,KAAK,CAAA,GAAA,gCAAa,AAAD,GACpB,QAAQ,GAAG,CAAC,4BACW,UACnB,MAAM,cAAc,WACpB,MAAM,cAAc,WACpB,MAAM,aAAa,UACnB,MAAM,aAAa;qBACjB,MAAM;YACd;QACD;IACD;IAEA,8BAA8B,UAAU,EAAE,SAAS,EAAE;QACpD,IAAI,QAAQ,WAAW,GAAG,CAAC,aAAa;QACxC,IAAI,CAAC,OACJ,OAAO;QAER,IAAI,IAAI,KAAK,CAAC,UAAU;QACxB,IAAI,GACH,OAAO;QAER,OAAO;IACR;IAEA,8BAA8B,UAAU,EAAE,SAAS,EAAE;QACpD,IAAI,QAAQ;QACZ,IAAI,WAAW,GAAG,CAAC,cAAc,IAChC,QAAQ,IAAI,CAAC,2BAA2B;aAExC,QAAQ,IAAI,CAAC,kBAAkB;QAEhC,IAAI,IAAI,KAAK,CAAC,UAAU;QACxB,IAAI,GACH,OAAO;QAER,OAAO;IACR;IAEA,2BAA2B,UAAU,EAAE,SAAS,EAAE;QACjD,IAAI,QAAQ;QACZ,IAAI,WAAW,GAAG,CAAC,iBAAiB,EAAE;YACrC,IAAI,IAAI,WAAW,GAAG,CAAC,iBAAiB;YACxC,IAAI,GACH,OAAO;QAET;QACA,OAAO;IACR;IAEA,cAAc,SAAS,EAAE;QACxB,8DAA8D;QAC9D,2EAA2E;QAC3E,eAAe;QACf,yEAAyE;QACzE,sCAAsC;QACtC,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,uBAAuB,CAAC;IACpE;IAEA,aAAa,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;QACnE,IAAI,YAAY,IAAI,CAAC,gBAAgB,CAAC,SAAS,UAAU,SAAS,SAAS,QAAQ;QACnF,YAAY,UAAU,OAAO,CAAC,SAAS;QACvC,OAAO;IACR;IAGA,iBAAiB,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ,EAAE;QACvE,yDAAyD;QACzD,iDAAiD;QACjD,mEAAmE;QACnE,IAAI,WAAW,WAAW,WAAW,UACpC,OAAO;aACD,IAAI,WAAW,WAAW,SAChC,OAAO;aACD,IAAI,WAAW,WAAW,SAChC,OAAO;aACD,IAAI,WAAW,WAAW,UAChC,OAAO;aAED,IAAI,WAAW,eAAe,QACpC,OAAO;aACD,IAAI,WAAW,aAAa,QAClC,OAAO;aACD,IAAI,WAAW,gBAAgB,QACrC,OAAO;aACD,IAAI,WAAW,eAAe,QACpC,OAAO;aAED,IAAI,WAAW,eAAe,SACpC,OAAO;aACD,IAAI,WAAW,aAAa,SAClC,OAAO;aACD,IAAI,WAAW,gBAAgB,SACrC,OAAO;aACD,IAAI,WAAW,eAAe,SACpC,OAAO;aAED,IAAI,WAAW,eAAe,UACpC,OAAO;aACD,IAAI,WAAW,aAAa,UAClC,OAAO;aACD,IAAI,WAAW,gBAAgB,UACrC,OAAO;aACD,IAAI,WAAW,eAAe,UACpC,OAAO;aAGD,IAAI,WAAW,YAAY,UAAU,UAC3C,OAAO;aACD,IAAI,WAAW,YAAY,QACjC,OAAO;aACD,IAAI,WAAW,YAAY,UACjC,OAAO;aAED,IAAI,WAAW,SAAS,YAAY,QAC1C,OAAO;aACD,IAAI,WAAW,SAAS,YAAY,SAC1C,OAAO;aACD,IAAI,WAAW,SAAS,QAC9B,OAAO;aACD,IAAI,WAAW,SAAS,SAC9B,OAAO;aACD,IAAI,WAAW,SAAS,UAC9B,OAAO;aAED,IAAI,WAAW,OAAO,UAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,AAAC,CAAA,WAAW,OAAO,YAAY,OAAM,KAAM,QACrD,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aAED,IAAI,WAAW,OAAO,UAAU,UACtC,OAAO;aACD,IAAI,WAAW,UAAU,YAAY,eAAe,UAAU,CAAC,UACrE,OAAO;aACD,IAAI,YAAY,YAAY,UAAU,UAC5C,OAAO;aACD,IAAI,YAAY,YAAY,UAAU,UAC5C,OAAO;aACD,IAAI,YAAY,YAAY,UAAU,UAC5C,OAAO;aACD,IAAI,YAAY,YAAY,UAAU,UAC5C,OAAO;aACD,IAAI,YAAY,WAAW,UAAU,UAC3C,OAAO;aACD,IAAI,YAAY,iBAAiB,UAAU,CAAC,UAClD,OAAO;aACD,IAAI,YAAY,iBAAiB,UAAU,UACjD,OAAO;aACD,IAAI,WAAW,OAAO,WAAW,UACvC,OAAO;aACD,IAAI,WAAW,UAAU,YAAY,eAAe,WAAW,CAAC,UACtE,OAAO;aACD,IAAI,YAAY,YAAY,WAAW,UAC7C,OAAO;aACD,IAAI,YAAY,YAAY,WAAW,UAC7C,OAAO;aACD,IAAI,YAAY,YAAY,WAAW,UAC7C,OAAO;aACD,IAAI,YAAY,YAAY,WAAW,UAC7C,OAAO;aACD,IAAI,YAAY,iBAAiB,WAAW,CAAC,UACnD,OAAO;aACD,IAAI,YAAY,iBAAiB,WAAW,UAClD,OAAO;aAED,IAAI,WAAW,eAAe,YAAY,QAChD,OAAO;aACD,IAAI,WAAW,eAAe,YAAY,SAChD,OAAO;aACD,IAAI,WAAW,eAAe,UACpC,OAAO;aACD,IAAI,WAAW,eAAe,SACpC,OAAO;aACD,IAAI,WAAW,eAAe,QACpC,OAAO;aAED,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aAED,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aACD,IAAI,WAAW,OAAO,SAC5B,OAAO;aAEP,OAAO;IAET;IAEA,2BAA2B;QAC1B,IAAI,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;QAC9B,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,KAAK,UAAU;QACtD,KAAK,gBAAgB;IACtB;IAEA,8BAA8B;QAC7B,OAAO;YACN,YAAY;YACZ,OAAO;YAEP,WAAW;YACX,aAAa;YACb,aAAa;YACb,cAAc;YAEd,cAAc;YACd,gBAAgB;YAChB,gBAAgB;YAChB,iBAAiB;YAEjB,UAAU;YACV,eAAe;YAEf,cAAc;YACd,SAAS;YAET,cAAc;YAEd,kBAAkB;YAClB,qBAAqB;YAGrB,iBAAiB;YAEjB,aAAa;YAEb,gBAAgB;YAEhB,eAAe;YAEf,YAAY;YAEZ,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YAEL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YAEL,MAAM;YAGN,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;QACT;IACD;IAEA,qBAAqB;QACpB,OAAO;YACN,YAAY;YACZ,OAAO;YAEP,WAAW;YACX,aAAa;YACb,aAAa;YACb,cAAc;YAEd,cAAc;YACd,gBAAgB;YAChB,gBAAgB;YAChB,iBAAiB;YAEjB,eAAe;YAEf,kBAAkB;YAClB,iBAAiB;YAEjB,aAAa;YAEb,gBAAgB;YAEhB,eAAe;YAEf,YAAY;YAEZ,eAAe;YACf,SAAS;YACT,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YAEL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YACL,KAAK;YAEL,KAAK;YAEL,KAAK;YACL,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;YACR,QAAQ;QACT;IACD;AACD;AAEA,MAAM,gBAAgB,IAAI;;;AChe1B;;;;;;;;;;;;;;;AAeA;;AAuoBA,mDAAS;AAAT,6DAAwB;AAAxB,0CAAiD;AAAjD,0CAAuD;AAroBvD;AACA;AACA;AACA;AAEA,MAAM,eAAe;AAErB,MAAM,cAAc,EAAE;AAEtB,IAAI,eAAe;AACnB,IAAI,cAAc;AAClB,IAAI,WAAW;AACf,IAAI,kBAAkB;AAEtB,SAAS,QAAQ,QAAQ;IACxB,OAAO,AAAC,CAAA,WAAW,CAAA,IAAK;AACzB;AAEA,SAAS,QAAQ,QAAQ;IACxB,IAAI,IAAI,WAAW;IACnB,IAAI,IAAI,GACP,OAAO,IAAI;SAEX,OAAO;AAET;AAEA,SAAS,wBAAwB,MAAM;IACtC,WAAW,CAAC,aAAa,GAAG;IAC5B,IAAI,gBAAgB,UAAU;QAC7B,WAAW,QAAQ;QACnB,eAAe,QAAQ;QACvB,IAAI,mBAAmB,cACtB,cAAc,QAAQ;aAEtB;IAEF,OACC,eAAe,QAAQ;IAExB,OAAO,QAAQ;AAChB;AAGA,SAAS;IACR,IAAI,gBAAgB,UAAU;QAC7B,WAAW,CAAC,aAAa,CAAC,QAAQ;QAClC,eAAe,QAAQ;IACxB,OACC,QAAQ,GAAG,CAAC;AAEd;AAEA,SAAS;IACR,IAAI,MAAM,QAAQ;IAClB,IAAI,WAAW,CAAC,IAAI,CAAC,OAAO,IAAI;QAC/B,eAAe;QACf,WAAW,CAAC,aAAa,CAAC,UAAU;IACrC,OACC,QAAQ,GAAG,CAAC;AAEd;AAEA,MAAM;IACL,YAAY,UAAU,CAAE;QACvB,IAAI,CAAC,UAAU,GAAG;IACnB;IAEA,UAAU,CAAC;IACX,WAAW,CAAC;IACZ,aAAa,CAAC;AACf;AAGA,wEAAwE;AACxE,uDAAuD;AACvD,4EAA4E;AAC5E,yEAAyE;AACzE,6BAA6B;AAE7B,MAAM,mBAAmB;IACxB,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW,CACX;IAEA,aAAa,CACb;AACD;AAGA,MAAM,qCAAqC;IAC1C,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,eAAe,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACpD,IAAI,aAAa,aAAa,mBAAmB,CAAC,aAAa,GAAG;QAClE,IAAI,CAAC,eAAe,GAAG,WAAW,eAAe;QACjD,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvC;IAEA,aAAa;QACZ,IAAI,eAAe,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACpD,IAAI,aAAa,aAAa,mBAAmB,CAAC,aAAa,GAAG;QAClE,WAAW,eAAe,CAAC,IAAI,CAAC,eAAe;IAChD;AACD;AAEA,MAAM,kCAAkC;IACvC,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,eAAe,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACpD,IAAI,aAAa,aAAa,gBAAgB,CAAC,aAAa,GAAG;QAC/D,IAAI,CAAC,eAAe,GAAG,WAAW,eAAe;QACjD,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACvC;IAEA,aAAa;QACZ,yDAAyD;QACzD,mDAAmD;QACnD,8DAA8D;QAC9D,IAAI,eAAe,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACpD,IAAI,aAAa,aAAa,gBAAgB,CAAC,aAAa,GAAG;QAC/D,WAAW,eAAe,CAAC,IAAI,CAAC,eAAe;IAChD;AACD;AAEA,MAAM,qBAAqB;IAC1B,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,cAAc,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACvD,IAAI,CAAC,gBAAgB,GAAG,EAAE;QAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,cAAc,CAAC,WAAW,IAAI,IACtD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC;QAE3D,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS;QACtD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc;QAEvE,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;IACxE;IAEA,aAAa;QACZ,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK;QAC/C,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IACjD,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,CAAC,EAAE;QAEzD,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK;QACpE,IAAI,CAAC,cAAc,CAAC,WAAW;IAChC;AACD;AAEA,MAAM,kCAAkC;IACvC,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,cAAc,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACvD,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,cAAc,CAAC,gBAAgB;QAC9D,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACvE,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,+BAA+B;QAE1D,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAChC,IAAI,aAAa,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;YAC/D,WAAW,eAAe,CAAC,IAAI,CAAC,sBAAsB;QACvD;IACD;IAEA,aAAa;QAEZ,IAAI,aAAa,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;QAC/D,IAAI,YACH,IAAI,CAAC,sBAAsB,GAAG,WAAW,eAAe;aAExD,IAAI,CAAC,sBAAsB,GAAG;QAG/B,IAAI,IAAI,IAAI,CAAC,OAAO,CAAC,SAAS;QAC9B,IAAI,QAAQ,EAAE,eAAe,CAAC,IAAI,CAAC,OAAO;QAC1C,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC,IAAI,CAAC,OAAO;QAClC,EAAE,aAAa,CAAC,IAAI,CAAC,cAAc,EAAE;QACrC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB;QAC5D,IAAI,CAAC,cAAc,CAAC,WAAW;IAChC;AACD;AAGA,MAAM,iCAAiC;IACtC,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,iBAAiB,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1D,IAAI,CAAC,kBAAkB,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,gBAAgB;QAC9E,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACvE,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,+BAA+B;QAE1D,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAChC,IAAI,aAAa,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;YAC/D,WAAW,eAAe,CAAC,IAAI,CAAC,sBAAsB;QACvD;IACD;IAEA,aAAa;QACZ,kFAAkF;QAClF,wDAAwD;QACxD,mCAAmC;QAEnC,IAAI,aAAa,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;QAC/D,IAAI,YACH,IAAI,CAAC,sBAAsB,GAAG,WAAW,eAAe;aAExD,IAAI,CAAC,sBAAsB,GAAG;QAG/B,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC,IAAI,CAAC,OAAO;QAClC,IAAI,CAAC,iBAAiB,CAAC,WAAW;QAClC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB;IAChE;AACD;AAGA,MAAM,8BAA8B;IACnC,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,iBAAiB,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM;QACjD,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;IACxE;IAEA,aAAa;QACZ,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ;IAChD;AACD;AAEA,MAAM,iCAAiC;IACtC,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,iBAAiB,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1D,IAAI,CAAC,kBAAkB,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,gBAAgB;QAC9E,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;IACxE;IAEA,aAAa;QACZ,IAAI,CAAC,iBAAiB,CAAC,WAAW;QAClC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB;IAChE;AACD;AAEA,MAAM,wCAAwC;IAC7C,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,QAAQ,GAAG,CAAC,wBAAwB,IAAI,CAAC,UAAU;QACnD,OAAO;IACR;IAEA,WAAW;QACV,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;IACxE;IAEA,aAAa;QACZ,QAAQ,GAAG,CAAC;IACb;AACD;AAEA,4DAA4D;AAC5D,mCAAmC;AACnC,MAAM,mDAAmD;IACxD,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;QACN,IAAI,CAAC,WAAW,GAAG;IACpB;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACtB,IAAI,CAAC,WAAW,GAAG;YACnB,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACxE;IACD;IAEA,aAAa;IACZ,QAAQ;IACT;AACD;AAGA,MAAM,wBAAwB;IAC7B,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,kBAAkB,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC3D,IAAI,CAAC,yBAAyB,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS;QAClE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,yBAAyB,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB;QACnF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB;QAClE,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;IACxE;IAEA,aAAa;QACZ,IAAI,CAAC,yBAAyB,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK;QAChF,IAAI,CAAC,kBAAkB,CAAC,WAAW;QACnC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB;IACjE;AACD;AAEA,MAAM,iCAAiC;IACtC,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,kBAAkB,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC3D,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS;QACnE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,0BAA0B,CAAC,eAAe,CAAC,IAAI,CAAC,kBAAkB;QACpF,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,gBAAgB;QAClE,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;IACxE;IAEA,aAAa;QACZ,IAAI,mBAAmB,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QACxD,CAAA,GAAA,0BAAW,AAAD,EAAE,8BAA8B,CAAC;QAE3C,IAAI,CAAC,0BAA0B,CAAC,aAAa,CAAC,IAAI,CAAC,kBAAkB,EAAE,IAAI,CAAC,KAAK;QACjF,IAAI,CAAC,kBAAkB,CAAC,WAAW;QACnC,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB;QAEhE,IAAI,KAAK,CAAA,GAAA,0BAAgB,AAAD,EAAE;QAC1B,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,kBAAkB;IAC9E;AACD;AAGA,MAAM,8BAA8B;IACnC,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,kBAAkB,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC3D,IAAI,CAAC,0BAA0B,GAAG,IAAI,CAAC,kBAAkB,CAAC,SAAS;QACnE,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;IACxE;IAEA,aAAa;QACZ,IAAI,KAAK,CAAA,GAAA,0BAAgB,AAAD,EAAE;QAC1B,IAAI,CAAC,0BAA0B,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC,kBAAkB;IAC9E;AACD;AAGA,MAAM,+BAA+B;IACpC,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,eAAe,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,aAAa;QACxE,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;IACxE;IAEA,aAAa;QACZ,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,aAAa,CAAC,IAAI,CAAC,eAAe;IACvE;AACD;AAEA,MAAM,wBAAwB;IAC7B,oCAAoC;IACpC,mDAAmD;IACnD,yCAAyC;IACzC,oDAAoD;IACpD,0CAA0C;IAC1C,oCAAoC;IACpC,6CAA6C;IAC7C,gBAAgB;IAChB,0DAA0D;IAC1D,YAAY,UAAU,CAAE;QACvB,KAAK,CAAC;IACP;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,CAAA,GAAA,4CAAoB,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;IACxE;IAEA,aAAa;QACZ,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB;IAC/B;AACD;AAEA,MAAM,6BAA6B;IAClC,YAAY,UAAU,EAAE,SAAS,CAAE;QAClC,KAAK,CAAC;QACN,IAAI,CAAC,SAAS,GAAG;IAClB;IAEA,UAAU;QACT,OAAO;IACR;IAEA,WAAW;QACV,IAAI,CAAC,iBAAiB,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB;QAC1D,IAAI,CAAC,kBAAkB,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,GAAG,gBAAgB;QAE9E,IAAI,UAAU,CAAA,GAAA,uCAAe,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;QAC9C,IAAI,SAAS,QAAQ,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,IAAI,IAAI,CAAC,SAAS;QAExE,IAAI,OAAO,QAAQ,EAAE;YACpB,IAAI,CAAC,OAAO,GAAG,OAAO,QAAQ;YAE9B,IAAI,IAAI,CAAC,sBAAsB,EAAE;gBAChC,IAAI,aAAa,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;gBAC/D,WAAW,eAAe,CAAC,IAAI,CAAC,sBAAsB;YACvD;QACD;IACD;IAEA,aAAa;QACZ,kFAAkF;QAClF,wDAAwD;QACxD,mCAAmC;QAEnC,IAAI,IAAI,CAAC,OAAO,EAAE;YACjB,yBAAyB;YACzB,IAAI,aAAa,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG;YAC/D,IAAI,YACH,IAAI,CAAC,sBAAsB,GAAG,WAAW,eAAe;iBAExD,IAAI,CAAC,sBAAsB,GAAG;YAG/B,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC,IAAI,CAAC,OAAO;YAClC,IAAI,CAAC,iBAAiB,CAAC,WAAW;YAClC,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,kBAAkB;QAChE;IACD;AACD;AAGA,MAAM,mCAAmC;IACxC,YAAY,UAAU,EAAE,SAAS,CAAE;QAClC,KAAK,CAAC;QACN,IAAI,CAAC,SAAS,GAAG;IAClB;IAEA,UAAU;QACT,QAAQ,GAAG,CAAC,wBAAwB,IAAI,CAAC,UAAU;QACnD,QAAQ,GAAG,CAAC,eAAe,IAAI,CAAC,SAAS;QACzC,OAAO;IACR;IAEA,WAAW;QACV,IAAI,UAAU,CAAA,GAAA,uCAAe,AAAD,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC;QAC9C,OAAO,QAAQ,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,IAAI,IAAI,CAAC,SAAS;IACnE;IAEA,aAAa;QACZ,QAAQ,GAAG,CAAC;IACb;AACD;AAGA,SAAS,cAAc,UAAU,EAAE,SAAS;IAC3C,OAAO;QACN,KAAK;YACJ,OAAO,IAAI,WAAW;QACtB,KAAK;YACL,OAAO,IAAI,2CAA2C;QACvD,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACJ,OAAO,IAAI,yBAAyB;QACrC,KAAK;YACJ,OAAO,IAAI,sBAAsB;QAElC,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACJ,OAAO,IAAI,yBAAyB;QAErC,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACJ,OAAO,IAAI,gBAAgB;QAE5B,KAAK;YACJ,OAAO,IAAI,yBAAyB;QAErC,KAAK;QACL,KAAK;YACJ,OAAO,IAAI,0BAA0B;QAEtC,KAAK;YACJ,OAAO,IAAI,6BAA6B;QAEzC,KAAK;YACJ,OAAO,IAAI,sBAAsB;QAElC,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACJ,OAAO,IAAI,0BAA0B;QAErC,KAAK;QACN,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;QACL,KAAK;YACH,OAAO,IAAI,qBAAqB,YAAY;QAE7C,KAAK;YACJ,OAAO,IAAI,uBAAuB;QAEpC,KAAK;QACL,KAAK;QACL,KAAK;YACJ,OAAO,IAAI,gBAAgB;QAE5B,2CAA2C;QAE3C,KAAK;YACJ,OAAO,IAAI,aAAa;QAEzB,wBAAwB;QAExB;YACC,OAAO,IAAI,gCAAgC;IAC7C;AAED;;;AClpBA;;;;;;;;;;;;;;;AAeA;;AAiiBA,0DACC;AADD,qDAEC;AAjiBD;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAYA,8CAA8C;AAC9C,wDAAwD;AACxD,qEAAqE;AACrE,6DAA6D;AAC7D,oEAAoE;AACpE,8DAA8D;AAC9D,wBAAwB;AAExB,mEAAmE;AACnE,oEAAoE;AACpE,iBAAiB;AAIjB,MAAM,kBAAkB;IAEvB,mBAAmB,SAAS,IAAI,EAAE,GAAG;QACpC,IAAI,MAAM,KAAK,GAAG;QAClB,IAAI,QAAQ,SAAM,oBAAoB,CAAC;QAEvC,IAAI,MAAM,OAAO,EAAE;YAClB,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,mBAAmB,CAAC;YAC9C,CAAA,GAAA,0BAAW,AAAD,EAAE,iCAAiC,CAAC;YAC9C,OAAO;gBACN,UAAU;YACX;QACD,OAAO,IAAI,MAAM,OAAO,EAAE;YACzB,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB,CAAC;YAC7C,CAAA,GAAA,0BAAW,AAAD,EAAE,iCAAiC,CAAC;YAC9C,OAAO;gBACN,UAAU;YACX;QACD,OACC,OAAO,CACP;IAEF;IAEA,iBAAiB,SAAS,IAAI,EAAE,GAAG;QAClC,IAAI,MAAM,KAAK,GAAG;QAClB,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB,CAAC;QAC5C,IAAI,SAAU,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,IAAI,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,cAAc;QAClF,IAAI,CAAE,MAAM,IAAI,CAAC,MAChB,MAAM,GAAA,gCAAa;QAEpB,IAAI,cAAc;QAClB,IAAI,cAAc,CAAC,YAAY,IAAI,CAAC;QACpC,IAAI,UAAU;QACd,IAAI,aAAa;YAChB,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;YACnC,IAAI,QACH,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC;iBAEvD,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;QAEvD,OAAO;YACN,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC;YAChC,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;QACtD;QACA,OAAO;YACN,UAAU;QACX;IACD;IAEA,oBAAoB,SAAS,IAAI,EAAE,GAAG;QACrC,IAAI,MAAM,KAAK,GAAG;QAClB,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB,CAAC;QAC5C,IAAI,SAAU,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,IAAI,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,cAAc;QAClF,IAAI,CAAE,MAAM,IAAI,CAAC,MAChB,MAAM,GAAA,gCAAa;QAEpB,IAAI,cAAc;QAClB,IAAI,cAAc,CAAC,YAAY,IAAI,CAAC;QAEpC,IAAI,UAAU;QAEd,IAAI,aAAa;YAChB,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;YACnC,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;QACtD,OACC,IAAI,QAAQ;YACX,iFAAiF;YACjF,sEAAsE;YAEtE,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;YACjC,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,cAAc,EACxC,QAAQ,MAAM,GAAG,UAAU,CAAC;YAE7B,IAAI,YAAY,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC;YACtC,QAAQ,WAAW,CAAC;YACpB,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;YACrD,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,mBAAmB,CAAC;YAC9C,oEAAoE;YACpE,4DAA4D;YAC5D,iDAAiD;YACjD,IAAI,SACH,UAAU;iBAEV,UAAU;YAEX,UAAU,WAAW;QACtB,OAAO;YACN,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC;YAChC,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;QACtD;QAED,OAAO;YACN,UAAU;QACX;IACD;IAEA,eAAgB,SAAS,IAAI,EAAE,GAAG;QACjC,IAAI,MAAM,KAAK,GAAG;QAClB,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB,CAAC;QAC5C,IAAI,CAAE,MAAM,IAAI,CAAC,MAChB,MAAM,GAAA,gCAAa;QAGpB,IAAI,cAAc;QAClB,IAAI,cAAc,CAAC,YAAY,IAAI,CAAC;QAEpC,IAAI,UAAU;QAEd,IAAI,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,cAAc,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,KAAK;YACxD,IAAI,UAAU,SAAM,cAAc,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ;YACvD,IAAI,SACH,UAAU,cAAc,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC;iBACxE;gBACN,IAAI,QAAQ,SAAM,oBAAoB,CAAC;gBACvC,IAAI,MAAM,OAAO,EAChB,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,mBAAmB,CAAC;qBACpC,IAAI,MAAM,OAAO,EACvB,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB,CAAC;qBAEzC,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;YAErC;YACA,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;QACtD,OACC,IAAI,aAAa;YAChB,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;YACnC,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;QACtD,OAAO;YACN,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC;YAChC,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,IAC9B,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;iBAErD,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;QAEvD;QAGD,OAAO;YACN,UAAU;QACX;IACD;IAEA,eAAe,SAAS,IAAI,EAAE,GAAG;QAChC,IAAI,MAAM,KAAK,GAAG;QAClB,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB,CAAC;QAC5C,IAAI,CAAE,MAAM,IAAI,CAAC,MAChB,MAAM,GAAA,gCAAa;QAGpB,IAAI,cAAc;QAClB,IAAI,cAAc,CAAC,YAAY,IAAI,CAAC;QAEpC,IAAI,UAAU;QAEd,IAAI,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,cAAc,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,KAAK;YACxD,IAAI,UAAU,SAAM,cAAc,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ;YACvD,IAAI,SACH,UAAU,cAAc,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC;iBACxE;gBACN,IAAI,QAAQ,SAAM,oBAAoB,CAAC;gBACvC,IAAI,MAAM,OAAO,EAChB,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,mBAAmB,CAAC;qBACpC,IAAI,MAAM,OAAO,EACvB,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB,CAAC;qBAEzC,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;YAErC;YACA,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;QACtD,OACC,IAAI,aAAa;YAChB,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;YACnC,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,IAC9B,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;iBAErD,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;QAEvD,OAAO;YACN,IAAI,YAAY,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC;YACtC,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;YACjC,mEAAmE;YACnE,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe;gBAC9B,sEAAsE;gBACtE,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,IAAI;oBAClC,mEAAmE;oBACnE,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;oBACrD,UAAU;gBACX,OAAO;oBACN,6CAA6C;oBAC7C,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,CAAC,SAAS;oBAChG,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;oBACrD,UAAU;gBACX;mBACM;gBACN,4DAA4D;gBAC5D,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,CAAC,SAAS;gBAChG,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;gBACrD,UAAU;YACX;QACD;QAGD,OAAO;YACN,UAAU;QACX;IACD;IAEA,cAAe,SAAS,IAAI,EAAE,GAAG;QAChC,IAAI,MAAM,KAAK,GAAG;QAClB,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB,CAAC;QAC5C,IAAI,CAAE,MAAM,IAAI,CAAC,MAChB,MAAM,GAAA,gCAAa;QAGpB,IAAI,cAAc;QAClB,IAAI,cAAc,CAAC,YAAY,IAAI,CAAC;QACpC,gGAAgG;QAChG,wEAAwE;QACxE,IAAI,cAAe,IAAI,SAAS,KAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,GAAG,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,aAAa;QAEhF,IAAI,UAAU;QAEd,IAAI,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,cAAc,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,KAAK;YACxD,IAAI,UAAU,SAAM,cAAc,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ;YACvD,IAAI,SACH,UAAU,cAAc,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC;iBACxE;gBACN,IAAI,QAAQ,SAAM,oBAAoB,CAAC;gBACvC,IAAI,MAAM,OAAO,EAChB,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,mBAAmB,CAAC;qBACpC,IAAI,MAAM,OAAO,EACvB,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB,CAAC;qBAEzC,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;YAErC;YACA,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI;QACtD,OACC,IAAI,aAAa;YAChB,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;YACjC,IAAI,eAAe,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;YAC5C,UAAU;YACV,IAAI,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,IAAI;gBACnC,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,CAAC,SAAS;gBACvE,UAAU;YACX;YACA,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,CAAC;QAC7B,OAAO;YACN,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;YACjC,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;YACjC,IAAI,YAAY,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS,CAAC;YACtC,UAAU;YACV,IAAI,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,IAAI;gBACnC,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,CAAC,SAAS;gBACvE,UAAU;YACX;YACA,IAAI,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,IAAI;gBACnC,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,qBAAqB,CAAC,SAAS;gBACvE,IAAI,CAAC,SAAS,UAAU;YACzB;YACA,IAAI,CAAC,SAAS,UAAU;YACxB,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,IAC9B,CAAA,GAAA,0BAAW,AAAD,EAAE,4BAA4B,CAAC;iBAEzC,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,CAAC;QAE9B;QAGD,OAAO;YACN,UAAU;QACX;IACD;AACD;AAEA,MAAM,uBAAuB;IAC5B,0EAA0E;IAC1E,6EAA6E;IAC7E,iEAAiE;IACjE,oFAAoF;IACpF,6EAA6E;IAE7E,cAAe,SAAS,CAAC,GAAG;IAE5B,gBAAgB,SAAS,CAAC;QACzB,CAAA,GAAA,wCAAkB,AAAD,EAAE;IACpB;IAEA,yBAAyB,SAAS,CAAC;QAClC,CAAA,GAAA,qCAAe,AAAD,EAAE;IACjB;IAEA,cAAc,SAAS,CAAC;QACvB,EAAE,MAAM,GAAG,SAAS;IACrB;IAEA,mBAAmB,SAAS,CAAC;QAC5B,EAAE,gBAAgB;IACnB;IAEA,iBAAiB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY;IAAI;IAE3D,gCAAgC,SAAS,CAAC;QACzC,IAAI,MAAM,EAAE,MAAM;QAClB,IAAI,CAAC,IAAI,WAAW,IACnB,CAAA,GAAA,wCAAkB,AAAD,EAAE,IAAI,uDAAuD;aACxE,IAAI,IAAI,UAAU,IACxB,CAAA,GAAA,0BAAW,AAAD,EAAE,uCAAuC;IAEpD,mCAAmC;IACpC;IAEA,gBAAgB,SAAS,CAAC;QACzB,EAAE,MAAM,GAAG,YAAY;IACxB;IAEA,qBAAqB,SAAS,CAAC;QAAI,EAAE,uBAAuB;IAAI;IAEhE,iBAAiB,SAAS,CAAC;QAC1B,CAAA,GAAA,0BAAW,AAAD,EAAE,UAAU,CAAC;IACxB;IAEA,oBAAoB,SAAS,CAAC;QAC7B,CAAA,GAAA,0BAAW,AAAD,EAAE,UAAU,CAAC;IACxB;IAEA,eAAe,SAAS,CAAC;QACxB,CAAA,GAAA,0BAAW,AAAD,EAAE,oBAAoB,CAAC;IAClC;IAEA,+CAA+C,SAAS,CAAC;QACxD,CAAA,GAAA,0BAAW,AAAD,EAAE,8BAA8B,CAAC;IAC5C;IAEA,wDAAwD,SAAS,CAAC;QACjE,CAAA,GAAA,0BAAW,AAAD,EAAE,qCAAqC,CAAC;IACnD;IAEA,gBAAgB,SAAS,CAAC;QACzB,CAAA,GAAA,0BAAW,AAAD,EAAE,UAAU,CAAC;IACxB;IAEA,mBAAmB,SAAS,CAAC;QAC5B,CAAA,GAAA,0BAAW,AAAD,EAAE,aAAa,CAAC;IAC3B;IAEA,sBAAsB,SAAS,CAAC;QAC/B,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,CAAC;IAC7B;IAEA,oBAAoB,SAAS,CAAC;QAC7B,CAAA,GAAA,0BAAW,AAAD,EAAE,aAAa,CAAC;IAC3B;IAEA,uBAAuB,SAAS,CAAC;QAChC,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC;IAC9B;IAEA,sBAAsB,SAAS,CAAC;QAC/B,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe,CAAC;IAC7B;IAEA,yBAAyB,SAAS,CAAC;QAClC,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB,CAAC;IAChC;IAEA,qBAAqB,SAAS,CAAC;QAC9B,CAAA,GAAA,0BAAW,AAAD,EAAE,cAAc,CAAC;IAC5B;IAEA,4DAA4D,SAAS,CAAC;QACrE,CAAA,GAAA,0BAAW,AAAD,EAAE,oCAAoC,CAAC;IAClD;IAEA,yBAAyB,SAAS,CAAC;QAClC,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB,CAAC;QAC5C,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,GAAG,IAAI,WAAW,CAAA,GAAA,0BAAW,AAAD,EAAE,aAAa,EACrE,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB,CAAC,GAAG;aAElC,CAAA,GAAA,wCAAkB,AAAD,EAAE;IAErB;IAEA,4BAA4B,SAAS,CAAC;QACrC,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB,CAAC;QAC5C,CAAA,GAAA,0BAAW,AAAD,EAAE,oBAAoB,CAAC,GAAG;IACrC;IAEA,+BAA+B,SAAS,CAAC;QACxC,IAAI,UAAU,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB,CAAC;QAC5C,CAAA,GAAA,0BAAW,AAAD,EAAE,uBAAuB,CAAC,GAAG;IACxC;IAEA,iDAAiD,SAAS,CAAC;QAC1D,CAAA,GAAA,0BAAW,AAAD,EAAE,uCAAuC,CAAC;IACrD;IAEA,6CAA6C,SAAS,CAAC;QACtD,CAAA,GAAA,0BAAW,AAAD,EAAE,mCAAmC,CAAC;IACjD;IAEA,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACxJ,qDAAqD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IAExJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IACvJ,kDAAkD,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,0CAA0C,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAO;IAEvJ,qCAAqC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,UAAU;IAAK;IAC9G,kCAAkC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;IAAK;IACxG,oCAAoC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,UAAU;IAAK;IAC7G,qCAAqC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,UAAU;IAAK;IAC9G,oCAAoC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,UAAU;IAAK;IAC7G,mCAAmC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,QAAQ;IAAK;IAC1G,iCAAiC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM;IAAK;IACtG,0CAA0C,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe;IAAK;IACxH,oCAAoC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS;IAAK;IAC5G,6CAA6C,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB;IAAK;IAC9H,kCAAkC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;IAAK;IACxG,kCAAkC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;IAAK;IACxG,iCAAiC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM;IAAK;IACtG,iCAAiC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM;IAAK;IACtG,uCAAuC,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY;IAAK;IAElH,iBAAiB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,WAAW,CAAC;IAAI;IAC3D,kBAAkB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAI;IAC7D,kBAAkB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,YAAY,CAAC;IAAI;IAC7D,iBAAiB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,WAAW,CAAC;IAAI;IAE3D,WAAW,SAAS,CAAC;QAAI,EAAE,cAAc;IAAI;IAE7C,UAAU,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,CAAC;IAAI;IAE/C,mBAAmB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,uBAAuB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,UAAU;IAAK;IAChG,kBAAkB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,uBAAuB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,SAAS;IAAK;IAC9F,2BAA2B,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,uBAAuB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB;IAAK;IAChH,gBAAgB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,uBAAuB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;IAAK;IAC1F,gBAAgB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,uBAAuB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;IAAK;IAC1F,eAAe,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,uBAAuB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM;IAAK;IACxF,wBAAwB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,uBAAuB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,eAAe;IAAK;IAC1G,eAAe,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,uBAAuB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM;IAAK;IAExF,uBAAuB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB;IAAI;IACtE,uBAAuB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB;IAAI;IACtE,sBAAsB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,gBAAgB;IAAI;IACpE,uBAAuB,SAAS,CAAC;QAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,iBAAiB;IAAI;IAEtE,wEAAwE,SAAS,CAAC;QACjF,EAAE,MAAM,GAAG,iBAAiB;QAC5B,CAAA,GAAA,0BAAW,AAAD,EAAE,sCAAsC;IACnD;IAEA,iBAAiB,SAAS,CAAC;QAC1B,EAAE,MAAM,GAAG,YAAY;IACxB;IAEA,oBAAoB,SAAS,CAAC;QAC7B,EAAE,eAAe;IAClB;IAEA,gBAAgB;IAChB,IAAG;AACJ;;;AC9iBA;;;;;;;;;;;;;;;AAeA;;AAyJA,6CAAS;AAAT,sDAAkB;AAvJlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;CAGC,GACD,MAAM,gBAAgB,CAAA,GAAA,gBAAM,AAAD;IAC1B,YAAY,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,CAAE;QAC5C,YAAY;QAEZ,KAAK;QACL,8CAA8C;QAC9C,2DAA2D;QAC3D,IAAI,CAAC,IAAI,GAAG,IAAI,CAAA,GAAA,kBAAU,AAAD;QACzB,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC;QACd,IAAI,CAAC,WAAW,GAAG;QACnB,IAAI,CAAC,gBAAgB,GAAG;QACxB,IAAI,CAAC,UAAU,GAAG;QAClB,IAAI,CAAC,SAAS,GAAG,IAAI,CAAA,GAAA,kBAAU,AAAD;QAC9B,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,YAAY,YAAY;QAC3C,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,MAAM;QACV,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;YACvC,IAAI,OAAO,IACV,OAAO;YAER,OAAO,MAAM,CAAC,EAAE,CAAC,IAAI;QACtB;QACA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAA,GAAA,kBAAU,AAAD;QAC5B,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC;QACjB,IAAI,CAAC,CAAC,GAAG;QACT,IAAI,CAAC,OAAO,GAAG,CAAA,GAAA,uBAAQ,AAAD;IACvB;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;QAEtC,OAAO,CAAC,SAAS,EAAE,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC;IACtC;IAEA,mBAAmB;QAClB,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG;IACrB;IAEA,cAAc;QACb,OAAO;IACR;IAEA,cAAc,EAAE,EAAE;QACjB,IAAI,CAAC,UAAU,GAAG;IACnB;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,IAAI,iBAAiB,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,IAAI,CAAC,WAAW;QAC1D,IAAI,CAAC,cAAc,CAAC,GAAG;QACvB,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACR;IAEA,uBAAuB;QACtB,OAAO;IACR;IAEA,eAAe;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG;IAC1B;IAEA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,IAAI,UAAU,WAAW,UAAU;QACnC,KAAK,CAAC,WAAW,YAAY,aAAa;QAC1C,QAAQ,SAAS,CAAC,GAAG,CAAC;IACvB;IAEA,KAAK,CAAC,EAAE;QACP,IAAI,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI;IACrB;IAEA,UAAU;QACT,OAAO,IAAI,CAAC,KAAK;IAClB;IAEA,SAAS,CAAC,EAAE;QACX,IAAI,CAAC,KAAK,GAAG;IACd;IAEA,oBAAoB,GAAG,EAAE,IAAI,EAAE;QAC9B,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,4BAA4B,GAAG,EAAE,IAAI,CAAC,iBAAiB,GAAG,CAAC,EAAC,WAAW;IAC3F;IAEA,SAAS,oBAAoB,EAAE;QAC9B,IAAI,IAAI,KAAK,CAAC,SAAS;QACvB,EAAE,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG;QAChC,OAAO;IACR;IAEA,OAAO,cAAc,IAAI,EAAE,WAAW,EAAE,CAAC,EAAE,SAAS,EAAE,KAAK,EAAE;QAC5D,IAAI,SAAS,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE;QAC7B,OAAO,KAAK,CAAC;QACb,IAAI,SAAS,OAAO,SAAS;QAC7B,IAAI,SAAS,OAAO,cAAc;QAClC,mEAAmE;QACnE,uEAAuE;QACvE,IAAI,UAAU,iBAAiB,MAAM,QAAQ,QAAQ;QACrD,IAAI,GAAA,8BAAmB,EACtB,CAAA,GAAA,kBAAO,AAAD,EAAE,cAAc,CAAC;QAExB,QAAQ,IAAI,CAAC;QACb,QAAQ,QAAQ,CAAC,CAAC,CAAC;QACnB,IAAI,UAAU,QAAQ,QAAQ,CAAC,CAAA,GAAA,uBAAQ,AAAD;QACtC,iEAAiE;QACjE,8DAA8D;QAC9D,4DAA4D;QAC5D,sBAAsB;QACtB,QAAQ,qBAAqB,CAAC,CAAA,GAAA,uBAAQ,AAAD;QACrC,QAAQ,iBAAiB,CAAC,MAAM;QAChC,CAAA,GAAA,gCAAe,AAAD,EAAE,MAAM,aAAa;IACpC;IAEA,OAAO,aAAa,SAAS,EAAE,SAAS,EAAE;QACzC,0DAA0D;QAC1D,IAAI,QAAQ,CAAA,GAAA,uBAAQ,AAAD,EAAE,aAAa,CAAC;QACnC,QAAQ,iBAAiB,CAAC,WAAW;IACtC;IAEA,OAAO,kBAAkB,IAAI,EAAE,GAAG,EAAE;QACnC,CAAA,GAAA,uBAAQ,AAAD,EAAE,IAAI,CAAC,MAAM;IACrB;IAEA,cAAc,OAAO,EAAE;QACtB,OAAO;IACR;IAEA,UAAU;QACT,OAAO,KAAK,CAAC,YAAY,CAAA,GAAA,YAAI,AAAD,EAAE,WAAW;IAC1C;AACD;AAEA,SAAS,iBAAiB,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS;IACxD,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,WAAW,OAAO,CAAA,GAAA,kBAAQ,AAAD,EAAE;IAChD,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI,QAAQ,MAAM,QAAQ,QAAQ;AACxD;;;ACrKA;;;;;;;;;;;;;;;AAeA;;AA2GA,uDAAS;AAAT,qDAA4B;AAA5B,+CAA6C;AAzG7C,IAAI,iBAAiB;AAErB,IAAI,OAAO,CAAC;AACZ,IAAI,WAAW,EAAE;AAEjB,SAAS,kBAAkB,GAAG;IAC7B,iBAAiB;IACjB,IAAI,CAAC,eAAe,GAAG,EAAE;IACzB,SAAS,IAAI,CAAC;AACf;AAEA,SAAS,gBAAgB,IAAI,EAAE,MAAM,EAAE,IAAI;IAC1C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC;QACzB,MAAK;QACL,MAAK;QACL,QAAO;IACR;AACD;AAEA,SAAS,WAAW,CAAC;IACpB,IAAI,OAAO,SAAS,aAAa,CAAC;IAClC,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,EAAE,WAAW,CAAC;IACd,OAAO;AACR;AAEA,SAAS,SAAS,CAAC,EAAE,QAAQ;IAC5B,IAAI,OAAO,SAAS,aAAa,CAAC;IAClC,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,KAAK,SAAS,GAAG;IACjB,EAAE,WAAW,CAAC;IACd,OAAO;AACR;AAEA,SAAS,iBAAiB,CAAC,EAAE,QAAQ,EAAE,MAAM;IAC5C,IAAI,OAAO,SAAS,aAAa,CAAC;IAClC,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,IAAI,QACH,KAAK,SAAS,GAAG;SAEjB,KAAK,SAAS,GAAG;IAElB,EAAE,WAAW,CAAC;IACd,OAAO;AACR;AAEA,SAAS,YAAY,CAAC,EAAE,QAAQ;IAC/B,IAAI,OAAO,SAAS,aAAa,CAAC;IAClC,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,KAAK,SAAS,GAAG;IACjB,EAAE,WAAW,CAAC;IACd,OAAO;AACR;AAEA,SAAS,WAAW,QAAQ;IAC3B,IAAI,OAAO,SAAS,aAAa,CAAC;IAClC,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,KAAK,SAAS,GAAG;IACjB,OAAO;AACR;AAEA,SAAS,cAAc,QAAQ;IAC9B,IAAI,OAAO,SAAS,aAAa,CAAC;IAClC,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,KAAK,SAAS,CAAC,GAAG,CAAC;IACnB,KAAK,SAAS,GAAG;IACjB,OAAO;AACR;AAEA,SAAS,WAAW,CAAC,EAAE,IAAI;IAC1B,YAAY,GAAG;IACf,WAAW;AACZ;AAEA,SAAS,UAAU,CAAC,EAAE,IAAI;IACzB,IAAI,OAAO,SAAS,GAAG;IACvB,KAAK,OAAO,CAAC,cAAc,KAAK,IAAI;IACpC,IAAI,KAAK,MAAM,CAAC,MAAM,GAAG,GAAG;QAC3B,IAAI,KAAK,iBAAiB,GAAG;QAC7B,IAAI,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,CAAC,MAAM,EAAE,IACtC,GAAG,WAAW,CAAC,WAAW,KAAK,MAAM,CAAC,EAAE;IAE1C;IACA,IAAI,OAAO,KAAK,KAAK,IAAI;IACzB,OAAO,KAAK,OAAO,CAAC,oBAAoB;IACxC,OAAO,KAAK,OAAO,CAAC,mBAAmB;IACvC,iBAAiB,GAAG,MAAM;IAC1B,WAAW;IACX,WAAW;AACZ;AAEA,SAAS;IACR,IAAI,MAAM,SAAS,cAAc,CAAC;IAClC,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAE,IAAK;QACzC,IAAI,MAAM,QAAQ,CAAC,EAAE;QACrB,WAAW,KAAK;QAChB,IAAI,OAAO,IAAI,CAAC,IAAI;QACpB,IAAK,IAAI,IAAI,GAAI,IAAI,KAAK,MAAM,EAAG,IAClC,UAAU,KAAK,IAAI,CAAC,EAAE;IAExB;AACD;;;ACvHA;;;;;;;;;;;;;;;AAeA;;AAiEA,wDACC;AADD,qDAEC;AAFD,qDAGC;AAHD,uDAIC;AAlED;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;CAKC,GACD,SAAS,mBAAmB,CAAC;IAE5B,IAAI,IAAI,CAAA,GAAA,8BAAiB,AAAD,EAAE,EAAE,MAAM,IAAI,CAAA,GAAA,uBAAQ,AAAD;IAC7C,IAAI,SAAM,YAAY,CAAC,IAAI;QAC1B,SAAM,IAAI;QACV,IAAI,CAAC,CAAA,GAAA,6BAAW,AAAD,EAAE,cAAc,EAAE;YAChC,CAAA,GAAA,0BAAW,AAAD,EAAE,6BAA6B,CAAC,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;YACzD;QACD;IACD;IAEA,IAAI,GACH,CAAA,GAAA,0BAAW,AAAD,EAAE,mBAAmB,CAAC,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;AAEjD;AAEA;;;;;;CAMC,GACD,SAAS,gBAAgB,CAAC;IACzB,IAAI,IAAI,CAAA,GAAA,8BAAiB,AAAD,EAAE,EAAE,MAAM,IAAI,CAAA,GAAA,uBAAQ,AAAD;IAC7C,IAAI,SAAM,YAAY,CAAC,IAAI;QAC1B,SAAM,IAAI;QACV,CAAA,GAAA,0BAAW,AAAD,EAAE,6BAA6B,CAAC,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;IAC1D;IAEA,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC;AAC5C;AAEA,SAAS,gBAAgB,CAAC;IACzB,IAAI,IAAI,CAAA,GAAA,8BAAiB,AAAD,EAAE,EAAE,MAAM,IAAI,CAAA,GAAA,uBAAQ,AAAD;IAC7C,IAAI,GACH,CAAA,GAAA,0BAAW,AAAD,EAAE,mBAAmB,CAAC,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;AAEjD;AAEA,mBAAmB;AACnB,SAAS,kBAAkB,GAAG;IAC7B,IAAI,IAAI,CAAA,GAAA,8BAAiB,AAAD,EAAE,KAAK,CAAA,GAAA,uBAAQ,AAAD;IACtC,OAAO;AACR;;;AC9EA;;;;;;;;;;;;;;;AAeA;;AAoNA,yDAAS;AAlNT;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAWA,SAAS;IAER,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,mBACA;QAAE;KAAS,EACX,SAAS,gBAAgB,GAAG,EAAE,oBAAoB;QACjD,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,OAAO,CAAA,GAAA,sBAAO,AAAD,GAAG;YACnB,CAAA,GAAA,cAAQ,AAAD;YACP,OAAO,CAAA,GAAA,mBAAY,AAAD;QACnB,OAAO;YACN,IAAI,MAAM;YACV,OAAO;QACR;IACD,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;QAAO;KAAU,EACnB,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,SAAS,IAAI,EAAE,CAAC;QACpB,IAAI,UAAU,CAAA,GAAA,sBAAO,AAAD,GACnB,qDAAqD;QACrD,2DAA2D;QAC3D,SAAS;QAEV,GAAG,WAAW,CAAC;QACf,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;QAAO;KAAU,EACnB,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,SAAS,IAAI,EAAE,CAAC;QACpB,IAAI,UAAU,CAAA,GAAA,sBAAO,AAAD,GACnB,qDAAqD;QACrD,2DAA2D;QAC3D,SAAS;QAEV,GAAG,WAAW,CAAC;QACf,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,eACA;QAAE;KAAM,EACR,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC7C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,GAAG,UAAU;QACvB,IAAI,IAAI,CAAA,GAAA,qBAAa,AAAD,EAAE;QACtB,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,sBACA;QAAE;KAAM,EACR,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC9C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,QAAQ,CAAA,GAAA,8BAAiB,AAAD,EAAE,IAAI;QAClC,IAAI,SAAM,eAAe,CAAC,QACzB,MAAM,WAAW,CAAC;YACjB,QAAQ;gBACP,IAAI,IAAI,MAAM,UAAU,CAAC;gBACzB,IAAI,SAAM,YAAY,CAAC,IAAI;oBAC1B,IAAI,IAAI,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO;oBAC3B,EAAE,YAAY,CAAC,CAAA,GAAA,sBAAS,AAAD,EAAE,WAAW,mCAAmC;gBACxE;YACD;QACD;QAED,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,oBACA,EAAG,EACH,SAAS,gBAAgB,GAAG,EAAE,oBAAoB;QACjD,IAAI,KAAK,CAAA,GAAA,uCAAsB,AAAD;QAC9B,IAAI,MAAM,IAAI,CAAA,GAAA,sDAAoC,AAAD;QACjD,GAAG,GAAG,CAAC;QACP,GAAG,QAAQ;QACX,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;KAAQ,EACV,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,KAAK,CAAA,GAAA,uCAAsB,AAAD;QAC9B,IAAI,MAAM,IAAI,CAAA,GAAA,qDAAmC,AAAD,EAAE;QAClD,GAAG,GAAG,CAAC;QACP,GAAG,QAAQ;QACX,IAAI,OAAO,CAAA,GAAA,sBAAO,AAAD,GAChB,GAAG,WAAW,CAAC;QAEhB,OAAO;IACR,GACA;IAED,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,gBAAgB;IAIrC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,kBACA;QAAE;KAAM,EACR,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,KAAK,CAAA,GAAA,uCAAsB,AAAD;QAC9B,IAAI,MAAM,IAAI,CAAA,GAAA,kDAAgC,AAAD,EAAE;QAC/C,GAAG,WAAW,CAAC;QACf,GAAG,GAAG,CAAC;QACP,GAAG,QAAQ;QACX,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,kBACA;QAAE;KAAS,EACX,SAAS,cAAc,GAAG,EAAE,oBAAoB;QAC/C,IAAI,UAAU,IAAI,EAAE,CAAC;QACrB,IAAI,OAAO,QAAQ,aAAa;QAChC,IAAI,KAAK,CAAA,GAAA,uCAAsB,AAAD;QAC9B,GAAG,WAAW,CAAC;QACf,IAAI,MAAM,IAAI,CAAA,GAAA,kDAAgC,AAAD,EAAE;QAC/C,GAAG,GAAG,CAAC;QACP,GAAG,QAAQ;QACX,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,6BACA;QAAE;KAAS,EACX,SAAS,wBAAwB,GAAG,EAAE,oBAAoB;QACzD,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,KAAK,CAAA,GAAA,uCAAsB,AAAD;QAC9B,GAAG,WAAW,CAAC;QACf,IAAI,MAAM,IAAI,CAAA,GAAA,8DAA4C,AAAD,EAAE;QAC3D,GAAG,GAAG,CAAC;QACP,GAAG,QAAQ;QACX,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,wBACA;QAAE;KAAO,EACT,SAAS,mBAAmB,GAAG,EAAE,oBAAoB;QACpD,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,KAAK,CAAA,GAAA,uCAAsB,AAAD;QAC9B,GAAG,WAAW,CAAC;QACf,IAAI,MAAM,IAAI,CAAA,GAAA,yDAAuC,AAAD,EAAE;QACtD,GAAG,GAAG,CAAC;QACP,GAAG,QAAQ;QACX,OAAO;IACR,GACA;AAEF;;;ACjOA;;;;;;;;;;;;;;;AAeA;;AAqKA,2DAAS;AAnKT;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;;CAEC,GACD,SAAS;IACR,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,gBACA;QAAE;QAAQ;KAAQ,EAClB,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC9C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,OAAO,IAAI,EAAE,CAAC;QAElB,IAAI,IAAI,AAAC,QAAQ,CAAA,GAAA,sBAAO,AAAD,IAAK,MAAM,KAAK,aAAa;QACpD,IAAI,IAAI,AAAC,QAAQ,CAAA,GAAA,sBAAO,AAAD,IAAK,MAAM,KAAK,aAAa;QAEpD,IAAI,IAAI,iBAAiB,GAAG;QAC5B,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,mBACA;QAAE;QAAQ;KAAW,EACrB,SAAS,gBAAgB,GAAG,EAAE,oBAAoB;QACjD,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,IAAI,EAAE,CAAC;QAEnB,IAAI,CAAC,KAAK,gBAAgB,CAAC,QAC1B,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,oEAAoE,CAAC;QAGlG,uEAAuE;QACvE,IAAI,MAAM,WAAW,MAAM,GAC1B,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,oEAAoE,CAAC;QAGlG,IAAI,aAAa,KAAK,gBAAgB,CAAC;QAEvC,KAAK,cAAc,CAAC;QAEpB,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAE;QAAQ;QAAW;QAAQ;QAAQ;QAAQ;KAAO,EACpD,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,IAAI,EAAE,CAAC;QAEnB,IAAI,CAAC,KAAK,gBAAgB,CAAC,QAC1B,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,sEAAsE,CAAC;QAGpG,IAAI,aAAa,KAAK,gBAAgB,CAAC;QAEvC,IAAI,KAAK,IAAI,EAAE,CAAC,MAAM,aAAa;QACnC,IAAI,KAAK,IAAI,EAAE,CAAC,MAAM,aAAa;QACnC,IAAI,KAAK,IAAI,EAAE,CAAC,MAAM,aAAa;QACnC,IAAI,KAAK,IAAI,EAAE,CAAC,MAAM,aAAa;QAEnC,KAAK,QAAQ,CAAC,YAAY,IAAI,IAAI,IAAI;QAEtC,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,kBACA;QAAE;QAAQ;QAAW;QAAO;QAAO;QAAO;KAAO,EACjD,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAChD,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,IAAI,EAAE,CAAC;QAEnB,IAAI,CAAC,KAAK,gBAAgB,CAAC,QAC1B,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,2EAA2E,CAAC;QAGzG,IAAI,aAAa,KAAK,gBAAgB,CAAC;QAEvC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QAEjC,KAAK,QAAQ,CAAC,YAAY,GAAG,GAAG,GAAG;QAEnC,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;QAAQ;QAAW;QAAO;KAAM,EAClC,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAChD,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,IAAI,EAAE,CAAC;QAEnB,IAAI,CAAC,KAAK,gBAAgB,CAAC,QAC1B,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,qEAAqE,CAAC;QAGnG,IAAI,aAAa,KAAK,gBAAgB,CAAC;QAEvC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QAEjC,KAAK,OAAO,CAAC,YAAY,GAAG;QAE5B,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;QAAQ;QAAO;KAAM,EACvB,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAChD,IAAI,OAAO,IAAI,EAAE,CAAC;QAElB,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QAEjC,IAAI,aAAa,KAAK,OAAO,CAAC,GAAG;QAEjC,IAAI,IAAI,CAAA,GAAA,mBAAY,AAAD;QACnB,EAAE,WAAW,CAAC,CAAA,GAAA,2BAAgB,AAAD,EAAE,UAAU,CAAC,EAAE;QAC5C,EAAE,WAAW,CAAC,CAAA,GAAA,2BAAgB,AAAD,EAAE,UAAU,CAAC,EAAE;QAC5C,EAAE,WAAW,CAAC,CAAA,GAAA,2BAAgB,AAAD,EAAE,UAAU,CAAC,EAAE;QAC5C,EAAE,WAAW,CAAC,CAAA,GAAA,2BAAgB,AAAD,EAAE,UAAU,CAAC,EAAE;QAE5C,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,uBACA;QAAE;KAAO,EACT,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAChD,IAAI,OAAO,IAAI,EAAE,CAAC;QAElB,KAAK,iBAAiB;QACtB,OAAO;IACR,GACA;AAEF;;;AClLA;;;;;;;;;;;;;;;AAeA;;AA2NA,6CAAS;AAAT,sDAAkB;AAzNlB;AAEA;AACA;AACA;AAGA;;CAEC,GACD,MAAM,gBAAgB,CAAA,GAAA,UAAG,AAAD;IACvB,YAAY,CAAC,EAAE,CAAC,CAAE;QACjB,KAAK;QACL,IAAI,CAAC,GAAG,IAAI;QACZ,IAAI,CAAC,GAAG,IAAI;QACZ,IAAI,CAAC,KAAK,GAAG;QACb,IAAI,CAAC,MAAM,GAAG;QAEd,IAAI,CAAC,MAAM,GAAG,SAAS,aAAa,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,SAAS,KAAK,IAAI,CAAC,KAAK;QACjD,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,KAAK,IAAI,CAAC,MAAM;IACpD;IAEA,cAAc;QACb,OAAO;IACR;IAEA,WAAW;QACV,IAAI,IAAI,iBAAiB,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM;QAChD,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACR;IAEA,aAAa,GAAG,EAAE;QACjB,KAAK,CAAC,aAAa;QACnB,IAAI,MAAM,CAAC,UAAU,CAAC,MAAM,SAAS,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG;IACvD;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,IAAI,CAAC,UAAU;QAEvB,OAAO,KAAK,CAAC,SAAS;IACvB;IAEA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,KAAK,CAAC,WAAW,YAAY,aAAa;QAC1C,IAAI,UAAU,WAAW,UAAU;QACnC,QAAQ,SAAS,CAAC,GAAG,CAAC;QACtB,QAAQ,WAAW,CAAC,IAAI,CAAC,MAAM;IAChC;IAEA,+CAA+C;IAC/C,MAAM,CAAC,EAAE;QACR,IAAI,IAAI,EAAE,QAAQ,CAAC;QACnB,IAAI,EAAE,MAAM,IAAI,GACf,IAAI,MAAM;QAEX,OAAO;IACR;IAEA,iBAAiB,CAAC,EAAE;QACnB,IAAI,KAAK,EAAE,WAAW;QACtB,IAAI,MAAM,KAAK,MAAM,GAAG,OAAO;QAC/B,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,WAAW,IAAI,IAAK;YACzC,IAAI,IAAI,EAAE,UAAU,CAAC;YACrB,IAAI,CAAC,SAAM,SAAS,CAAC,IACpB,OAAO;QAET;QACA,OAAO;IACR;IAEA,iBAAiB,CAAC,EAAE;QACnB,IAAI,SAAS,EAAE;QACf,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,WAAW,IAAI,IAAK;YACzC,IAAI,IAAI,EAAE,UAAU,CAAC;YACrB,OAAO,IAAI,CAAC,EAAE,aAAa;QAC5B;QACA,OAAO;IACR;IAGA,iBAAiB,KAAK,EAAE;QACvB,IAAI,GAAG,GAAG,GAAG;QACb,IAAI,MAAM,MAAM,IAAI,GAAG;YACtB,IAAI,KAAK,CAAC,EAAE,GAAG;YACf,IAAI,KAAK,CAAC,EAAE;YACZ,IAAI,KAAK,CAAC,EAAE;YACZ,IAAI,KAAK,CAAC,EAAE;QACb,OAAO;YACN,IAAI;YACJ,IAAI,KAAK,CAAC,EAAE;YACZ,IAAI,KAAK,CAAC,EAAE;YACZ,IAAI,KAAK,CAAC,EAAE;QACb;QACA,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QACjC,IAAI,WAAW,GAAG;QAClB,IAAI,SAAS,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC;IAClE;IAEA,mBAAmB,KAAK,EAAE;QACzB,IAAI,GAAG,GAAG,GAAG;QACb,IAAI,MAAM,MAAM,IAAI,GAAG;YACtB,IAAI,KAAK,CAAC,EAAE,GAAG;YACf,IAAI,KAAK,CAAC,EAAE;YACZ,IAAI,KAAK,CAAC,EAAE;YACZ,IAAI,KAAK,CAAC,EAAE;QACb,OAAO;YACN,IAAI;YACJ,IAAI,KAAK,CAAC,EAAE;YACZ,IAAI,KAAK,CAAC,EAAE;YACZ,IAAI,KAAK,CAAC,EAAE;QACb;QACA,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QACjC,IAAI,WAAW,GAAG;QAClB,IAAI,WAAW,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC;IACpE;IAEA,eAAe,KAAK,EAAE;QACrB,IAAI,IAAI,KAAK,CAAC,EAAE;QAChB,IAAI,IAAI,KAAK,CAAC,EAAE;QAChB,IAAI,IAAI,KAAK,CAAC,EAAE;QAChB,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QACjC,IAAI,SAAS,GAAG,MAAM,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,KAAK,CAAC;QACjE,IAAI,QAAQ,CAAC,GAAG,GAAG,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM;IAC3C;IAEA,SAAS,KAAK,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC/B,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QACjC,IAAI,CAAC,kBAAkB,CAAC;QACxB,IAAI,SAAS;QACb,IAAI,MAAM,CAAC,IAAI;QACf,IAAI,MAAM,CAAC,IAAI;QACf,IAAI,MAAM;IACX;IAEA,SAAS,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QAC3B,IAAI,CAAC,gBAAgB,CAAC;QACtB,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QACjC,IAAI,QAAQ,CAAC,GAAG,GAAG,GAAG;IACvB;IAEA,QAAQ,KAAK,EAAE,CAAC,EAAE,CAAC,EAAE;QACpB,IAAI,CAAC,gBAAgB,CAAC;QACtB,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QACjC,IAAI,QAAQ,CAAC,GAAG,GAAG,GAAG;IACvB;IAEA,QAAQ,CAAC,EAAE,CAAC,EAAE;QACb,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;QACjC,IAAI,UAAU,IAAI,YAAY,CAAC,GAAG,GAAG,GAAG;QACxC,IAAI,IAAI,QAAQ,IAAI,CAAC,EAAE;QACvB,IAAI,IAAI,QAAQ,IAAI,CAAC,EAAE;QACvB,IAAI,IAAI,QAAQ,IAAI,CAAC,EAAE;QACvB,IAAI,IAAI,QAAQ,IAAI,CAAC,EAAE;QACvB,OAAO;YACN;YAAG;YAAG;YAAG;SACT;IACF;IAEA,oBAAoB;QACnB,UAAU,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,CAAA;YAC/B,IAAI,KAAK,MAAM,IAAI,GAAG;YACtB,IAAI,OAAO,IAAI,CAAC,EAAE;YAClB,IAAI,KAAK,KAAK,CAAC,EAAE,IAAI,aAAa;YAClC,KAAK,OAAO,CAAC,aAAa,IAAI,CAAC,CAAA;gBAC9B,IAAI,QAAQ,SAAS,aAAa,CAAC;gBACvB,MAAM,GAAG,GAAG,IAAI,eAAe,CAAC;gBAChC,IAAI,OAAO,SAAS,oBAAoB,CAAC,OAAO,CAAC,EAAE;gBACnD,KAAK,WAAW,CAAC;gBACjB,IAAI,IAAI,IAAI;gBACZ,WAAW,CAAA;oBACtB,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC;oBACjC,IAAI,SAAS,CAAC,OAAO,GAAG;oBACxB,KAAK,WAAW,CAAC;gBACN,CAAA,EAAE,IAAI,CAAC,IAAI,GAAG;YAC3B;QACD;IACD;IAEA,aAAa;QACZ,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,iBAAiB,GAAG,QAAQ,EAAE,IAAI,CAAC,4BAA4B,GAAG,EAAE,IAAI,CAAC,iBAAiB,GAAG,CAAC;IAC/G;IAEA,uBAAuB,IAAI,EAAE,CAC7B;IAEA,uBAAuB;QACtB,OAAO;IACR;IAGA,oBAAoB;QACnB,OAAO;IACR;IAEA,cAAc,OAAO,EAAE;QACtB,OAAO,CACP;IACD;IAEA,UAAU;QACT,OAAO,KAAK,CAAC,YAAY,CAAA,GAAA,YAAI,AAAD,EAAE,WAAW;IAC1C;AACD;AAEA,SAAS,iBAAiB,CAAC,EAAE,CAAC;IAC7B,IAAI,eAAe,CAAA,GAAA,YAAI,AAAD,EAAE,WAAW,KAAK,IAAI,IAAI,CAAA,GAAA,YAAI,AAAD,EAAE,sBAAsB;IAC3E,IAAI,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,eACpB,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC;OACtB,EAAE,CAAA,GAAA,YAAI,AAAD,EAAE,KAAK,GAAG,CAAC;IAEtB,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI,QAAQ,GAAG;AACrC;;;ACvOA;;;;;;;;;;;;;;;AAeA;;AA4UA,yDAAS;AA1UT;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA,SAAS;IAER,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;KAAU,EACZ,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,WAAW,MAAM,GACxB,OAAO,CAAA,GAAA,mBAAY,AAAD;aAElB,OAAO,IAAI,UAAU,CAAC,IAAI,WAAW,KAAK;IAE5C,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;KAAU,EACZ,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,WAAW,MAAM,GACxB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE5B,OAAO,IAAI,aAAa;IACzB,GACA;IAED,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,QAAQ;IAC7B,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,SAAS;IAG9B,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;KAAU,EACZ,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,EAAE,WAAW,MAAM,GACtB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE5B,IAAI,SAAS,EAAE,QAAQ,CAAC;QACxB,EAAE,iBAAiB,CAAC;QACpB,OAAO;IACR,GACA;IAED,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,QAAQ;IAC7B,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,QAAQ;IAG7B,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;QAAO;KAAU,EACnB,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,SAAS,IAAI,QAAQ,CAAC;QAC1B,IAAI,kBAAkB,CAAC,KAAK;QAC5B,OAAO;IACR,GACA;IAED,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,QAAQ;IAC7B,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,aAAa;IAGlC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;KAAU,EACZ,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,EAAE,WAAW,MAAM,GACtB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE5B,IAAI,IAAI,EAAE,UAAU,CAAC;QACrB,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC;QAC3B,OAAO;IACR,GACA;IAED,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,YAAY;IACjC,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,cAAc;IACnC,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,aAAa;IAGlC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;KAAU,EACZ,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,EAAE,WAAW,MAAM,GACtB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE5B,EAAE,WAAW,CAAC,EAAE,UAAU,CAAC;QAC3B,OAAO;IACR,GACA;IAED,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,YAAY;IACjC,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,aAAa;IAClC,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,aAAa;IAGlC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;QAAO;KAAU,EACnB,SAAS,cAAc,GAAG,EAAE,oBAAoB;QAC/C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,YAAY,CAAC,IAAI,EAAE,CAAC;QACxB,OAAO;IACR,GACA;IAED,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,aAAa;IAClC,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,aAAa;IAClC,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,kBAAkB;IAIvC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;KAAO,EACT,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,OAAO,IAAI,EAAE,CAAC,OAAO,QAAQ;IAC9B,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,MACA;QAAE;QAAO;KAAO,EAChB,SAAS,IAAI,GAAG,EAAE,oBAAoB;QACrC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,IAAI,KAAK,MAAM,IAAI,KAAK;IAC9C,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,eACA;QAAE;KAAS,EACX,SAAS,IAAI,GAAG,EAAE,oBAAoB;QACrC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,IAAI,WAAW;IACxC,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;QAAS;KAAM,EACjB,SAAS,IAAI,GAAG,EAAE,oBAAoB;QACrC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,IAAI,aAAa;QACzB,IAAI,IAAI,KAAK,KAAK,IAAI,WAAW,IAChC,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,0CAA0C,EAAE,IAAI,WAAW,GAAG,CAAC;QAE5F,OAAO,IAAI,UAAU,CAAC;IACvB,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;QAAO;KAAO,EAChB,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,eAAe,SAAS,KAAK,EAAE,KAAK;YACvC,IAAI,MAAM,WAAW,MAAM,MAAM,WAAW,IAAI,OAAO;YACvD,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,WAAW,IAAI,IAAK;gBAC7C,IAAI,KAAK,MAAM,UAAU,CAAC;gBAC1B,IAAI,KAAK,MAAM,UAAU,CAAC;gBAC1B,IAAI,CAAC,aAAa,IAAI,KACrB,OAAO;YAET;YACA,OAAO;QACR;QACA,IAAI,eAAe,SAAS,CAAC,EAAE,CAAC;YAC/B,IAAI,SAAM,MAAM,CAAC,MAAM,SAAM,MAAM,CAAC,IACnC,OAAO,EAAE,aAAa,MAAM,EAAE,aAAa;iBACrC,IAAI,SAAM,SAAS,CAAC,MAAM,SAAM,SAAS,CAAC,IAChD,OAAO,EAAE,KAAK,MAAM,EAAE,KAAK;iBACrB,IAAI,SAAM,SAAS,CAAC,MAAM,SAAM,SAAS,CAAC,IAChD,OAAO,EAAE,iBAAiB,MAAM,EAAE,iBAAiB;iBAC7C,IAAI,SAAM,SAAS,CAAC,MAAM,SAAM,SAAS,CAAC,IAChD,OAAO,EAAE,aAAa,MAAM,EAAE,aAAa;iBACrC,IAAI,SAAM,OAAO,CAAC,MAAM,SAAM,OAAO,CAAC,IAC5C,OAAO,EAAE,aAAa,MAAM,EAAE,aAAa;iBACrC,IAAI,SAAM,SAAS,CAAC,MAAM,SAAM,SAAS,CAAC,IAChD,OAAO,EAAE,aAAa,MAAM,EAAE,aAAa;iBAGrC,IAAI,SAAM,OAAO,CAAC,MAAM,SAAM,SAAS,CAAC,IAC9C,OAAO,EAAE,aAAa,MAAM,EAAE,aAAa;iBACrC,IAAI,SAAM,SAAS,CAAC,MAAM,SAAM,OAAO,CAAC,IAC9C,OAAO,EAAE,aAAa,MAAM,EAAE,aAAa;iBAGrC,IAAI,SAAM,QAAQ,CAAC,MAAM,SAAM,QAAQ,CAAC,IAC9C,OAAO,EAAE,OAAO,MAAM,EAAE,OAAO;iBACzB,IAAI,SAAM,WAAW,CAAC,MAAM,SAAM,WAAW,CAAC,IACpD,OAAO,EAAE,OAAO,MAAM,EAAE,OAAO;iBACzB,IAAI,SAAM,KAAK,CAAC,MAAM,SAAM,KAAK,CAAC,IACxC,OAAO;iBAGD,IAAI,SAAM,KAAK,CAAC,MAAM,SAAM,KAAK,CAAC,IACxC,OAAO,aAAa,GAAG;iBACjB,IAAI,SAAM,SAAS,CAAC,MAAM,SAAM,SAAS,CAAC,IAChD,OAAO,aAAa,GAAG;iBACjB,IAAI,SAAM,QAAQ,CAAC,MAAM,SAAM,QAAQ,CAAC,IAC9C,OAAO,aAAa,GAAG;iBACjB,IAAI,SAAM,KAAK,CAAC,MAAM,SAAM,KAAK,CAAC,IACxC,OAAO,aAAa,GAAG;iBACjB,IAAI,SAAM,MAAM,CAAC,MAAM,SAAM,MAAM,CAAC,IAC1C,OAAO,aAAa,GAAG;iBACjB,IAAI,SAAM,MAAM,CAAC,MAAM,SAAM,MAAM,CAAC,IAC1C,OAAO,aAAa,GAAG;iBACjB,IAAI,SAAM,iBAAiB,CAAC,MAAM,SAAM,iBAAiB,CAAC,IAChE,OAAO,aAAa,GAAG;iBAEvB,OAAO;QAET;QACA,IAAI,SAAS,aAAa,KAAK;QAC/B,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;IACtB,GACA;IAGD,oDAAoD;IACpD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;KAAO,EACT,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,YAAY,CAAA,GAAA,8BAAiB,AAAD,EAAE,MAAM;QACxC,0CAA0C;QAC1C,0BAA0B;QAC1B,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;KAAQ,EACV,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,OAAO,IAAI,EAAE,CAAC;IACf,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA;QAAE;KAAU,EACZ,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC7C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,EAAE,aAAa;QACf,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;KAAU,EACZ,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,EAAE,aAAa;QACf,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,gBACA;QAAE;KAAU,EACZ,SAAS,cAAc,GAAG,EAAE,oBAAoB;QAC/C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,EAAE,aAAa;QACf,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,WACA;QAAE;KAAO,EACT,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,EAAE,UAAU,CAAC;QACb,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAE;KAAO,EACT,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,EAAE,UAAU,CAAC;QACb,OAAO;IACR,GACA;AAEF;;;ACzVA;;;;;;;;;;;;;;;AAeA;;AA8HA,4DAAS;AA5HT;AACA;AACA;AAEA;AAMA;AAEA,SAAS;IAER,4BAA4B;IAE5B,+DAA+D;IAE/D,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,qBACA;QAAE;QAAQ;KAAa,EACvB,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,mBAAmB;QACnB,IAAI,UAAU,IAAI,EAAE,CAAC;QACrB,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,MAAM,CAAA,GAAA,0BAAgB,AAAD,EAAE,QAAQ,iBAAiB,IAAI;QACxD,CAAA,GAAA,qCAAgB,AAAD,EAAE,cAAc,CAAC,KAAK,EAAE,OAAO;QAC9C,EAAE,cAAc,CAAC;QACjB,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,oBACA;QAAE;KAAQ,EACV,SAAS,gBAAgB,GAAG,EAAE,oBAAoB;QACjD,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,eAAe,IAAI,CAAA,GAAA,mCAAc,AAAD,EAAE,CAAA,GAAA,0BAAgB,AAAD,EAAE,IAAI,iBAAiB,IAAI;QAChF,IAAI,OAAO,CAAA,GAAA,6BAAiB,AAAD,EAAE;QAC7B,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,qBACA;QAAE;KAAO,EACT,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,eAAe,IAAI,CAAA,GAAA,qCAAgB,AAAD,EAAE,IAAI,KAAK;QACjD,IAAI,OAAO,CAAA,GAAA,6BAAiB,AAAD,EAAE;QAC7B,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,iBACA;QAAE;KAAO,EACT,SAAS,gBAAgB,GAAG,EAAE,oBAAoB;QACjD,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,eAAe,IAAI,CAAA,GAAA,iCAAY,AAAD,EAAE,IAAI,WAAW;QACnD,OAAO,CAAA,GAAA,6BAAiB,AAAD,EAAE;IAC1B,GACA;AAGD,yBAAyB;AACzB,sBAAsB;AACtB,eAAe;AACf,wDAAwD;AACxD,yBAAyB;AACzB,mCAAmC;AACnC,gDAAgD;AAChD,0DAA0D;AAC1D,MAAM;AACN,gEAAgE;AAChE,4CAA4C;AAC5C,MAAM;AACN,kGAAkG;AAClG,KAAK;AAEL,6BAA6B;AAC7B;;;;;;;;;;;;;;;;;CAiBA,GAEA,yBAAyB;AACzB,gCAAgC;AAChC,eAAe;AACf,0DAA0D;AAC1D,yBAAyB;AACzB,sDAAsD;AACtD,6CAA6C;AAE7C,gDAAgD;AAChD,qCAAqC;AACrC,MAAM;AACN,cAAc;AACd,MAAM;AACN,kHAAkH;AAClH,KAAK;AACN;;;AC1IA;;;;;;;;;;;;;;;AAeA;;AAgKA,8CAAS;AAAT,uDAAmB;AA9JnB;AAEA;AACA;AACA;AAEA,MAAM,iBAAiB,CAAA,GAAA,4BAAY,AAAD;IACjC,YAAY,YAAY,CAAE;QACzB,YAAY;QAEZ,KAAK;QACL,IAAI,CAAC,IAAI,GAAG;QACZ,IAAI,CAAC,WAAW,GAAG,MAAM,SAAS;QAClC,IAAI,CAAC,YAAY,GAAG,EAAE;IACvB;IAEA,eAAe,CAAC,EAAE;QACjB,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAA,GAAA,0BAAgB,AAAD,EAAE,EAAE,YAAY,IAAI;IAC3D;IAEA,UAAU;QACT,OAAO,IAAI,CAAC,IAAI;IACjB;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,WAAW,MACd,OAAO,CAAC,UAAU,CAAC;QAEpB,OAAO,KAAK,CAAC,SAAS;IACvB;IAEA,oBAAoB,GAAG,EAAE,IAAI,EAAE;QAC9B,OAAO,IAAI,CAAC,uBAAuB,CAAC,KAAK,cAAc;IACxD;IAEA,aAAa;QACZ,OAAO,CAAC,EAAE,IAAI,CAAC,iBAAiB,GAAG,EAAE,IAAI,CAAC,4BAA4B,GAAG,EAAE,IAAI,CAAC,WAAW,GAAG,EAAE,IAAI,CAAC,iBAAiB,GAAG,EAAE,KAAK,CAAC,iBAAiB,MAAM,EAAE,IAAI,CAAC,SAAS,GAAG,CAAC;IAC7K;IAEA,uBAAuB,IAAI,EAAE;QAC5B,IAAI,CAAC,WAAW,GAAG;IACpB;IAEA,qBAAqB,IAAI,EAAE;QAC1B,OAAO,IAAI,CAAC,WAAW;IACxB;IAEA,SAAS,GAAG,EAAE;QACb,OAAO,IAAI;IACZ;IAEA,SAAS,OAAO,EAAE;QACjB,IAAI,IAAI;QACR,IAAI,CAAC,cAAc,CAAC,GAAG;QACvB,IAAI,CAAC,YAAY,CAAC;QAClB,OAAO;IACR;IAEA,aAAa,GAAG,EAAE;QACjB,KAAK,CAAC,aAAa;QACnB,IAAI,IAAI,GAAG,IAAI,CAAC,IAAI;IACrB;IAEA,cAAc,CAAC,EAAE,CAAC,EAAE;QACnB,IAAI,EAAE,WAAW,MAAM,cACtB,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE3B,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,IAAI;QAClC,KAAK,CAAC,cAAc,GAAG;IACxB;IAEA,cAAc,CAAC,EAAE;QAChB,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QACxB,KAAK,CAAC,cAAc;IACrB;IAEA,qBAAqB,CAAC,EAAE,KAAK,EAAE;QAC9B,IAAI,EAAE,WAAW,MAAM,cACtB,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE3B,IAAI,IAAI,IAAI,CAAC,WAAW,KAAK;QAC7B,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,WAAW,IAAI,IACvC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,OACzB,IAAI;QAGN,KAAK,CAAC,qBAAqB,GAAG;QAC9B,IAAI,IAAI;QACR,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE,OAAO,IAAI;IACnC;IAEA,WAAW,UAAU,EAAE,WAAW,EAAE,UAAU,EAAE;QAC/C,IAAI,UAAU,WAAW,UAAU;QACnC,KAAK,CAAC,WAAW,YAAY,aAAa;QAC1C,QAAQ,SAAS,CAAC,GAAG,CAAC;QAEtB,IAAI,QAAQ,SAAS,aAAa,CAAC;QACnC,MAAM,SAAS,CAAC,GAAG,CAAC;QAEpB,IAAI,QAAQ,SAAS,aAAa,CAAC;QACnC,MAAM,SAAS,CAAC,GAAG,CAAC;QACpB,IAAI,IAAI,CAAC,WAAW,KAAK,GACxB,MAAM,SAAS,GAAG,WAAW,gBAAgB;aAE7C,MAAM,SAAS,GAAG,WAAW,iBAAiB;QAG/C,IAAI,aAAa,SAAS,aAAa,CAAC;QACxC,WAAW,SAAS,CAAC,GAAG,CAAC;QAEzB,IAAI,YAAY,SAAS,aAAa,CAAC;QACvC,UAAU,SAAS,CAAC,GAAG,CAAC;QACxB,UAAU,SAAS,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,eAAe;QACpD,WAAW,WAAW,CAAC;QAEvB,IAAI,aAAa,SAAS,aAAa,CAAC;QACxC,WAAW,SAAS,CAAC,GAAG,CAAC;QACzB,WAAW,SAAS,GAAG,KAAK,IAAI,CAAC,IAAI,CAAC,cAAc;QACpD,WAAW,WAAW,CAAC;QAEvB,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,GAAG;YACjC,IAAI,UAAU,SAAS,aAAa,CAAC;YACrC,QAAQ,SAAS,CAAC,GAAG,CAAC;YACtB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,IAAK;gBAClD,IAAI,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE;gBAC5B,EAAE,UAAU,CAAC;gBACb,EAAE,IAAI,CAAC,SAAS;YACjB;YACA,WAAW,WAAW,CAAC;QACxB;QAEA,MAAM,WAAW,CAAC;QAClB,MAAM,WAAW,CAAC;QAElB,QAAQ,WAAW,CAAC;IACrB;IAEA,cAAc;QACb,OAAO;IACR;IAEA,UAAU;QACT,IAAI,SAAS;QACb,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,CAAA;YACzB,UAAU,IAAI,OAAO;QACtB;QACA,OAAO,SAAS,KAAK,CAAC,YAAY,CAAA,GAAA,YAAI,AAAD,EAAE,YAAY;IACpD;AACD;AAEA,SAAS,kBAAkB,YAAY;IACtC,IAAI,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,UAAU,CAAC,CAAA,GAAA,YAAI,AAAD,EAAE,YAAY,KACrC,MAAM,mBAAmB,CAAC;OACrB,EAAE,CAAA,GAAA,YAAI,AAAD,EAAE,KAAK,GAAG,CAAC;IAEtB,OAAO,CAAA,GAAA,YAAI,AAAD,EAAE,QAAQ,CAAC,IAAI,SAAS;AACnC;;;AC7KA;;;;;;;;;;;;;;;AAeA;;AAoPA,+DAAS;AAlPT;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA,SAAS;IAER,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;QAAU;KAAO,EACnB,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,UAAU,KAAK,aAAa;QAChC,IAAI,QAAQ,OAAO,CAAC,QAAQ,GAC3B,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE5B,IAAI,cAAc,qBAAqB,oBAAoB;QAC3D,IAAI,aACH,CAAA,GAAA,uBAAQ,AAAD,EAAE,aAAa,CAAC,SAAS,KAAK;aAErC,CAAA,GAAA,uBAAQ,AAAD,EAAE,UAAU,CAAC,SAAS;QAE9B,OAAO;IACR,GACA;IAED,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,WAAW;IAGhC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;KAAa,EACf,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,QAAQ,IAAI,EAAE,CAAC;QACnB,IAAI,KAAK;QACT,IAAI,SAAS,CAAA,GAAA,sBAAO,AAAD,GAClB,KAAK,MAAM,aAAa;QAEzB,IAAI,UAAU,CAAA,GAAA,4BAAY,AAAD,EAAE,uBAAuB,CAAC;QACnD,IAAI,IAAI,CAAA,GAAA,mBAAY,AAAD;QACnB,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IACnC,EAAE,WAAW,CAAC,CAAA,GAAA,2BAAgB,AAAD,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI;QAE/C,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;KAAa,EACf,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,QAAQ,IAAI,EAAE,CAAC;QACnB,IAAI,KAAK;QACT,IAAI,SAAS,CAAA,GAAA,sBAAO,AAAD,GAClB,KAAK,MAAM,aAAa;QAEzB,IAAI,UAAU,CAAA,GAAA,4BAAY,AAAD,EAAE,uBAAuB,CAAC;QACnD,IAAI,IAAI,CAAA,GAAA,mBAAY,AAAD;QACnB,IAAK,IAAI,IAAI,GAAG,IAAI,QAAQ,MAAM,EAAE,IACnC,EAAE,WAAW,CAAC,CAAA,GAAA,2BAAgB,AAAD,EAAE,OAAO,CAAC,EAAE,CAAC,IAAI;QAE/C,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;KAAS,EACX,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI;YACH,IAAI,UAAU,qBAAqB,aAAa,CAAC,KAAK,aAAa;YACnE,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;QACtB,EAAE,OAAO,GAAG;YACX,4BAA4B;YAC5B,IAAI,EAAE,WAAW,IACZ,EAAE,WAAW,MAAM,aACnB,EAAE,iBAAiB,GAAG,MAAM,CAAC,GAAG,OAAO,oBAC3C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;iBAErB,MAAM;QAER;IACD,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;QAAU;KAAO,EACnB,SAAS,KAAK,GAAG,EAAE,oBAAoB;QACtC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,UAAU,IAAI,EAAE,CAAC,QAAQ,aAAa;QAC1C,qBAAqB,IAAI,CAAC,SAAS;QACnC,IAAI,IAAI,WAAW,MAAM,aACxB,mCAAmC;QACnC,IAAI,qBAAqB,GAAG,IAAI,CAAC,SAAS;QAE3C,OAAO;IACR,GACA;IAED,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,UAAU;IAG/B,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;QAAU;KAAO,EACnB,SAAS,KAAK,GAAG,EAAE,oBAAoB;QACtC,IAAI,UAAU,IAAI,EAAE,CAAC;QACrB,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,OAAO,QAAQ,aAAa;QAChC,IAAI,MAAM;QACV,IAAI,QAAQ,OAAO,MAAM,GACxB,MAAM,QAAQ,MAAM,CAAC;QAEtB,qBAAqB,GAAG,CAAC,MAAM,KAAK;QACpC,OAAO;IACR,GACA,CAAC,kOAAkO,CAAC;IAIrO,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,WACA;QAAE;KAAY,EACd,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,wEAAwE;QACxE,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,qBAAqB,CAAC;QAC1B,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;KAAU,EACZ,SAAS,KAAK,GAAG,EAAE,oBAAoB;QACtC,IAAI,cAAc,IAAI,EAAE,CAAC,QAAQ,aAAa;QAC9C,IAAI,CAAC,CAAA,GAAA,uBAAQ,AAAD,EAAE,kBAAkB,CAAC,cAChC,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,0BAA0B,EAAE,YAAY,QAAQ,CAAC;QAE9E,qBAAqB,UAAU,CAAC;QAChC,OAAO,CAAA,GAAA,mBAAY,AAAD;IACnB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;QAAe;KAAW,EAC5B,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,cAAc,IAAI,EAAE,CAAC;QACzB,IAAK,IAAI,IAAI,GAAG,IAAI,YAAY,WAAW,IAAI,IAAK;YACnD,IAAI,IAAI,YAAY,UAAU,CAAC;YAC/B,IAAI,CAAE,CAAA,EAAE,WAAW,MAAM,UAAS,GACjC,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,0EAA0E,EAAE,EAAE,WAAW,GAAG,wBAAwB,CAAC;YAElJ,IAAI,cAAc,EAAE,aAAa;YACjC,IAAI,CAAC,CAAA,GAAA,uBAAQ,AAAD,EAAE,kBAAkB,CAAC,cAChC,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,4BAA4B,EAAE,YAAY,QAAQ,CAAC;YAEhF,qBAAqB,UAAU,CAAC;QACjC;QACA,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,SAAS,CAAA,GAAA,mBAAY,AAAD;QACxB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,WAAW,IAAI,IAAK;YAC3C,IAAI,IAAI,IAAI,UAAU,CAAC;YACvB,SAAS,CAAA,GAAA,wBAAO,AAAD,EAAE,CAAA,GAAA,8BAAiB,AAAD,EAAE,GAAG;YACtC,IAAI,SAAM,YAAY,CAAC,SAAS;gBAC/B,SAAS,CAAA,GAAA,sBAAS,AAAD,EAAE,WAAW,CAAC,2BAA2B,EAAE,IAAE,EAAE,yBAAyB,CAAC,EAAE;gBAC5F,OAAO;YACR;QACD;QACA,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,eACA;QAAE;KAAY,EACd,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC7C,IAAI,UAAU,IAAI,EAAE,CAAC;QACrB,IAAI,SAAS,QAAQ,qBAAqB;QAC1C,IAAI,UAAU,SAAS,UAAU;YAChC,IAAI,IAAI,CAAA,GAAA,mBAAY,AAAD;YACnB,WAAW,gBAAgB,CAAC,SAAS,OAAO;gBAC3C,IAAI,MAAM,CAAA,GAAA,mBAAY,AAAD;gBACrB,IAAI,WAAW,CAAC,CAAA,GAAA,2BAAgB,AAAD,EAAE,QAAQ,IAAI;gBAC7C,IAAI,WAAW,CAAC,QAAQ,GAAG;gBAC3B,EAAE,WAAW,CAAC;YACf;YACA,IAAI,WAAW,SAAS,IACvB,EAAE,WAAW,CAAC,QAAQ,WAAW,SAAS;YAE3C,OAAO;QACR;QACA,OAAO,QAAQ;IAChB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;KAAO,EACT,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,KAAK,IAAI,KAAK;IACvC,GACA;AAIF;;;ACjQA;;;;;;;;;;;;;;;AAeA;;AAqaA,wDAAS;AAnaT;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAGA;AAKA;AAIA;AAaA,SAAS;IAER,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA,EAAG,EACH,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,IAAI,gBAAgB,CAAA,GAAA,uCAAsB,AAAD;QACzC,cAAc,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EACtD,cACA,SAAS,QAAQ,EAAE,aAAa;YAC/B,CAAA,GAAA,gCAAS,AAAD,EAAE,SAAS,KAAK;gBACvB,qCAAqC;gBACrC,SAAS;YACV;QACD;QAED,IAAI,iBAAiB,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,aAAa,CAAC;QACpD,eAAe,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QAC1C,cAAc,WAAW,CAAC;QAC1B,cAAc,QAAQ;QACtB,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA,EAAG,EACH,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,IAAI,gBAAgB,CAAA,GAAA,uCAAsB,AAAD;QACzC,cAAc,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EACtD,cACA,SAAS,QAAQ,EAAE,aAAa;YAC/B,CAAA,GAAA,gCAAS,AAAD,EAAE,SAAS,KAAK;gBACvB,qCAAqC;gBACrC,SAAS;YACV;QACD;QAED,IAAI,iBAAiB,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,aAAa,CAAC;QACpD,eAAe,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QAC1C,cAAc,WAAW,CAAC;QAC1B,cAAc,QAAQ;QACtB,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,gCACA,EAAG,EACH,SAAS,2BAA2B,GAAG,EAAE,oBAAoB;QAC5D,IAAI,MAAM,CAAA,GAAA,uCAAsB,AAAD;QAC/B,IAAI,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EAC5C,gCACA,SAAS,QAAQ,EAAE,GAAG;YACrB,CAAA,GAAA,gDAAyB,AAAD,EAAE,SAAS,KAAK;gBACvC,qCAAqC;gBACrC,SAAS;YACV;QACD;QAED,IAAI,iBAAiB,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,+BAA+B,CAAC;QACtE,eAAe,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QAC1C,IAAI,WAAW,CAAC;QAChB,IAAI,QAAQ;QACZ,OAAO;IACR,GACA;IAGD,gEAAgE;IAEhE,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;KAAS,EACX,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,WAAW,KAAK,WAAW;QAC/B,iEAAiE;QACjE,IAAI,KAAK,YAAY,aAAa,KAAK,aAAa,KAAK,KAAK,iBAAiB;QAE/E,IAAI,MAAM,CAAA,GAAA,uCAAsB,AAAD;QAC/B,IAAI,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EAC5C,QACA,SAAS,QAAQ,EAAE,GAAG;YACrB,CAAA,GAAA,8BAAO,AAAD,EAAE,IAAI,SAAS,UAAU;gBAC9B,SAAS;YACV;QACD;QAED,IAAI,iBAAiB,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,UAAU,EAAE,GAAG,CAAC;QACtD,eAAe,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QAC1C,IAAI,WAAW,CAAC;QAChB,IAAI,QAAQ;QACZ,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;KAAS,EACX,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,WAAW,KAAK,WAAW;QAC/B,iEAAiE;QACjE,IAAI,KAAK,YAAY,aAAa,KAAK,aAAa,KAAK,KAAK,iBAAiB;QAE/E,IAAI,MAAM,CAAA,GAAA,uCAAsB,AAAD;QAC/B,IAAI,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EAC5C,YACA,SAAS,QAAQ,EAAE,GAAG;YACrB,CAAA,GAAA,8BAAO,AAAD,EAAE,IAAI,SAAS,UAAU;gBAC9B,SAAS,CAAA,GAAA,2BAAgB,AAAD,EAAE;YAC3B;QACD;QAED,IAAI,iBAAiB,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,UAAU,EAAE,GAAG,CAAC;QACtD,eAAe,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QAC1C,IAAI,WAAW,CAAC;QAChB,IAAI,QAAQ;QACZ,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,iBACA;QAAE;QAAS;KAAO,EAClB,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC9C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,OAAO,IAAI,EAAE,CAAC;QAElB,IAAI,WAAW,KAAK,WAAW;QAC/B,iEAAiE;QACjE,IAAI,KAAK,YAAY,aAAa,KAAK,aAAa,KAAK,KAAK,iBAAiB;QAG/E,IAAI,MAAM,CAAA,GAAA,uCAAsB,AAAD;QAC/B,IAAI,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EAC5C,QACA,SAAS,QAAQ,EAAE,GAAG;YACrB,CAAA,GAAA,8BAAO,AAAD,EAAE,IAAI,KAAK,SAAS,UAAU;gBAEnC,SAAS;YACV;QACD;QAED,IAAI,gBAAgB,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,aAAa,EAAE,GAAG,YAAY,EAAE,IAAI,WAAW,GAAG,CAAC;QACxF,cAAc,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QACzC,IAAI,WAAW,CAAC;QAChB,IAAI,QAAQ;QACZ,OAAO;IAER,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;QAAS;KAAQ,EACnB,SAAS,MAAM,GAAG,EAAE,oBAAoB;QAEvC,IAAI,MAAM,IAAI,EAAE,CAAC;QAEjB,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,WAAW,KAAK,WAAW;QAC/B,iEAAiE;QACjE,IAAI,KAAK,YAAY,aAAa,KAAK,aAAa,KAAK,KAAK,iBAAiB;QAE/E,IAAI,MAAM,CAAA,GAAA,uCAAsB,AAAD;QAC/B,IAAI,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EAC5C,QACA,SAAS,QAAQ,EAAE,GAAG;YACrB,CAAA,GAAA,8BAAO,AAAD,EAAE,IAAI,KAAK,SAAS,UAAU;gBAEnC,SAAS;YACV;QACD;QAED,IAAI,gBAAgB,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,aAAa,EAAE,GAAG,YAAY,EAAE,IAAI,WAAW,GAAG,CAAC;QACxF,cAAc,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QACzC,IAAI,WAAW,CAAC;QAChB,IAAI,QAAQ;QACZ,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;QAAS;KAAO,EAClB,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,WAAW,KAAK,WAAW;QAC/B,iEAAiE;QACjE,IAAI,KAAK,YAAY,aAAa,KAAK,aAAa,KAAK,KAAK,iBAAiB;QAE/E,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,UAAU,IAAI,iBAAiB;QAEnC,IAAI,MAAM,CAAA,GAAA,uCAAsB,AAAD;QAC/B,IAAI,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EAC5C,kBACA,SAAS,QAAQ,EAAE,GAAG;YACrB,CAAA,GAAA,8BAAO,AAAD,EAAE,IAAI,SAAS,SAAS,UAAU;gBACvC,SAAS;YACV;QACD;QAED,IAAI,gBAAgB,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,aAAa,EAAE,GAAG,YAAY,EAAE,IAAI,CAAC;QAC1E,cAAc,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QACzC,IAAI,WAAW,CAAC;QAChB,IAAI,QAAQ;QACZ,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;KAAS,EACX,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,WAAW,KAAK,WAAW;QAC/B,iEAAiE;QACjE,IAAI,KAAK,YAAY,aAAa,KAAK,aAAa,KAAK,KAAK,iBAAiB;QAE/E,IAAI,MAAM,CAAA,GAAA,uCAAsB,AAAD;QAC/B,IAAI,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EAC5C,UACA,SAAS,QAAQ,EAAE,GAAG;YACrB,CAAA,GAAA,gCAAS,AAAD,EAAE,IAAI,SAAS,YAAY;gBAClC,SAAS;YACV;QACD;QAED,IAAI,gBAAgB,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,eAAe,EAAE,GAAG,CAAC;QAC1D,cAAc,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QACzC,IAAI,WAAW,CAAC;QAChB,IAAI,QAAQ;QACZ,OAAO;IACR,GACA;IAKD,kEAAkE;IAClE,oEAAoE;IACpE,8CAA8C;IAC9C,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,WACA;QAAE;QAAU;KAAa,EACzB,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAE1C;;;;;;;;;;;;;;;;;;;;;;;;GAwBA,GAEA,IAAI,cAAc,IAAI,EAAE,CAAC,QAAQ,aAAa;QAC9C,IAAI,MAAM,IAAI,EAAE,CAAC;QAEjB,IAAI,eAAe,qBAAqB,OAAO,IAAI,SAAS;QAC5D,aAAa,oBAAoB,CAAC;QAClC,aAAa,UAAU,CAAC;QAExB,IAAI,gBAAgB;QAEpB,IAAI,mBAAmB;QAEvB,IAAI,oBAAoB,EAAE;QAC1B,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,WAAW,IAAI,IACtC,kBAAkB,IAAI,CAAC,IAAI,UAAU,CAAC;QAGvC,IAAI,iBAAiB;YACpB;QACD;QAEA,IAAI,cAAc;YACjB,MAAO,gBAAgB,kBAAkB,MAAM,EAAG,gBAAiB;gBAClE,IAAI,IAAI,iBAAiB,CAAC,cAAc;gBACxC,IAAI,SAAS,CAAA,GAAA,wBAAO,AAAD,EAAE,CAAA,GAAA,8BAAiB,AAAD,EAAE,GAAG;gBAC1C,IAAI,SAAM,eAAe,CAAC,SAAS;oBAClC,iBAAiB,CAAC,cAAc,GAAG;oBACnC,OAAO,WAAW,CAAC;wBAClB,QAAQ;oBACT;oBACA;gBACD;gBACA,IAAI,SAAM,YAAY,CAAC,SAAS;oBAC/B,IAAI,MAAM,CAAA,GAAA,sBAAS,AAAD,EAAE,WAAW,CAAC,wCAAwC,EAAE,gBAAc,EAAE,CAAC,EAAE;oBAC7F,aAAa,QAAQ;oBACrB,iBAAiB;oBACjB;gBACD;YACD;YACA,IAAI,iBAAiB,kBAAkB,MAAM,EAAE;gBAC9C,IAAI,UAAU,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,6BAA6B,CAAC;gBAC7D,QAAQ,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;gBACnC,aAAa,QAAQ;gBACrB,iBAAiB;YAClB;QACD;QAEA,IAAI,IAAI,CAAA,GAAA,uCAAsB,AAAD;QAC7B,EAAE,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EAC1C,WACA,SAAS,QAAQ,EAAE,GAAG;YACrB,mBAAmB;YACnB;QACD;QAED,IAAI,UAAU,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,gBAAgB,CAAC;QAChD,QAAQ,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QACnC,EAAE,WAAW,CAAC;QACd,EAAE,QAAQ;QACV,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,eACA;QAAE;KAAO,EACT,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC7C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,WAAW,CAAC,CAAA,GAAA,mCAAgB,AAAD;QAC/B,IAAI,QAAQ,IAAI,cAAc;QAC9B,MAAM,OAAO,CAAC,CAAA,OAAQ,cAAc,CAAA,GAAA,mCAAgB,AAAD;QACnD,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,iBACA;QAAE;KAAO,EACT,SAAS,cAAc,GAAG,EAAE,oBAAoB;QAC/C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,WAAW,CAAC,CAAA,GAAA,oCAAiB,AAAD;QAChC,IAAI,QAAQ,IAAI,cAAc;QAC9B,MAAM,OAAO,CAAC,CAAA,OAAQ,cAAc,CAAA,GAAA,oCAAiB,AAAD;QACpD,OAAO;IACR,GACA;AAGF;;;AClbA;;;;;;;;;;;;;;;AAeA;;AAqLA,6CACC;AADD,+CAEC;AAFD,6CAGC;AAHD,+CAIC;AAJD,+DAKC;AALD,6CAMC;AAND,6CAOC;AAPD,gDAQC;AARD,kDASC;AATD,+CAUC;AA7LD;AAEA;AACA;AACA;AACA;AACA;AAEA,SAAS,aAAa,OAAO,EAAE,EAAE,EAAE,KAAK;IACvC,IAAI,MAAM,IAAI;IACd,IAAI,kBAAkB,GAAG,YAAY;IACrC,IAAI,IAAI,CAAC,QAAQ;IACjB,IAAI,IAAI,CAAC;IACT,IAAI,MAAM,GAAG;QACZ,IAAI,IAAI,UAAU,KAAK,IAAI,IAAI,IAAI,IAAI,MAAM,KAAK,KACjD,GAAG,IAAI,QAAQ;aAEf;IAEF;IACA,IAAI,OAAO,GAAG;QACb;IACD;AACD;AAEA,SAAS,UAAU,QAAQ;IAC1B,IAAI,UAAU,CAAC,SAAS,CAAC;IAEzB,aAAa,SAAS,SAAS,IAAI;QAClC,mBAAmB,MAAM;IAC1B,GAAG;QACF,SAAS;IACV;AACD;AAEA,SAAS,UAAU,QAAQ;IAC1B,IAAI,UAAU,CAAC,SAAS,CAAC;IAEzB,aAAa,SAAS,SAAS,IAAI;QAClC,mBAAmB,MAAM;IAC1B,GAAG;QACF,SAAS;IACV;AACD;AAGA,SAAS,0BAA0B,QAAQ;IAC1C,IAAI,UAAU,CAAC,yBAAyB,CAAC;IAEzC,aAAa,SAAS,SAAS,IAAI;QAClC,mBAAmB,MAAM;IAC1B,GAAG;QACF,SAAS;IACV;AACD;AAGA,SAAS,QAAQ,IAAI,EAAE,QAAQ;IAC9B,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC;IAE7B,aAAa,SAAS,SAAS,IAAI;QAClC,SAAS,KAAK,GAAG;QACjB,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB,CAAC;QAC/B,mBAAmB,MAAM;IAC1B,GAAG;QACF,SAAS;IACV;AACD;AAEA,SAAS,QAAQ,IAAI,EAAE,QAAQ;IAC9B,IAAI,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC;IAEhC,aAAa,SAAS,SAAS,IAAI;QAClC,SAAS;IACV,GAAG;QACF,SAAS;IACV;AACD;AAEA,SAAS,QAAQ,IAAI,EAAE,GAAG,EAAE,QAAQ;IACnC,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE,QAAQ,IAAI,QAAQ,CAAC,MAAM,CAAC;IAE5D,aAAa,SAAS,SAAS,IAAI;QAClC,mBAAmB,MAAM;IAC1B,GAAG;QACF,SAAS;IACV;AACD;AAEA,SAAS,QAAQ,IAAI,EAAE,IAAI,EAAE,QAAQ;IACpC,IAAI,UAAU,CAAC,SAAS,EAAE,KAAK,EAAE,EAAE,KAAK,CAAC;IAEzC,aAAa,SAAS,SAAS,IAAI;QAClC,mBAAmB,MAAM;IAC1B,GAAG;QACF,SAAS;IACV;AACD;AAEA,SAAS,UAAU,IAAI,EAAE,QAAQ;IAChC,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC;IAE7B,aAAa,SAAS,SAAS,IAAI;QAClC,mBAAmB,MAAM,SAAS,GAAG;YACpC,SAAS,gBAAgB;QAC1B;IACD,GAAG;QACF,SAAS;IACV;AACD;AAEA,SAAS,WAAW,IAAI,EAAE,QAAQ;IACjC,IAAI,UAAU,CAAC,MAAM,EAAE,KAAK,CAAC;IAE7B,aAAa,SAAS,SAAS,IAAI;QAClC,mBAAmB,MAAM,SAAS,MAAM;YACvC,IAAI,SAAS,CAAA,GAAA,8BAAiB,AAAD,EAAE,QAAQ,CAAA,GAAA,uBAAQ,AAAD;YAC9C,SAAS;QACV;IACD,GAAG;QACF,SAAS;IACV;AACD;AAEA,SAAS;IACR,IAAI,IAAI,CAAA,GAAA,6BAAmB,AAAD,EAAE;IAC5B,OAAO;AACR;AAGA,SAAS,mBAAmB,IAAI,EAAE,QAAQ;IACzC,IAAI,SAAS;IACb,IAAI;QACH,SAAS,CAAA,GAAA,mBAAK,AAAD,EAAE;IAChB,EAAE,OAAO,GAAG;QACX,IAAI,CAAC,SAAM,OAAO,CAAC,IAClB,SAAS,CAAA,GAAA,6BAAmB,AAAD,EAC9B,CAAC;;AAED,EAAE,EAAE,IAAI,CAAC;AACT,EAAE,EAAE,OAAO,CAAC;MACN,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC;KACzB,EAAE,EAAE,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;QACvB,EAAE,EAAE,KAAK,CAAC;UACR,EAAE,EAAE,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC;AAC/B,CAAC,GAAG;IAEH;IACA,SAAS;AACV;AAEA,SAAS,gBAAgB,GAAG;IAC3B,IAAI,CAAE,CAAA,IAAI,WAAW,MAAM,eACpB,CAAA,IAAI,cAAc,MAAM,aACzB,IAAI,cAAc,MAAM,UAAS,CAAC,GAAI;QAC3C,IAAI,IAAI,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAC5B,OAAO;IACR;IACA,IAAI,SAAS,CAAA,GAAA,8BAAiB,AAAD,EAAE,KAAK,CAAA,GAAA,uBAAQ,AAAD;IAC3C,OAAO;AACR;AAEA,oDAAoD;AACpD,kCAAkC;AAClC,iEAAiE;AACjE,sEAAsE;AACtE,8CAA8C;AAC9C,SAAS,aAAa,OAAO,EAAE,GAAG,EAAE,QAAQ;IAC3C,IAAI,WAAW,QAAQ,WAAW;IAClC,IAAI,KAAK;IACT,QAAQ,IAAI,KAAK,SAAS,MAAM;QAC/B,IAAI,SAAM,MAAM,CAAC,SAChB,SAAS;aAET,SAAS;IAEX;AACD;;;AClMA,8BAA8B;AAE9B,gEAAgE;AAChE,uEAAuE;AACvE,oEAAoE;AACpE,sCAAsC;AAEtC,2DAA2D;AAC3D,iEAAiE;AACjE,gEAAgE;AAChE,+CAA+C;AAE/C,oEAAoE;AACpE,kEAAkE;;;AAi5KlE,iDACE;AADF,2CAEE;AAj5KF;AAGA,iEAAiE;AAEjE,SAAS,aAAa,KAAK,EAAE,MAAM;IACjC,SAAS;QAAM,IAAI,CAAC,WAAW,GAAG;IAAO;IACzC,EAAE,SAAS,GAAG,OAAO,SAAS;IAC9B,MAAM,SAAS,GAAG,IAAI;AACxB;AAEA,SAAS,gBAAgB,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ;IACzD,IAAI,CAAC,OAAO,GAAG;IACf,IAAI,CAAC,QAAQ,GAAG;IAChB,IAAI,CAAC,KAAK,GAAG;IACb,IAAI,CAAC,QAAQ,GAAG;IAChB,IAAI,CAAC,IAAI,GAAG;IAEZ,uBAAuB;IACvB,IAAI,OAAO,MAAM,iBAAiB,KAAK,YACrC,MAAM,iBAAiB,CAAC,IAAI,EAAE;AAElC;AAEA,aAAa,iBAAiB;AAE9B,gBAAgB,YAAY,GAAG,SAAS,QAAQ,EAAE,KAAK,EAAE,QAAQ;IAC/D,IAAI,2BAA2B;QAC7B,SAAS,SAAS,WAAW;YAC3B,OAAO,MAAO,cAAc,YAAY,IAAI,IAAI;QAClD;QAEA,OAAO,SAAS,WAAW;YACzB,IAAI,eAAe,YAAY,KAAK,CAAC,GAAG,CAAC,SAAS,IAAI;gBACpD,OAAO,MAAM,OAAO,CAAC,QACjB,YAAY,IAAI,CAAC,EAAE,IAAI,MAAM,YAAY,IAAI,CAAC,EAAE,IAChD,YAAY;YAClB;YAEA,OAAO,MAAO,CAAA,YAAY,QAAQ,GAAG,MAAM,EAAC,IAAK,eAAe;QAClE;QAEA,KAAK;YACH,OAAO;QACT;QAEA,KAAK;YACH,OAAO;QACT;QAEA,OAAO,SAAS,WAAW;YACzB,OAAO,YAAY,WAAW;QAChC;QAEA,KAAK,SAAS,WAAW;YACvB,OAAO,SAAS,oBAAoB,YAAY,QAAQ;QAC1D;IACF;IAEA,SAAS,IAAI,EAAE;QACb,OAAO,GAAG,UAAU,CAAC,GAAG,QAAQ,CAAC,IAAI,WAAW;IAClD;IAEA,SAAS,cAAc,CAAC;QACtB,OAAO,EACJ,OAAO,CAAC,OAAO,QACf,OAAO,CAAC,MAAO,OACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,gBAAyB,SAAS,EAAE;YAAI,OAAO,SAAS,IAAI;QAAK,GACzE,OAAO,CAAC,yBAAyB,SAAS,EAAE;YAAI,OAAO,QAAS,IAAI;QAAK;IAC9E;IAEA,SAAS,YAAY,CAAC;QACpB,OAAO,EACJ,OAAO,CAAC,OAAO,QACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,MAAO,OACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,OAAO,OACf,OAAO,CAAC,gBAAyB,SAAS,EAAE;YAAI,OAAO,SAAS,IAAI;QAAK,GACzE,OAAO,CAAC,yBAAyB,SAAS,EAAE;YAAI,OAAO,QAAS,IAAI;QAAK;IAC9E;IAEA,SAAS,oBAAoB,WAAW;QACtC,OAAO,wBAAwB,CAAC,YAAY,IAAI,CAAC,CAAC;IACpD;IAEA,SAAS,iBAAiB,QAAQ;QAChC,IAAI,eAAe,SAAS,GAAG,CAAC;QAChC,IAAI,GAAG;QAEP,aAAa,IAAI;QAEjB,IAAI,aAAa,MAAM,GAAG,GAAG;YAC3B,IAAK,IAAI,GAAG,IAAI,GAAG,IAAI,aAAa,MAAM,EAAE,IAC1C,IAAI,YAAY,CAAC,IAAI,EAAE,KAAK,YAAY,CAAC,EAAE,EAAE;gBAC3C,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC,EAAE;gBACjC;YACF;YAEF,aAAa,MAAM,GAAG;QACxB;QAEA,OAAQ,aAAa,MAAM;YACzB,KAAK;gBACH,OAAO,YAAY,CAAC,EAAE;YAExB,KAAK;gBACH,OAAO,YAAY,CAAC,EAAE,GAAG,SAAS,YAAY,CAAC,EAAE;YAEnD;gBACE,OAAO,aAAa,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC,QAClC,UACA,YAAY,CAAC,aAAa,MAAM,GAAG,EAAE;QAC7C;IACF;IAEA,SAAS,cAAc,KAAK;QAC1B,OAAO,QAAQ,MAAO,cAAc,SAAS,MAAO;IACtD;IAEA,OAAO,cAAc,iBAAiB,YAAY,UAAU,cAAc,SAAS;AACrF;AAEA,SAAS,UAAU,KAAK,EAAE,OAAO;IAC/B,UAAU,YAAY,YAAY,UAAU,CAAC;IAE7C,IAAI,aAAa,CAAC;IAElB,IAAI,yBAAyB;QAAE,OAAO;IAAe;IACrD,IAAI,wBAAwB;IAE5B,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IAChB,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,UAAU;IAEd,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IACX,IAAI,SAAS;IACb,IAAI,SAAS;IACb,IAAI,SAAS;IAEb,IAAI,SAAS,uBAAuB,OAAO;IAC3C,IAAI,SAAS,uBAAuB,KAAK;IACzC,IAAI,SAAS,uBAAuB,KAAK;IACzC,IAAI,SAAS,uBAAuB,MAAM;IAC1C,IAAI,SAAS,uBAAuB,MAAM;IAC1C,IAAI,SAAS,uBAAuB,MAAM;IAC1C,IAAI,SAAS,uBAAuB,MAAM;IAC1C,IAAI,SAAS,uBAAuB,MAAM;IAC1C,IAAI,SAAS,uBAAuB,MAAM;IAC1C,IAAI,SAAS,uBAAuB,KAAK;IACzC,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,qBAAqB;QAAC;QAAK;QAAK;QAAK;QAAK;QAAK;KAAI,EAAE,OAAO;IAC1E,IAAI,UAAU,qBAAqB;QAAC;YAAC;YAAK;SAAI;QAAE;YAAC;YAAK;SAAI;QAAE;YAAC;YAAK;SAAI;QAAE;QAAK;QAAK;KAAI,EAAE,OAAO;IAC/F,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,qBAAqB;QAAC;YAAC;YAAK;SAAI;QAAE;YAAC;YAAK;SAAI;QAAE;YAAC;YAAK;SAAI;KAAC,EAAE,OAAO;IAChF,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,OAAO;IAC5C,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,qBAAqB;QAAC;YAAC;YAAK;SAAI;KAAC,EAAE,OAAO;IACxD,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,KAAK;IAC5C,IAAI,UAAU,qBAAqB;QAAC;KAAI,EAAE,MAAM;IAC9C,IAAI,UAAU,uBAAuB,KAAM;IAC3C,IAAI,UAAU,qBAAqB;QAAC;KAAK,EAAE,MAAM;IACjD,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,uBAAuB,KAAK;IAC1C,IAAI,UAAU,qBAAqB;QAAC;QAAK;KAAI,EAAE,MAAM;IACrD,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,uBAAuB,MAAM;IAC3C,IAAI,UAAU,qBAAqB;QAAC;QAAK;QAAM;QAAM;KAAK,EAAE,OAAO;IAEnE,IAAI,SAAS,SAAS,GAAG;QAAI,OAAO;IAAK;IACzC,IAAI,SAAS,SAAS,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,gBAAgB,CAAC,WAAW,UAAU,SAAS,SAAS,KAAK;IAAwB;IAC9J,IAAI,SAAS,SAAS,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,gBAAgB,CAAC,WAAW,UAAU,SAAS,SAAS,KAAK;IAAwB;IAC9J,IAAI,SAAS,SAAS,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,gBAAgB,CAAC,WAAW,UAAU,SAAS,SAAS,KAAK;IAAwB;IAC9J,IAAI,SAAS,SAAS,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,gBAAgB,CAAC,WAAW,UAAU,SAAS,SAAS;IAAM;IACvI,IAAI,SAAS,SAAS,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,gBAAgB,CAAC,WAAW,UAAU,SAAS,SAAS;IAAM;IACvI,IAAI,SAAS,SAAS,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,gBAAgB,CAAC,WAAW,UAAU,SAAS,SAAS;IAAM;IACvI,IAAI,SAAS,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,WAAW,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IACnI,IAAI,SAAS,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,WAAW,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IACnI,IAAI,SAAS,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,WAAW,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IACnI,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,WAAW,CAAC,UAAU,SAAS,SAAS;IAAM;IAC7G,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,WAAW,CAAC,UAAU,SAAS,SAAS;IAAM;IAC7G,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,WAAW,CAAC,UAAU,SAAS,SAAS;IAAM;IAC7G,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,uBAAuB,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IAChJ,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,uBAAuB,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IAChJ,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,uBAAuB,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IAChJ,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,uBAAuB,CAAC,UAAU,SAAS,SAAS;IAAM;IACzH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,uBAAuB,CAAC,UAAU,SAAS,SAAS;IAAM;IACzH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,uBAAuB,CAAC,UAAU,SAAS,SAAS;IAAM;IACzH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,cAAc,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IACvI,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,cAAc,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IACvI,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,cAAc,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IACvI,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,cAAc,CAAC,UAAU,SAAS,SAAS;IAAM;IAChH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,cAAc,CAAC,UAAU,SAAS,SAAS;IAAM;IAChH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,cAAc,CAAC,UAAU,SAAS,SAAS;IAAM;IAChH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS,KAAK;IAAwB;IAC9I,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS,KAAK;IAAwB;IAC9I,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS,KAAK;IAAwB;IAC9I,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS,KAAK;IAAwB;IACpJ,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS,KAAK;IAAwB;IACpJ,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS,KAAK;IAAwB;IACpJ,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS;IAAM;IACvH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS;IAAM;IACvH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS;IAAM;IACvH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS;IAAM;IAC7H,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS;IAAM;IAC7H,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ;QAAI,OAAO,mBAAG,eAAe,CAAC,MAAM,UAAU,SAAS,SAAS;IAAM;IAC7H,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,oBAAoB,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IAC7I,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,oBAAoB,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IAC7I,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,oBAAoB,CAAC,UAAU,SAAS,SAAS,KAAK;IAAwB;IAC7I,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,oBAAoB,CAAC,UAAU,SAAS,SAAS;IAAM;IACtH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,oBAAoB,CAAC,UAAU,SAAS,SAAS;IAAM;IACtH,IAAI,UAAU,SAAS,OAAO,EAAE,OAAO,EAAE,QAAQ;QAAI,OAAO,mBAAG,oBAAoB,CAAC,UAAU,SAAS,SAAS;IAAM;IACtH,IAAI,UAAU,SAAS,GAAG;QAAI,OAAO;IAAK;IAC1C,IAAI,UAAU,SAAS,IAAI;QAAI,OAAO;IAAM;IAC5C,IAAI,UAAU,SAAS,QAAQ;QAAI,OAAO;IAAU;IACpD,IAAI,UAAU,SAAS,SAAS,EAAE,OAAO,EAAE,OAAO;QAAI,OAAO,mBAAG,gBAAgB,CAAC,WAAW,SAAS,SAAS;IAAwB;IACtI,IAAI,UAAU,SAAS,SAAS,EAAE,OAAO,EAAE,OAAO;QAAI,OAAO,mBAAG,gBAAgB,CAAC,WAAW,SAAS;IAAU;IAC/G,IAAI,UAAU,SAAS,cAAc;QAAI,OAAO;IAAgB;IAChE,IAAI,UAAU,SAAS,OAAO;QAAI,OAAO,mBAAG,QAAQ,CAAC,MAAM,SAAS;IAAwB;IAC5F,IAAI,UAAU,SAAS,OAAO;QAAI,OAAO,mBAAG,QAAQ,CAAC,OAAO,SAAS;IAAwB;IAC7F,IAAI,UAAU,SAAS,OAAO;QAAI,OAAO,mBAAG,QAAQ,CAAC,MAAM;IAAU;IACrE,IAAI,UAAU,SAAS,OAAO;QAAI,OAAO,mBAAG,QAAQ,CAAC,OAAO;IAAU;IACtE,IAAI,UAAU,SAAS,OAAO,EAAE,MAAM;QAAI,OAAO,mBAAG,UAAU,CAAC,QAAQ,SAAS;IAAwB;IACxG,IAAI,UAAU,SAAS,OAAO,EAAE,MAAM;QAAI,OAAO,mBAAG,UAAU,CAAC,QAAQ;IAAU;IACjF,IAAI,UAAU,SAAS,WAAW;QAAI,OAAO;IAAa;IAC1D,IAAI,UAAU;QAAa,OAAO;IAAK;IACvC,IAAI,UAAU,SAAS,OAAO,EAAE,QAAQ,EAAE,MAAM;QAAI,OAAO,mBAAG,WAAW,CAAC,UAAU,QAAQ,SAAS;IAAwB;IAC7H,IAAI,UAAU,SAAS,OAAO,EAAE,QAAQ,EAAE,MAAM;QAAI,OAAO,mBAAG,WAAW,CAAC,UAAU,QAAQ;IAAU;IACtG,IAAI,UAAU,SAAS,OAAO,EAAE,IAAI;QAAI,OAAO,mBAAG,UAAU,CAAC,MAAM,SAAS;IAAwB;IACpG,IAAI,UAAU,SAAS,OAAO,EAAE,IAAI;QAAI,OAAO,mBAAG,UAAU,CAAC,MAAM;IAAU;IAC7E,IAAI,UAAU,SAAS,OAAO,EAAE,IAAI;QAAI,OAAO,mBAAG,SAAS,CAAC,MAAM,SAAS;IAAwB;IACnG,IAAI,UAAU,SAAS,OAAO,EAAE,KAAK;QAAI,OAAO,mBAAG,SAAS,CAAC,OAAO,SAAS;IAAwB;IACrG,IAAI,UAAU,SAAS,OAAO,EAAE,KAAK;QAAI,OAAO,mBAAG,SAAS,CAAC,OAAO;IAAU;IAC9E,IAAI,UAAU,SAAS,QAAQ,EAAE,UAAU;QAAG,OAAO;IAAY;IACjE,IAAI,UAAU,SAAS,QAAQ,EAAE,QAAQ;QAAI,OAAQ,WAAY,WAAW,MAAM,WAAY;IAAQ;IACtG,IAAI,UAAU,SAAS,UAAU;QAAI,OAAO,OAAO;IAAY;IAC/D,IAAI,UAAU,SAAS,MAAM;QAAI,OAAO,OAAO,IAAI,CAAC;IAAK;IACzD,IAAI,UAAU,SAAS,MAAM;QAAI,OAAO,MAAM,OAAO,IAAI,CAAC;IAAK;IAC/D,IAAI,UAAU,SAAS,IAAI;QAAI,OAAO;IAAM;IAC5C,IAAI,UAAU,SAAS,GAAG;QAAI,OAAO;IAAK;IAC1C,IAAI,UAAU,SAAS,QAAQ;QAAI,OAAO;IAAU;IACpD,IAAI,UAAU,SAAS,IAAI;QAAI,OAAO;IAAM;IAC5C,IAAI,UAAU;QAAa,OAAO;IAAM;IACxC,IAAI,UAAU,SAAS,IAAI;QAAI,OAAO;IAAM;IAC5C,IAAI,UAAU;QAAa,OAAO;IAAa;IAC/C,IAAI,UAAU;QAAa,OAAO;IAAK;IAEvC,IAAI,cAAc;IAClB,IAAI,eAAe;IACnB,IAAI,sBAAsB;QAAC;YAAE,MAAM;YAAG,QAAQ;QAAE;KAAE;IAClD,IAAI,eAAe,EAAE;IACrB,IAAI,kBAAkB;IAEtB,IAAI;IAEJ,IAAI,eAAe,SAAS;QAC1B,IAAI,CAAE,CAAA,QAAQ,SAAS,IAAI,sBAAqB,GAC9C,MAAM,IAAI,MAAM,qCAAqC,QAAQ,SAAS,GAAG;QAG3E,wBAAwB,sBAAsB,CAAC,QAAQ,SAAS,CAAC;IACnE;IAEA,SAAS;QACP,OAAO,MAAM,SAAS,CAAC,cAAc;IACvC;IAEA,SAAS;QACP,OAAO;IACT;IAEA,SAAS;QACP,OAAO;YAAC;YAAc;SAAY;IACpC;IAEA,SAAS;QACP,OAAO,oBAAoB,cAAc;IAC3C;IAEA,SAAS,SAAS,WAAW,EAAE,QAAQ;QACrC,WAAW,aAAa,YACpB,WACA,oBAAoB,cAAc;QAEtC,MAAM,yBACJ;YAAC,qBAAqB;SAAa,EACnC,MAAM,SAAS,CAAC,cAAc,cAC9B;IAEJ;IAEA,SAAS,MAAM,OAAO,EAAE,QAAQ;QAC9B,WAAW,aAAa,YACpB,WACA,oBAAoB,cAAc;QAEtC,MAAM,qBAAqB,SAAS;IACtC;IAEA,SAAS,uBAAuB,IAAI,EAAE,UAAU;QAC9C,OAAO;YAAE,MAAM;YAAW,MAAM;YAAM,YAAY;QAAW;IAC/D;IAEA,SAAS,qBAAqB,KAAK,EAAE,QAAQ,EAAE,UAAU;QACvD,OAAO;YAAE,MAAM;YAAS,OAAO;YAAO,UAAU;YAAU,YAAY;QAAW;IACnF;IAEA,SAAS;QACP,OAAO;YAAE,MAAM;QAAM;IACvB;IAEA,SAAS;QACP,OAAO;YAAE,MAAM;QAAM;IACvB;IAEA,SAAS,qBAAqB,WAAW;QACvC,OAAO;YAAE,MAAM;YAAS,aAAa;QAAY;IACnD;IAEA,SAAS,sBAAsB,GAAG;QAChC,IAAI,UAAU,mBAAmB,CAAC,IAAI;QACtC,IAAI;QAEJ,IAAI,SACF,OAAO;aACF;YACL,IAAI,MAAM;YACV,MAAO,CAAC,mBAAmB,CAAC,EAAE,CAC5B;YAGF,UAAU,mBAAmB,CAAC,EAAE;YAChC,UAAU;gBACR,MAAM,QAAQ,IAAI;gBAClB,QAAQ,QAAQ,MAAM;YACxB;YAEA,MAAO,IAAI,IAAK;gBACd,IAAI,MAAM,UAAU,CAAC,OAAO,IAAI;oBAC9B,QAAQ,IAAI;oBACZ,QAAQ,MAAM,GAAG;gBACnB,OACE,QAAQ,MAAM;gBAGhB;YACF;YAEA,mBAAmB,CAAC,IAAI,GAAG;YAE3B,OAAO;QACT;IACF;IAEA,IAAI,oBAAoB,OAAO,QAAQ,QAAQ,KAAK,YAAY,QAAQ,QAAQ,CAAC,MAAM,GAAG;IAC1F,SAAS,oBAAoB,QAAQ,EAAE,MAAM;QAC3C,IAAI,MAAM,CAAC;QAEX,IAAK,mBAAoB,IAAI,QAAQ,GAAG,QAAQ,QAAQ;QAExD,IAAI,kBAAkB,sBAAsB;QAC5C,IAAI,KAAK,GAAG;YACV,QAAQ;YACR,MAAM,gBAAgB,IAAI;YAC1B,QAAQ,gBAAgB,MAAM;QAChC;QAEA,IAAI,gBAAgB,sBAAsB;QAC1C,IAAI,GAAG,GAAG;YACR,QAAQ;YACR,MAAM,cAAc,IAAI;YACxB,QAAQ,cAAc,MAAM;QAC9B;QAEA,OAAO;IACT;IAEA,SAAS;QACP,aAAa,IAAI,CAAC;YAAE,KAAK;YAAa,UAAU,EAAE;QAAC;IACrD;IAEA,SAAS,WAAW,QAAQ;QAC1B,IAAI,MAAM,YAAY,CAAC,aAAa,MAAM,GAAG,EAAE;QAE/C,IAAI,cAAc,IAAI,GAAG,EAAI;QAE7B,IAAI,cAAc,IAAI,GAAG,EAAE;YACzB,IAAI,GAAG,GAAG;YACV,IAAI,QAAQ,GAAG,EAAE;QACnB;QAEA,IAAI,QAAQ,CAAC,IAAI,CAAC;IACpB;IAEA,SAAS,QAAQ,MAAM;QACrB,IAAI,WAAW,aAAa,GAAG;QAC/B,IAAI,MAAM,YAAY,CAAC,aAAa,MAAM,GAAG,EAAE;QAC/C,IAAI,WAAW,SAAS,QAAQ;QAEhC,IAAI,IAAI,GAAG,KAAK,SAAS,GAAG,EAAI;QAEhC,IAAI,QACF,WAAW,SAAS,GAAG,CAAC,SAAS,CAAC;YAChC,OAAO,EAAE,IAAI,KAAK,QAAQ,EAAE,QAAQ,GAAG;gBAAE,MAAM;gBAAO,UAAU;YAAE;QACpE;QAGF,MAAM,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,QAAQ,EAAE;IAC3C;IAEA,SAAS,qBAAqB,OAAO,EAAE,QAAQ;QAC7C,OAAO,IAAI,gBAAgB,SAAS,MAAM,MAAM;IAClD;IAEA,SAAS,yBAAyB,QAAQ,EAAE,KAAK,EAAE,QAAQ;QACzD,OAAO,IAAI,gBACT,gBAAgB,YAAY,CAAC,UAAU,OAAO,WAC9C,UACA,OACA;IAEJ;IAEA,SAAS;QACP,IAAI,WAAW,YAAY,CAAC,EAAE;QAC9B,IAAI,UAAU,SAAS,GAAG;QAE1B,OAAO,yBACL,SAAS,QAAQ,EACjB,UAAU,MAAM,MAAM,GAAG,MAAM,MAAM,CAAC,WAAW,MACjD,UAAU,MAAM,MAAM,GAClB,oBAAoB,SAAS,UAAU,KACvC,oBAAoB,SAAS;IAErC;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI;QAEpB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,eAAe;gBACf,KAAK,OAAO;YACd,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI;QAEJ,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;YAC3C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAGP,OAAO;IACT;IAEA,SAAS;QACP,IAAI;QAEJ,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,IAAI,OAAO,YACT,KAAK;QAGP,OAAO;IACT;IAEA,SAAS;QACP,IAAI;QAEJ,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YACT,KAAK;oBAET;gBACF;YACF;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;QAEhC,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YACT,KAAK;oBAEP,KAAK,EAAE;oBACP,KAAK;oBACL,MAAO,OAAO,WAAY;wBACxB,GAAG,IAAI,CAAC;wBACR,KAAK;oBACP;oBACA,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wBACxC,KAAK;wBACL;oBACF,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,eAAe;wBACf,KAAK,OAAO,IAAI,IAAI,IAAI;oBAC1B,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wBAC3C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YACT,KAAK;wBAEP,KAAK,EAAE;wBACP,KAAK;wBACL,MAAO,OAAO,WAAY;4BACxB,GAAG,IAAI,CAAC;4BACR,KAAK;wBACP;wBACA,KAAK;wBACL,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,eAAe;4BACf,KAAK,OAAO,IAAI,IAAI,IAAI;wBAC1B,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;YACA,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YAAY;wBACrB,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YACT,KAAK;4BAEP,KAAK,EAAE;4BACP,KAAK;4BACL,MAAO,OAAO,WAAY;gCACxB,GAAG,IAAI,CAAC;gCACR,KAAK;4BACP;4BACA,KAAK;4BACL,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,eAAe;gCACf,KAAK,OAAO,IAAI,IAAI,IAAI;4BAC1B,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;gBACA,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,KAAK;oBACL,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YAAY;4BACrB,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YACT,KAAK;gCAEP,KAAK,EAAE;gCACP,KAAK;gCACL,MAAO,OAAO,WAAY;oCACxB,GAAG,IAAI,CAAC;oCACR,KAAK;gCACP;gCACA,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oCAC3C,KAAK;oCACL,eAAe;gCACjB,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,eAAe;oCACf,KAAK,OAAO,IAAI,IAAI,IAAI;gCAC1B,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;oBACA,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,KAAK;wBACL,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YAAY;gCACrB,aAAa;gCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oCACxC,KAAK;oCACL;gCACF,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YACT,KAAK;oCAEP,KAAK,EAAE;oCACP,KAAK;oCACL,MAAO,OAAO,WAAY;wCACxB,GAAG,IAAI,CAAC;wCACR,KAAK;oCACP;oCACA,KAAK;oCACL,aAAa;oCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wCACxC,KAAK;wCACL;oCACF,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,eAAe;wCACf,KAAK,OAAO,IAAI,IAAI,IAAI;oCAC1B,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;wBACA,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,KAAK;4BACL,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YAAY;oCACrB,aAAa;oCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wCAC3C,KAAK;wCACL,eAAe;oCACjB,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YACT,KAAK;wCAEP,KAAK,EAAE;wCACP,KAAK;wCACL,MAAO,OAAO,WAAY;4CACxB,GAAG,IAAI,CAAC;4CACR,KAAK;wCACP;wCACA,KAAK;wCACL,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,eAAe;4CACf,KAAK,OAAO,IAAI,IAAI,IAAI;wCAC1B,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;4BACA,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,KAAK;gCACL,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YAAY;wCACrB,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,KAAK;4CACL,IAAI,OAAO,YACT,KAAK;4CAEP,KAAK,EAAE;4CACP,KAAK;4CACL,MAAO,OAAO,WAAY;gDACxB,GAAG,IAAI,CAAC;gDACR,KAAK;4CACP;4CACA,KAAK;4CACL,aAAa;4CACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gDAC3C,KAAK;gDACL,eAAe;4CACjB,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,eAAe;gDACf,KAAK,OAAO,IAAI,IAAI,IAAI;4CAC1B,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;gCACA,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,KAAK;oCACL,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YAAY;4CACrB,aAAa;4CACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gDAC3C,KAAK;gDACL,eAAe;4CACjB,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,KAAK;gDACL,IAAI,OAAO,YACT,KAAK;gDAEP,KAAK,EAAE;gDACP,KAAK;gDACL,MAAO,OAAO,WAAY;oDACxB,GAAG,IAAI,CAAC;oDACR,KAAK;gDACP;gDACA,KAAK;gDACL,aAAa;gDACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oDAC3C,KAAK;oDACL,eAAe;gDACjB,OACE,KAAK;gDAEP,IAAI,OAAO,YAAY;oDACrB,eAAe;oDACf,KAAK,OAAO,IAAI,IAAI,IAAI;gDAC1B,OAAO;oDACL,cAAc;oDACd,KAAK;gDACP;4CACF,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;QAEhC,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;YACxC,KAAK;YACL;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YACT,KAAK;oBAEP,KAAK,EAAE;oBACP,KAAK;oBACL,MAAO,OAAO,WAAY;wBACxB,GAAG,IAAI,CAAC;wBACR,KAAK;oBACP;oBACA,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wBACxC,KAAK;wBACL;oBACF,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,eAAe;wBACf,KAAK,OAAO,IAAI,IAAI;oBACtB,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wBAC3C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YACT,KAAK;wBAEP,KAAK,EAAE;wBACP,KAAK;wBACL,MAAO,OAAO,WAAY;4BACxB,GAAG,IAAI,CAAC;4BACR,KAAK;wBACP;wBACA,KAAK;wBACL,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,eAAe;4BACf,KAAK,OAAO,IAAI,IAAI;wBACtB,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;YACA,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YAAY;wBACrB,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YACT,KAAK;4BAEP,KAAK,EAAE;4BACP,KAAK;4BACL,MAAO,OAAO,WAAY;gCACxB,GAAG,IAAI,CAAC;gCACR,KAAK;4BACP;4BACA,KAAK;4BACL,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,eAAe;gCACf,KAAK,OAAO,IAAI,IAAI;4BACtB,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;gBACA,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wBACxC,KAAK;wBACL;oBACF,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YAAY;4BACrB,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YACT,KAAK;gCAEP,KAAK,EAAE;gCACP,KAAK;gCACL,MAAO,OAAO,WAAY;oCACxB,GAAG,IAAI,CAAC;oCACR,KAAK;gCACP;gCACA,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oCAC3C,KAAK;oCACL,eAAe;gCACjB,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,eAAe;oCACf,KAAK,OAAO,IAAI,IAAI;gCACtB,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;oBACA,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,KAAK;wBACL,IAAI,OAAO,YAAY;4BACrB,aAAa;4BACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gCACxC,KAAK;gCACL;4BACF,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YACT,KAAK;gCAEP,KAAK,EAAE;gCACP,KAAK;gCACL,MAAO,OAAO,WAAY;oCACxB,GAAG,IAAI,CAAC;oCACR,KAAK;gCACP;gCACA,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oCACxC,KAAK;oCACL;gCACF,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,eAAe;oCACf,KAAK,QAAQ,IAAI,IAAI;gCACvB,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;wBACA,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,KAAK;4BACL,IAAI,OAAO,YAAY;gCACrB,aAAa;gCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oCAC3C,KAAK;oCACL,eAAe;gCACjB,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YACT,KAAK;oCAEP,KAAK,EAAE;oCACP,KAAK;oCACL,MAAO,OAAO,WAAY;wCACxB,GAAG,IAAI,CAAC;wCACR,KAAK;oCACP;oCACA,KAAK;oCACL,aAAa;oCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wCAC3C,KAAK;wCACL,eAAe;oCACjB,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,eAAe;wCACf,KAAK,QAAQ,IAAI,IAAI;oCACvB,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;4BACA,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,KAAK;gCACL,IAAI,OAAO,YAAY;oCACrB,aAAa;oCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wCAC3C,KAAK;wCACL,eAAe;oCACjB,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YACT,KAAK;wCAEP,KAAK,EAAE;wCACP,KAAK;wCACL,MAAO,OAAO,WAAY;4CACxB,GAAG,IAAI,CAAC;4CACR,KAAK;wCACP;wCACA,KAAK;wCACL,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,eAAe;4CACf,KAAK,QAAQ,IAAI,IAAI;wCACvB,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;gCACA,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,KAAK;oCACL,IAAI,OAAO,YAAY;wCACrB,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,KAAK;4CACL,IAAI,OAAO,YACT,KAAK;4CAEP,KAAK,EAAE;4CACP,KAAK;4CACL,MAAO,OAAO,WAAY;gDACxB,GAAG,IAAI,CAAC;gDACR,KAAK;4CACP;4CACA,KAAK;4CACL,aAAa;4CACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gDAC3C,KAAK;gDACL,eAAe;4CACjB,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,eAAe;gDACf,KAAK,QAAQ,IAAI,IAAI;4CACvB,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;QAEhC,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;YAC5C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YACT,KAAK;oBAEP,KAAK,EAAE;oBACP,KAAK;oBACL,MAAO,OAAO,WAAY;wBACxB,GAAG,IAAI,CAAC;wBACR,KAAK;oBACP;oBACA,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wBACxC,KAAK;wBACL;oBACF,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,eAAe;wBACf,KAAK,QAAQ,IAAI,IAAI;oBACvB,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;gBAC5C,KAAK;gBACL,eAAe;YACjB,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wBAC3C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YACT,KAAK;wBAEP,KAAK,EAAE;wBACP,KAAK;wBACL,MAAO,OAAO,WAAY;4BACxB,GAAG,IAAI,CAAC;4BACR,KAAK;wBACP;wBACA,KAAK;wBACL,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,eAAe;4BACf,KAAK,QAAQ,IAAI,IAAI;wBACvB,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;YACA,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,aAAa;gBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;oBAC5C,KAAK;oBACL,eAAe;gBACjB,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YAAY;wBACrB,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YACT,KAAK;4BAEP,KAAK,EAAE;4BACP,KAAK;4BACL,MAAO,OAAO,WAAY;gCACxB,GAAG,IAAI,CAAC;gCACR,KAAK;4BACP;4BACA,KAAK;4BACL,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,eAAe;gCACf,KAAK,QAAQ,IAAI,IAAI;4BACvB,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;gBACA,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;wBAC5C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YAAY;4BACrB,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YACT,KAAK;gCAEP,KAAK,EAAE;gCACP,KAAK;gCACL,MAAO,OAAO,WAAY;oCACxB,GAAG,IAAI,CAAC;oCACR,KAAK;gCACP;gCACA,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oCAC3C,KAAK;oCACL,eAAe;gCACjB,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,eAAe;oCACf,KAAK,QAAQ,IAAI,IAAI;gCACvB,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;oBACA,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,aAAa;wBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;4BACxC,KAAK;4BACL;wBACF,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YAAY;gCACrB,aAAa;gCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oCACxC,KAAK;oCACL;gCACF,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YACT,KAAK;oCAEP,KAAK,EAAE;oCACP,KAAK;oCACL,MAAO,OAAO,WAAY;wCACxB,GAAG,IAAI,CAAC;wCACR,KAAK;oCACP;oCACA,KAAK;oCACL,aAAa;oCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wCACxC,KAAK;wCACL;oCACF,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,eAAe;wCACf,KAAK,QAAQ,IAAI,IAAI;oCACvB,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;wBACA,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,aAAa;4BACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gCACxC,KAAK;gCACL;4BACF,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YAAY;oCACrB,aAAa;oCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wCAC3C,KAAK;wCACL,eAAe;oCACjB,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YACT,KAAK;wCAEP,KAAK,EAAE;wCACP,KAAK;wCACL,MAAO,OAAO,WAAY;4CACxB,GAAG,IAAI,CAAC;4CACR,KAAK;wCACP;wCACA,KAAK;wCACL,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,eAAe;4CACf,KAAK,QAAQ,IAAI,IAAI;wCACvB,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;4BACA,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oCACxC,KAAK;oCACL;gCACF,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YAAY;wCACrB,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,KAAK;4CACL,IAAI,OAAO,YACT,KAAK;4CAEP,KAAK,EAAE;4CACP,KAAK;4CACL,MAAO,OAAO,WAAY;gDACxB,GAAG,IAAI,CAAC;gDACR,KAAK;4CACP;4CACA,KAAK;4CACL,aAAa;4CACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gDAC3C,KAAK;gDACL,eAAe;4CACjB,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,eAAe;gDACf,KAAK,QAAQ,IAAI,IAAI;4CACvB,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;gCACA,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,aAAa;oCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wCACxC,KAAK;wCACL;oCACF,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YAAY;4CACrB,aAAa;4CACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gDAC3C,KAAK;gDACL,eAAe;4CACjB,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,KAAK;gDACL,IAAI,OAAO,YACT,KAAK;gDAEP,KAAK,EAAE;gDACP,KAAK;gDACL,MAAO,OAAO,WAAY;oDACxB,GAAG,IAAI,CAAC;oDACR,KAAK;gDACP;gDACA,KAAK;gDACL,aAAa;gDACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oDAC3C,KAAK;oDACL,eAAe;gDACjB,OACE,KAAK;gDAEP,IAAI,OAAO,YAAY;oDACrB,eAAe;oDACf,KAAK,QAAQ,IAAI,IAAI;gDACvB,OAAO;oDACL,cAAc;oDACd,KAAK;gDACP;4CACF,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;QAEhC,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;YAC5C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YACT,KAAK;oBAEP,KAAK,EAAE;oBACP,KAAK;oBACL,MAAO,OAAO,WAAY;wBACxB,GAAG,IAAI,CAAC;wBACR,KAAK;oBACP;oBACA,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wBACxC,KAAK;wBACL;oBACF,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,eAAe;wBACf,KAAK,QAAQ,IAAI,IAAI;oBACvB,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;gBAC5C,KAAK;gBACL,eAAe;YACjB,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wBAC3C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YACT,KAAK;wBAEP,KAAK,EAAE;wBACP,KAAK;wBACL,MAAO,OAAO,WAAY;4BACxB,GAAG,IAAI,CAAC;4BACR,KAAK;wBACP;wBACA,KAAK;wBACL,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,eAAe;4BACf,KAAK,QAAQ,IAAI,IAAI;wBACvB,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;YACA,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,aAAa;gBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;oBAC5C,KAAK;oBACL,eAAe;gBACjB,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YAAY;wBACrB,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YACT,KAAK;4BAEP,KAAK,EAAE;4BACP,KAAK;4BACL,MAAO,OAAO,WAAY;gCACxB,GAAG,IAAI,CAAC;gCACR,KAAK;4BACP;4BACA,KAAK;4BACL,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,eAAe;gCACf,KAAK,QAAQ,IAAI,IAAI;4BACvB,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;gBACA,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;wBAC5C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YAAY;4BACrB,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YACT,KAAK;gCAEP,KAAK,EAAE;gCACP,KAAK;gCACL,MAAO,OAAO,WAAY;oCACxB,GAAG,IAAI,CAAC;oCACR,KAAK;gCACP;gCACA,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oCAC3C,KAAK;oCACL,eAAe;gCACjB,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,eAAe;oCACf,KAAK,QAAQ,IAAI,IAAI;gCACvB,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;oBACA,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,aAAa;wBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;4BACxC,KAAK;4BACL;wBACF,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YAAY;gCACrB,aAAa;gCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oCACxC,KAAK;oCACL;gCACF,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YACT,KAAK;oCAEP,KAAK,EAAE;oCACP,KAAK;oCACL,MAAO,OAAO,WAAY;wCACxB,GAAG,IAAI,CAAC;wCACR,KAAK;oCACP;oCACA,KAAK;oCACL,aAAa;oCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wCACxC,KAAK;wCACL;oCACF,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,eAAe;wCACf,KAAK,QAAQ,IAAI,IAAI;oCACvB,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;wBACA,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,aAAa;4BACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gCACxC,KAAK;gCACL;4BACF,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YAAY;oCACrB,aAAa;oCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wCAC3C,KAAK;wCACL,eAAe;oCACjB,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YACT,KAAK;wCAEP,KAAK,EAAE;wCACP,KAAK;wCACL,MAAO,OAAO,WAAY;4CACxB,GAAG,IAAI,CAAC;4CACR,KAAK;wCACP;wCACA,KAAK;wCACL,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,eAAe;4CACf,KAAK,QAAQ,IAAI,IAAI;wCACvB,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;4BACA,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oCACxC,KAAK;oCACL;gCACF,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YAAY;wCACrB,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,KAAK;4CACL,IAAI,OAAO,YACT,KAAK;4CAEP,KAAK,EAAE;4CACP,KAAK;4CACL,MAAO,OAAO,WAAY;gDACxB,GAAG,IAAI,CAAC;gDACR,KAAK;4CACP;4CACA,KAAK;4CACL,aAAa;4CACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gDAC3C,KAAK;gDACL,eAAe;4CACjB,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,eAAe;gDACf,KAAK,QAAQ,IAAI,IAAI;4CACvB,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;gCACA,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,aAAa;oCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wCACxC,KAAK;wCACL;oCACF,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YAAY;4CACrB,aAAa;4CACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gDAC3C,KAAK;gDACL,eAAe;4CACjB,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,KAAK;gDACL,IAAI,OAAO,YACT,KAAK;gDAEP,KAAK,EAAE;gDACP,KAAK;gDACL,MAAO,OAAO,WAAY;oDACxB,GAAG,IAAI,CAAC;oDACR,KAAK;gDACP;gDACA,KAAK;gDACL,aAAa;gDACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oDAC3C,KAAK;oDACL,eAAe;gDACjB,OACE,KAAK;gDAEP,IAAI,OAAO,YAAY;oDACrB,eAAe;oDACf,KAAK,QAAQ,IAAI,IAAI;gDACvB,OAAO;oDACL,cAAc;oDACd,KAAK;gDACP;4CACF,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;QAExC,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;YAC5C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YACT,KAAK;oBAEP,KAAK,EAAE;oBACP,KAAK;oBACL,MAAO,OAAO,WAAY;wBACxB,GAAG,IAAI,CAAC;wBACR,KAAK;oBACP;oBACA,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wBACxC,KAAK;wBACL;oBACF,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,eAAe;wBACf,KAAK,QAAQ,IAAI,IAAI;oBACvB,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;gBAC5C,KAAK;gBACL,eAAe;YACjB,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wBAC3C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YACT,KAAK;wBAEP,KAAK,EAAE;wBACP,KAAK;wBACL,MAAO,OAAO,WAAY;4BACxB,GAAG,IAAI,CAAC;4BACR,KAAK;wBACP;wBACA,KAAK;wBACL,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,eAAe;4BACf,KAAK,QAAQ,IAAI,IAAI;wBACvB,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;YACA,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,aAAa;gBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;oBAC5C,KAAK;oBACL,eAAe;gBACjB,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YAAY;wBACrB,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YACT,KAAK;4BAEP,KAAK,EAAE;4BACP,KAAK;4BACL,MAAO,OAAO,WAAY;gCACxB,GAAG,IAAI,CAAC;gCACR,KAAK;4BACP;4BACA,KAAK;4BACL,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,eAAe;gCACf,KAAK,QAAQ,IAAI,IAAI;4BACvB,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;gBACA,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;wBAC5C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YAAY;4BACrB,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YACT,KAAK;gCAEP,KAAK,EAAE;gCACP,KAAK;gCACL,MAAO,OAAO,WAAY;oCACxB,GAAG,IAAI,CAAC;oCACR,KAAK;gCACP;gCACA,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oCAC3C,KAAK;oCACL,eAAe;gCACjB,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,eAAe;oCACf,KAAK,QAAQ,IAAI,IAAI;gCACvB,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;oBACA,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;4BAC5C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YAAY;gCACrB,aAAa;gCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oCACxC,KAAK;oCACL;gCACF,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YACT,KAAK;oCAEP,KAAK;oCACL,IAAI,OAAO,YAAY;wCACrB,KAAK,EAAE;wCACP,KAAK;wCACL,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;4CACxB,GAAG,IAAI,CAAC;4CACR,KAAK;wCACP;6CAEA,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,KAAK,EAAE;4CACP,KAAK;4CACL,MAAO,OAAO,WAAY;gDACxB,GAAG,IAAI,CAAC;gDACR,KAAK;4CACP;4CACA,KAAK;4CACL,aAAa;4CACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gDACxC,KAAK;gDACL;4CACF,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,eAAe;gDACf,KAAK,QAAQ,IAAI,IAAI,IAAI;4CAC3B,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;wBACA,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;gCAC5C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YAAY;oCACrB,aAAa;oCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wCAC3C,KAAK;wCACL,eAAe;oCACjB,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YACT,KAAK;wCAEP,KAAK;wCACL,IAAI,OAAO,YAAY;4CACrB,KAAK,EAAE;4CACP,KAAK;4CACL,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;gDACxB,GAAG,IAAI,CAAC;gDACR,KAAK;4CACP;iDAEA,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,KAAK,EAAE;gDACP,KAAK;gDACL,MAAO,OAAO,WAAY;oDACxB,GAAG,IAAI,CAAC;oDACR,KAAK;gDACP;gDACA,KAAK;gDACL,aAAa;gDACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oDAC3C,KAAK;oDACL,eAAe;gDACjB,OACE,KAAK;gDAEP,IAAI,OAAO,YAAY;oDACrB,eAAe;oDACf,KAAK,QAAQ,IAAI,IAAI,IAAI;gDAC3B,OAAO;oDACL,cAAc;oDACd,KAAK;gDACP;4CACF,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;4BACA,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;oCAC5C,KAAK;oCACL,eAAe;gCACjB,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YAAY;wCACrB,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,KAAK;4CACL,IAAI,OAAO,YACT,KAAK;4CAEP,KAAK;4CACL,IAAI,OAAO,YAAY;gDACrB,KAAK,EAAE;gDACP,KAAK;gDACL,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;oDACxB,GAAG,IAAI,CAAC;oDACR,KAAK;gDACP;qDAEA,KAAK;gDAEP,IAAI,OAAO,YAAY;oDACrB,KAAK,EAAE;oDACP,KAAK;oDACL,MAAO,OAAO,WAAY;wDACxB,GAAG,IAAI,CAAC;wDACR,KAAK;oDACP;oDACA,KAAK;oDACL,aAAa;oDACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wDAC3C,KAAK;wDACL,eAAe;oDACjB,OACE,KAAK;oDAEP,IAAI,OAAO,YAAY;wDACrB,eAAe;wDACf,KAAK,QAAQ,IAAI,IAAI,IAAI;oDAC3B,OAAO;wDACL,cAAc;wDACd,KAAK;oDACP;gDACF,OAAO;oDACL,cAAc;oDACd,KAAK;gDACP;4CACF,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;gCACA,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,aAAa;oCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;wCAC5C,KAAK;wCACL,eAAe;oCACjB,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YAAY;4CACrB,aAAa;4CACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gDAC3C,KAAK;gDACL,eAAe;4CACjB,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,KAAK;gDACL,IAAI,OAAO,YACT,KAAK;gDAEP,KAAK;gDACL,IAAI,OAAO,YAAY;oDACrB,KAAK,EAAE;oDACP,KAAK;oDACL,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;wDACxB,GAAG,IAAI,CAAC;wDACR,KAAK;oDACP;yDAEA,KAAK;oDAEP,IAAI,OAAO,YAAY;wDACrB,KAAK,EAAE;wDACP,KAAK;wDACL,MAAO,OAAO,WAAY;4DACxB,GAAG,IAAI,CAAC;4DACR,KAAK;wDACP;wDACA,KAAK;wDACL,aAAa;wDACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4DAC3C,KAAK;4DACL,eAAe;wDACjB,OACE,KAAK;wDAEP,IAAI,OAAO,YAAY;4DACrB,eAAe;4DACf,KAAK,QAAQ,IAAI,IAAI,IAAI;wDAC3B,OAAO;4DACL,cAAc;4DACd,KAAK;wDACP;oDACF,OAAO;wDACL,cAAc;wDACd,KAAK;oDACP;gDACF,OAAO;oDACL,cAAc;oDACd,KAAK;gDACP;4CACF,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;oCACA,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,aAAa;wCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,KAAK;4CACzC,KAAK;4CACL;wCACF,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,KAAK;4CACL,IAAI,OAAO,YAAY;gDACrB,aAAa;gDACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oDACxC,KAAK;oDACL;gDACF,OACE,KAAK;gDAEP,IAAI,OAAO,YAAY;oDACrB,KAAK;oDACL,IAAI,OAAO,YACT,KAAK;oDAEP,KAAK,EAAE;oDACP,KAAK;oDACL,MAAO,OAAO,WAAY;wDACxB,GAAG,IAAI,CAAC;wDACR,KAAK;oDACP;oDACA,KAAK;oDACL,aAAa;oDACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wDACxC,KAAK;wDACL;oDACF,OACE,KAAK;oDAEP,IAAI,OAAO,YAAY;wDACrB,eAAe;wDACf,KAAK,QAAQ,IAAI,IAAI;oDACvB,OAAO;wDACL,cAAc;wDACd,KAAK;oDACP;gDACF,OAAO;oDACL,cAAc;oDACd,KAAK;gDACP;4CACF,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;wCACA,IAAI,OAAO,YAAY;4CACrB,KAAK;4CACL,aAAa;4CACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,KAAK;gDACzC,KAAK;gDACL;4CACF,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,KAAK;gDACL,IAAI,OAAO,YAAY;oDACrB,aAAa;oDACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wDAC3C,KAAK;wDACL,eAAe;oDACjB,OACE,KAAK;oDAEP,IAAI,OAAO,YAAY;wDACrB,KAAK;wDACL,IAAI,OAAO,YACT,KAAK;wDAEP,KAAK,EAAE;wDACP,KAAK;wDACL,MAAO,OAAO,WAAY;4DACxB,GAAG,IAAI,CAAC;4DACR,KAAK;wDACP;wDACA,KAAK;wDACL,aAAa;wDACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4DAC3C,KAAK;4DACL,eAAe;wDACjB,OACE,KAAK;wDAEP,IAAI,OAAO,YAAY;4DACrB,eAAe;4DACf,KAAK,QAAQ,IAAI,IAAI;wDACvB,OAAO;4DACL,cAAc;4DACd,KAAK;wDACP;oDACF,OAAO;wDACL,cAAc;wDACd,KAAK;oDACP;gDACF,OAAO;oDACL,cAAc;oDACd,KAAK;gDACP;4CACF,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;4CACA,IAAI,OAAO,YAAY;gDACrB,KAAK;gDACL,aAAa;gDACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,KAAK;oDACzC,KAAK;oDACL;gDACF,OACE,KAAK;gDAEP,IAAI,OAAO,YAAY;oDACrB,KAAK;oDACL,IAAI,OAAO,YAAY;wDACrB,aAAa;wDACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4DAC3C,KAAK;4DACL,eAAe;wDACjB,OACE,KAAK;wDAEP,IAAI,OAAO,YAAY;4DACrB,KAAK;4DACL,IAAI,OAAO,YACT,KAAK;4DAEP,KAAK,EAAE;4DACP,KAAK;4DACL,MAAO,OAAO,WAAY;gEACxB,GAAG,IAAI,CAAC;gEACR,KAAK;4DACP;4DACA,KAAK;4DACL,aAAa;4DACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gEAC3C,KAAK;gEACL,eAAe;4DACjB,OACE,KAAK;4DAEP,IAAI,OAAO,YAAY;gEACrB,eAAe;gEACf,KAAK,QAAQ,IAAI,IAAI;4DACvB,OAAO;gEACL,cAAc;gEACd,KAAK;4DACP;wDACF,OAAO;4DACL,cAAc;4DACd,KAAK;wDACP;oDACF,OAAO;wDACL,cAAc;wDACd,KAAK;oDACP;gDACF,OAAO;oDACL,cAAc;oDACd,KAAK;gDACP;gDACA,IAAI,OAAO,YAAY;oDACrB,KAAK;oDACL,aAAa;oDACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,KAAK;wDACzC,KAAK;wDACL;oDACF,OACE,KAAK;oDAEP,IAAI,OAAO,YAAY;wDACrB,KAAK;wDACL,IAAI,OAAO,YAAY;4DACrB,aAAa;4DACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gEAC3C,KAAK;gEACL,eAAe;4DACjB,OACE,KAAK;4DAEP,IAAI,OAAO,YAAY;gEACrB,KAAK;gEACL,IAAI,OAAO,YACT,KAAK;gEAEP,KAAK,EAAE;gEACP,KAAK;gEACL,MAAO,OAAO,WAAY;oEACxB,GAAG,IAAI,CAAC;oEACR,KAAK;gEACP;gEACA,KAAK;gEACL,aAAa;gEACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oEAC3C,KAAK;oEACL,eAAe;gEACjB,OACE,KAAK;gEAEP,IAAI,OAAO,YAAY;oEACrB,eAAe;oEACf,KAAK,QAAQ,IAAI,IAAI;gEACvB,OAAO;oEACL,cAAc;oEACd,KAAK;gEACP;4DACF,OAAO;gEACL,cAAc;gEACd,KAAK;4DACP;wDACF,OAAO;4DACL,cAAc;4DACd,KAAK;wDACP;oDACF,OAAO;wDACL,cAAc;wDACd,KAAK;oDACP;oDACA,IAAI,OAAO,YAAY;wDACrB,KAAK;wDACL,aAAa;wDACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,KAAK;4DACzC,KAAK;4DACL;wDACF,OACE,KAAK;wDAEP,IAAI,OAAO,YAAY;4DACrB,KAAK;4DACL,IAAI,OAAO,YAAY;gEACrB,aAAa;gEACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oEACxC,KAAK;oEACL;gEACF,OACE,KAAK;gEAEP,IAAI,OAAO,YAAY;oEACrB,KAAK;oEACL,IAAI,OAAO,YACT,KAAK;oEAEP,KAAK;oEACL,IAAI,OAAO,YAAY;wEACrB,KAAK,EAAE;wEACP,KAAK;wEACL,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;4EACxB,GAAG,IAAI,CAAC;4EACR,KAAK;wEACP;6EAEA,KAAK;wEAEP,IAAI,OAAO,YAAY;4EACrB,KAAK,EAAE;4EACP,KAAK;4EACL,MAAO,OAAO,WAAY;gFACxB,GAAG,IAAI,CAAC;gFACR,KAAK;4EACP;4EACA,KAAK;4EACL,aAAa;4EACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gFACxC,KAAK;gFACL;4EACF,OACE,KAAK;4EAEP,IAAI,OAAO,YAAY;gFACrB,eAAe;gFACf,KAAK,QAAQ,IAAI,IAAI,IAAI;4EAC3B,OAAO;gFACL,cAAc;gFACd,KAAK;4EACP;wEACF,OAAO;4EACL,cAAc;4EACd,KAAK;wEACP;oEACF,OAAO;wEACL,cAAc;wEACd,KAAK;oEACP;gEACF,OAAO;oEACL,cAAc;oEACd,KAAK;gEACP;4DACF,OAAO;gEACL,cAAc;gEACd,KAAK;4DACP;wDACF,OAAO;4DACL,cAAc;4DACd,KAAK;wDACP;wDACA,IAAI,OAAO,YAAY;4DACrB,KAAK;4DACL,aAAa;4DACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,KAAK;gEACzC,KAAK;gEACL;4DACF,OACE,KAAK;4DAEP,IAAI,OAAO,YAAY;gEACrB,KAAK;gEACL,IAAI,OAAO,YAAY;oEACrB,aAAa;oEACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wEAC3C,KAAK;wEACL,eAAe;oEACjB,OACE,KAAK;oEAEP,IAAI,OAAO,YAAY;wEACrB,KAAK;wEACL,IAAI,OAAO,YACT,KAAK;wEAEP,KAAK;wEACL,IAAI,OAAO,YAAY;4EACrB,KAAK,EAAE;4EACP,KAAK;4EACL,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;gFACxB,GAAG,IAAI,CAAC;gFACR,KAAK;4EACP;iFAEA,KAAK;4EAEP,IAAI,OAAO,YAAY;gFACrB,KAAK,EAAE;gFACP,KAAK;gFACL,MAAO,OAAO,WAAY;oFACxB,GAAG,IAAI,CAAC;oFACR,KAAK;gFACP;gFACA,KAAK;gFACL,aAAa;gFACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oFAC3C,KAAK;oFACL,eAAe;gFACjB,OACE,KAAK;gFAEP,IAAI,OAAO,YAAY;oFACrB,eAAe;oFACf,KAAK,QAAQ,IAAI,IAAI,IAAI;gFAC3B,OAAO;oFACL,cAAc;oFACd,KAAK;gFACP;4EACF,OAAO;gFACL,cAAc;gFACd,KAAK;4EACP;wEACF,OAAO;4EACL,cAAc;4EACd,KAAK;wEACP;oEACF,OAAO;wEACL,cAAc;wEACd,KAAK;oEACP;gEACF,OAAO;oEACL,cAAc;oEACd,KAAK;gEACP;4DACF,OAAO;gEACL,cAAc;gEACd,KAAK;4DACP;4DACA,IAAI,OAAO,YAAY;gEACrB,KAAK;gEACL,aAAa;gEACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,KAAK;oEACzC,KAAK;oEACL;gEACF,OACE,KAAK;gEAEP,IAAI,OAAO,YAAY;oEACrB,KAAK;oEACL,IAAI,OAAO,YAAY;wEACrB,aAAa;wEACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4EAC3C,KAAK;4EACL,eAAe;wEACjB,OACE,KAAK;wEAEP,IAAI,OAAO,YAAY;4EACrB,KAAK;4EACL,IAAI,OAAO,YACT,KAAK;4EAEP,KAAK;4EACL,IAAI,OAAO,YAAY;gFACrB,KAAK,EAAE;gFACP,KAAK;gFACL,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;oFACxB,GAAG,IAAI,CAAC;oFACR,KAAK;gFACP;qFAEA,KAAK;gFAEP,IAAI,OAAO,YAAY;oFACrB,KAAK,EAAE;oFACP,KAAK;oFACL,MAAO,OAAO,WAAY;wFACxB,GAAG,IAAI,CAAC;wFACR,KAAK;oFACP;oFACA,KAAK;oFACL,aAAa;oFACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wFAC3C,KAAK;wFACL,eAAe;oFACjB,OACE,KAAK;oFAEP,IAAI,OAAO,YAAY;wFACrB,eAAe;wFACf,KAAK,QAAQ,IAAI,IAAI,IAAI;oFAC3B,OAAO;wFACL,cAAc;wFACd,KAAK;oFACP;gFACF,OAAO;oFACL,cAAc;oFACd,KAAK;gFACP;4EACF,OAAO;gFACL,cAAc;gFACd,KAAK;4EACP;wEACF,OAAO;4EACL,cAAc;4EACd,KAAK;wEACP;oEACF,OAAO;wEACL,cAAc;wEACd,KAAK;oEACP;gEACF,OAAO;oEACL,cAAc;oEACd,KAAK;gEACP;gEACA,IAAI,OAAO,YAAY;oEACrB,KAAK;oEACL,aAAa;oEACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,KAAK;wEACzC,KAAK;wEACL;oEACF,OACE,KAAK;oEAEP,IAAI,OAAO,YAAY;wEACrB,KAAK;wEACL,IAAI,OAAO,YAAY;4EACrB,aAAa;4EACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gFAC3C,KAAK;gFACL,eAAe;4EACjB,OACE,KAAK;4EAEP,IAAI,OAAO,YAAY;gFACrB,KAAK;gFACL,IAAI,OAAO,YACT,KAAK;gFAEP,KAAK;gFACL,IAAI,OAAO,YAAY;oFACrB,KAAK,EAAE;oFACP,KAAK;oFACL,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;wFACxB,GAAG,IAAI,CAAC;wFACR,KAAK;oFACP;yFAEA,KAAK;oFAEP,IAAI,OAAO,YAAY;wFACrB,KAAK,EAAE;wFACP,KAAK;wFACL,MAAO,OAAO,WAAY;4FACxB,GAAG,IAAI,CAAC;4FACR,KAAK;wFACP;wFACA,KAAK;wFACL,aAAa;wFACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4FAC3C,KAAK;4FACL,eAAe;wFACjB,OACE,KAAK;wFAEP,IAAI,OAAO,YAAY;4FACrB,eAAe;4FACf,KAAK,QAAQ,IAAI,IAAI,IAAI;wFAC3B,OAAO;4FACL,cAAc;4FACd,KAAK;wFACP;oFACF,OAAO;wFACL,cAAc;wFACd,KAAK;oFACP;gFACF,OAAO;oFACL,cAAc;oFACd,KAAK;gFACP;4EACF,OAAO;gFACL,cAAc;gFACd,KAAK;4EACP;wEACF,OAAO;4EACL,cAAc;4EACd,KAAK;wEACP;oEACF,OAAO;wEACL,cAAc;wEACd,KAAK;oEACP;gEACF;4DACF;wDACF;oDACF;gDACF;4CACF;wCACF;oCACF;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;QAEhC,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;YAC5C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YACT,KAAK;oBAEP,KAAK,EAAE;oBACP,KAAK;oBACL,MAAO,OAAO,WAAY;wBACxB,GAAG,IAAI,CAAC;wBACR,KAAK;oBACP;oBACA,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wBACxC,KAAK;wBACL;oBACF,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,eAAe;wBACf,KAAK,QAAQ,IAAI,IAAI;oBACvB,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;gBAC5C,KAAK;gBACL,eAAe;YACjB,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wBAC3C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YACT,KAAK;wBAEP,KAAK,EAAE;wBACP,KAAK;wBACL,MAAO,OAAO,WAAY;4BACxB,GAAG,IAAI,CAAC;4BACR,KAAK;wBACP;wBACA,KAAK;wBACL,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,eAAe;4BACf,KAAK,QAAQ,IAAI,IAAI;wBACvB,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;YACA,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,aAAa;gBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;oBAC5C,KAAK;oBACL,eAAe;gBACjB,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YAAY;wBACrB,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4BAC3C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YACT,KAAK;4BAEP,KAAK,EAAE;4BACP,KAAK;4BACL,MAAO,OAAO,WAAY;gCACxB,GAAG,IAAI,CAAC;gCACR,KAAK;4BACP;4BACA,KAAK;4BACL,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,eAAe;gCACf,KAAK,QAAQ,IAAI,IAAI;4BACvB,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;gBACA,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;wBAC5C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YAAY;4BACrB,aAAa;4BACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gCAC3C,KAAK;gCACL,eAAe;4BACjB,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YACT,KAAK;gCAEP,KAAK,EAAE;gCACP,KAAK;gCACL,MAAO,OAAO,WAAY;oCACxB,GAAG,IAAI,CAAC;oCACR,KAAK;gCACP;gCACA,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oCAC3C,KAAK;oCACL,eAAe;gCACjB,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,eAAe;oCACf,KAAK,QAAQ,IAAI,IAAI;gCACvB,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;oBACA,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,aAAa;wBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;4BACxC,KAAK;4BACL;wBACF,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YAAY;gCACrB,aAAa;gCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oCACxC,KAAK;oCACL;gCACF,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YACT,KAAK;oCAEP,KAAK,EAAE;oCACP,KAAK;oCACL,MAAO,OAAO,WAAY;wCACxB,GAAG,IAAI,CAAC;wCACR,KAAK;oCACP;oCACA,KAAK;oCACL,aAAa;oCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wCACxC,KAAK;wCACL;oCACF,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,eAAe;wCACf,KAAK,QAAQ,IAAI,IAAI;oCACvB,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;wBACF,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;wBACA,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,aAAa;4BACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gCACxC,KAAK;gCACL;4BACF,OACE,KAAK;4BAEP,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,IAAI,OAAO,YAAY;oCACrB,aAAa;oCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;wCAC3C,KAAK;wCACL,eAAe;oCACjB,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YACT,KAAK;wCAEP,KAAK,EAAE;wCACP,KAAK;wCACL,MAAO,OAAO,WAAY;4CACxB,GAAG,IAAI,CAAC;4CACR,KAAK;wCACP;wCACA,KAAK;wCACL,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,eAAe;4CACf,KAAK,QAAQ,IAAI,IAAI;wCACvB,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;4BACF,OAAO;gCACL,cAAc;gCACd,KAAK;4BACP;4BACA,IAAI,OAAO,YAAY;gCACrB,KAAK;gCACL,aAAa;gCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oCACxC,KAAK;oCACL;gCACF,OACE,KAAK;gCAEP,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,IAAI,OAAO,YAAY;wCACrB,aAAa;wCACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;4CAC3C,KAAK;4CACL,eAAe;wCACjB,OACE,KAAK;wCAEP,IAAI,OAAO,YAAY;4CACrB,KAAK;4CACL,IAAI,OAAO,YACT,KAAK;4CAEP,KAAK,EAAE;4CACP,KAAK;4CACL,MAAO,OAAO,WAAY;gDACxB,GAAG,IAAI,CAAC;gDACR,KAAK;4CACP;4CACA,KAAK;4CACL,aAAa;4CACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gDAC3C,KAAK;gDACL,eAAe;4CACjB,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,eAAe;gDACf,KAAK,QAAQ,IAAI,IAAI;4CACvB,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF,OAAO;oCACL,cAAc;oCACd,KAAK;gCACP;gCACA,IAAI,OAAO,YAAY;oCACrB,KAAK;oCACL,aAAa;oCACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wCACxC,KAAK;wCACL;oCACF,OACE,KAAK;oCAEP,IAAI,OAAO,YAAY;wCACrB,KAAK;wCACL,IAAI,OAAO,YAAY;4CACrB,aAAa;4CACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;gDAC3C,KAAK;gDACL,eAAe;4CACjB,OACE,KAAK;4CAEP,IAAI,OAAO,YAAY;gDACrB,KAAK;gDACL,IAAI,OAAO,YACT,KAAK;gDAEP,KAAK,EAAE;gDACP,KAAK;gDACL,MAAO,OAAO,WAAY;oDACxB,GAAG,IAAI,CAAC;oDACR,KAAK;gDACP;gDACA,KAAK;gDACL,aAAa;gDACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,QAAQ;oDAC3C,KAAK;oDACL,eAAe;gDACjB,OACE,KAAK;gDAEP,IAAI,OAAO,YAAY;oDACrB,eAAe;oDACf,KAAK,QAAQ,IAAI,IAAI;gDACvB,OAAO;oDACL,cAAc;oDACd,KAAK;gDACP;4CACF,OAAO;gDACL,cAAc;gDACd,KAAK;4CACP;wCACF,OAAO;4CACL,cAAc;4CACd,KAAK;wCACP;oCACF,OAAO;wCACL,cAAc;wCACd,KAAK;oCACP;gCACF;4BACF;wBACF;oBACF;gBACF;YACF;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI;QAEpB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,KAAK;QACL,aAAa;QACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;YACxC,KAAK;YACL;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,aAAa;YACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;gBAC1C,KAAK,MAAM,MAAM,CAAC;gBAClB;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,aAAa;gBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;oBAC1C,KAAK,MAAM,MAAM,CAAC;oBAClB;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;wBAAC;wBAAI;wBAAI;qBAAG;oBACjB,KAAK;gBACP,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,eAAe;YACf,KAAK,QAAQ;QACf;QACA,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,aAAa;gBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;oBAC1C,KAAK,MAAM,MAAM,CAAC;oBAClB;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;wBAAC;wBAAI;qBAAG;oBACb,KAAK;gBACP,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;YACA,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ;YACf;YACA,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,KAAK,EAAE;gBACP,aAAa;gBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;oBAC1C,KAAK,MAAM,MAAM,CAAC;oBAClB;gBACF,OACE,KAAK;gBAEP,MAAO,OAAO,WAAY;oBACxB,GAAG,IAAI,CAAC;oBACR,aAAa;oBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;wBAC1C,KAAK,MAAM,MAAM,CAAC;wBAClB;oBACF,OACE,KAAK;gBAET;gBACA,eAAe;gBACf,KAAK,QAAQ;gBACb,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI;QAEZ,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,KAAK,EAAE;QACP,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;YAC1C,KAAK,MAAM,MAAM,CAAC;YAClB;QACF,OACE,KAAK;QAEP,MAAO,OAAO,WAAY;YACxB,GAAG,IAAI,CAAC;YACR,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;gBAC1C,KAAK,MAAM,MAAM,CAAC;gBAClB;YACF,OACE,KAAK;QAET;QACA,eAAe;QACf,KAAK,QAAQ;QACb,KAAK;QAEL,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI;QAEpB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;YACxC,KAAK;YACL;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK,EAAE;YACP,KAAK;YACL,MAAO,OAAO,WAAY;gBACxB,GAAG,IAAI,CAAC;gBACR,KAAK;YACP;YACA,KAAK;YACL,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ;YACf,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI;QAEZ,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,KAAK;QACL,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,eAAe;YACf,KAAK,OAAO;QACd,OAAO;YACL,cAAc;YACd,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI;QAEJ,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YAAY;4BACrB,KAAK;4BACL,IAAI,OAAO,YACT,KAAK;wBAET;oBACF;gBACF;YACF;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;QAExB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YACT,KAAK;gBAEP,KAAK;gBACL;gBACA,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,QAAQ;gBACR,IAAI,OAAO,YACT,KAAK;qBACA;oBACL,cAAc;oBACd,KAAK;gBACP;gBACA,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK,QAAQ,IAAI,IAAI;gBACvB,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YACT,KAAK;oBAEP,KAAK;oBACL;oBACA,aAAa;oBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wBACxC,KAAK;wBACL;oBACF,OACE,KAAK;oBAEP,QAAQ;oBACR,IAAI,OAAO,YACT,KAAK;yBACA;wBACL,cAAc;wBACd,KAAK;oBACP;oBACA,IAAI,OAAO,YAAY;wBACrB,eAAe;wBACf,KAAK,QAAQ,IAAI,IAAI;oBACvB,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI;QAEhB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;YACxC,KAAK;YACL;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ;YACf,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI;QAEhB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;YAC5C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ;YACf,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI;QAER,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK,EAAE;QACP,aAAa;QACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;YAC1C,KAAK,MAAM,MAAM,CAAC;YAClB;QACF,OACE,KAAK;QAEP,MAAO,OAAO,WAAY;YACxB,GAAG,IAAI,CAAC;YACR,aAAa;YACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;gBAC1C,KAAK,MAAM,MAAM,CAAC;gBAClB;YACF,OACE,KAAK;QAET;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI;QAEhB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;YAC5C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YACT,KAAK;YAEP,aAAa;YACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;gBAC5C,KAAK;gBACL,eAAe;YACjB,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ;YACf,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;gBAC5C,KAAK;gBACL,eAAe;YACjB,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YACT,KAAK;gBAEP,aAAa;gBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;oBAC5C,KAAK;oBACL,eAAe;gBACjB,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK,QAAQ;gBACf,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;YACA,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,IAAI,OAAO,YACT,KAAK;oBAEP,aAAa;oBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;wBAC5C,KAAK;wBACL,eAAe;oBACjB,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,eAAe;wBACf,KAAK,QAAQ;oBACf,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;gBACA,IAAI,OAAO,YAAY;oBACrB,KAAK;oBACL,aAAa;oBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;wBACxC,KAAK;wBACL;oBACF,OACE,KAAK;oBAEP,IAAI,OAAO,YAAY;wBACrB,KAAK;wBACL,IAAI,OAAO,YACT,KAAK;wBAEP,aAAa;wBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;4BAC5C,KAAK;4BACL,eAAe;wBACjB,OACE,KAAK;wBAEP,IAAI,OAAO,YAAY;4BACrB,eAAe;4BACf,KAAK,QAAQ;wBACf,OAAO;4BACL,cAAc;4BACd,KAAK;wBACP;oBACF,OAAO;wBACL,cAAc;wBACd,KAAK;oBACP;gBACF;YACF;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI;QAEpB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;YAC5C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YACT,KAAK;YAEP,KAAK,EAAE;YACP,KAAK;YACL,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;gBACxB,GAAG,IAAI,CAAC;gBACR,KAAK;YACP;iBAEA,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ,IAAI;YACnB,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YACT,KAAK;gBAEP,KAAK,EAAE;gBACP,KAAK;gBACL,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;oBACxB,GAAG,IAAI,CAAC;oBACR,KAAK;gBACP;qBAEA,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK,QAAQ,IAAI;gBACnB,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI;QAEhB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;YAC1C,KAAK,MAAM,MAAM,CAAC;YAClB;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,eAAe;YACf,KAAK,QAAQ;QACf;QACA,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL;gBACA,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,QAAQ;gBACR,IAAI,OAAO,YACT,KAAK;qBACA;oBACL,cAAc;oBACd,KAAK;gBACP;gBACA,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK;gBACP,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI;QAExB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;YAC5C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YACT,KAAK;YAEP,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YACT,KAAK;YAEP,KAAK,EAAE;YACP,aAAa;YACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;gBAC1C,KAAK,MAAM,MAAM,CAAC;gBAClB;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;gBACxB,GAAG,IAAI,CAAC;gBACR,aAAa;gBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;oBAC1C,KAAK,MAAM,MAAM,CAAC;oBAClB;gBACF,OACE,KAAK;YAET;iBAEA,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ,IAAI,IAAI;YACvB,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YACT,KAAK;gBAEP,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;oBACxC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YACT,KAAK;gBAEP,KAAK,EAAE;gBACP,aAAa;gBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;oBAC1C,KAAK,MAAM,MAAM,CAAC;oBAClB;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;oBACxB,GAAG,IAAI,CAAC;oBACR,aAAa;oBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;wBAC1C,KAAK,MAAM,MAAM,CAAC;wBAClB;oBACF,OACE,KAAK;gBAET;qBAEA,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK,QAAQ,IAAI,IAAI;gBACvB,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI;QAEhB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;YAC5C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YACT,KAAK;YAEP,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ,IAAI;YACnB,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YACT,KAAK;gBAEP,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK,QAAQ,IAAI;gBACnB,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI;QAEhB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;YACxC,KAAK;YACL;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YACT,KAAK;YAEP,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ,IAAI;YACnB,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI;QAEhB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;YAC5C,KAAK;YACL,eAAe;QACjB,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,IAAI,OAAO,YACT,KAAK;YAEP,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ,IAAI;YACnB,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YACT,KAAK;gBAEP,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK,QAAQ,IAAI;gBACnB,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI;QAEpB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK,QAAQ,IAAI;gBACnB,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;YACA,IAAI,OAAO,YACT,KAAK;YAEP,eAAe;YACf,KAAK,QAAQ,IAAI;QACnB,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK,QAAQ;gBACf,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI;QAEhB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,KAAK,EAAE;QACP,aAAa;QACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;YAC1C,KAAK,MAAM,MAAM,CAAC;YAClB;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;YACxB,GAAG,IAAI,CAAC;YACR,aAAa;YACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;gBAC1C,KAAK,MAAM,MAAM,CAAC;gBAClB;YACF,OACE,KAAK;QAET;aAEA,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,eAAe;YACf,KAAK,QAAQ;QACf;QACA,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK,EAAE;gBACP,aAAa;gBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;oBAC1C,KAAK,MAAM,MAAM,CAAC;oBAClB;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;oBACxB,GAAG,IAAI,CAAC;oBACR,aAAa;oBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;wBAC1C,KAAK,MAAM,MAAM,CAAC;wBAClB;oBACF,OACE,KAAK;gBAET;qBAEA,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK,QAAQ;gBACf,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI;QAEZ,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,KAAK,EAAE;QACP,aAAa;QACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;YAC1C,KAAK,MAAM,MAAM,CAAC;YAClB;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YACT,MAAO,OAAO,WAAY;YACxB,GAAG,IAAI,CAAC;YACR,aAAa;YACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;gBAC1C,KAAK,MAAM,MAAM,CAAC;gBAClB;YACF,OACE,KAAK;QAET;aAEA,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,eAAe;YACf,KAAK,QAAQ;QACf;QACA,KAAK;QAEL,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI,IAAI;QAEpB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;YACxC,KAAK;YACL;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK,EAAE;YACP,KAAK;YACL,MAAO,OAAO,WAAY;gBACxB,GAAG,IAAI,CAAC;gBACR,KAAK;YACP;YACA,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ;YACf,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI;QAEZ,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,KAAK;QACL,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,eAAe;YACf,KAAK,QAAQ;QACf,OAAO;YACL,cAAc;YACd,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI;QAEhB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;YACxC,KAAK;YACL;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK,EAAE;YACP,aAAa;YACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;gBAC1C,KAAK,MAAM,MAAM,CAAC;gBAClB;YACF,OACE,KAAK;YAEP,MAAO,OAAO,WAAY;gBACxB,GAAG,IAAI,CAAC;gBACR,aAAa;gBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;oBAC1C,KAAK,MAAM,MAAM,CAAC;oBAClB;gBACF,OACE,KAAK;YAET;YACA,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ;YACf,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI,IAAI,IAAI;QAEhB,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;YACxC,KAAK;YACL;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,KAAK,EAAE;YACP,aAAa;YACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;gBAC1C,KAAK,MAAM,MAAM,CAAC;gBAClB;YACF,OACE,KAAK;YAEP,MAAO,OAAO,WAAY;gBACxB,GAAG,IAAI,CAAC;gBACR,aAAa;gBACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;oBAC1C,KAAK,MAAM,MAAM,CAAC;oBAClB;gBACF,OACE,KAAK;YAET;YACA,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,IAAI;gBACxC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK,QAAQ;YACf,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;QACF,OAAO;YACL,cAAc;YACd,KAAK;QACP;QACA,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,KAAK;gBACzC,KAAK;gBACL;YACF,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,aAAa;gBACb,IAAI,MAAM,UAAU,CAAC,iBAAiB,KAAK;oBACzC,KAAK;oBACL;gBACF,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK,QAAQ;gBACf,OAAO;oBACL,cAAc;oBACd,KAAK;gBACP;YACF,OAAO;gBACL,cAAc;gBACd,KAAK;YACP;YACA,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,KAAK;gBACL,eAAe;gBACf,KAAK;gBACL,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI;QAER,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK,EAAE;QACP,KAAK;QACL,MAAO,OAAO,WAAY;YACxB,GAAG,IAAI,CAAC;YACR,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI;QAER,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK;QACL,aAAa;QACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;YAC1C,KAAK,MAAM,MAAM,CAAC;YAClB;QACF,OACE,KAAK;QAEP,IAAI,OAAO,YAAY;YACrB,eAAe;YACf,KAAK,QAAQ;QACf;QACA,KAAK;QACL,IAAI,OAAO,YAAY;YACrB,KAAK;YACL,aAAa;YACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;gBAC5C,KAAK;gBACL,eAAe;YACjB,OACE,KAAK;YAEP,IAAI,OAAO,YAAY;gBACrB,eAAe;gBACf,KAAK;YACP;YACA,KAAK;YACL,IAAI,OAAO,YAAY;gBACrB,KAAK;gBACL,aAAa;gBACb,IAAI,MAAM,MAAM,CAAC,aAAa,OAAO,SAAS;oBAC5C,KAAK;oBACL,eAAe;gBACjB,OACE,KAAK;gBAEP,IAAI,OAAO,YAAY;oBACrB,eAAe;oBACf,KAAK;gBACP;gBACA,KAAK;YACP;QACF;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI,IAAI;QAER,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,KAAK,EAAE;QACP,KAAK;QACL,MAAO,OAAO,WAAY;YACxB,GAAG,IAAI,CAAC;YACR,KAAK;QACP;QAEA,OAAO;IACT;IAEA,SAAS;QACP,IAAI;QAEJ,IAAI,eAAe,SAAU,QAAQ;YACnC,IAAI,oBAAoB,GAAG,WAAW;QACxC;QAEA,aAAa;QACb,IAAI,OAAO,IAAI,CAAC,MAAM,MAAM,CAAC,eAAe;YAC1C,KAAK,MAAM,MAAM,CAAC;YAClB;QACF,OACE,KAAK;QAGP,OAAO;IACT;IAGE,MAAM,cAAc,OAAO,YAAY,CAAC;IACxC,MAAM,WAAW,OAAO,YAAY,CAAC;IAGvC;IACA,aAAa;IAEb,IAAI,eAAe,cAAc,gBAAgB,MAAM,MAAM,EAC3D,OAAO;SACF;QACL,IAAI,eAAe,cAAc,cAAc,MAAM,MAAM,EACzD,WAAW;QAGb,MAAM;IACR;AACF;kBAOe;IACb,aAAa;IACb,OAAO;AACT;;;ACt6KA;;;;;;;;;;;;;;;AAeA;;AAuNA,8CACC;AADD,6CAEC;AAFD,+CAGC;AAHD,gDAIC;AAJD,iDAKC;AALD,gDAMC;AAND,qDAOC;AAPD,oDAQC;AARD,iDASC;AATD,6DAUC;AAVD,sDAWC;AAXD,sDAYC;AAZD,0DAaC;AAbD,+CAcC;AAnOD;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAAS,mBAAmB,GAAG;IAC9B,IAAI,OAAO,MACV,OAAO;IAER,OAAO,IAAI,IAAI,CAAC;AACjB;AAEA,SAAS,YAAY,GAAG,EAAE,IAAI,EAAE,UAAU;IACzC,IAAI,CAAC,YACJ,IAAI,UAAU,CAAC;IAEhB,IAAI,CAAC,MACJ,OAAO;IAER,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;QACrC,IAAI,WAAW,mBAAmB,IAAI,CAAC,EAAE;QACzC,IAAI,MAAM,CAAC,CAAA,GAAA,0BAAgB,AAAD,EAAE,UAAU;IACvC;IACA,OAAO;AACR;AAEA,SAAS,yBAAyB,QAAQ,EAAE,QAAQ;IACnD,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,MAAM,EAAG,IACrC,SAAS,WAAW,CAAC,QAAQ,CAAC,EAAE;IAEjC,OAAO;AACR;AAEA,SAAS,eAAe,GAAG,EAAE,SAAS;IACrC,IAAI,MAAM,mBAAmB;IAC7B,IAAI,sBAAsB,CAAC;IAC3B,OAAO;AACR;AAEA,SAAS,aAAa,GAAG,EAAE,EAAE;IAC5B,IAAI,MAAM,KACT,IAAI,WAAW;SACT,IAAI,MAAM,KAChB,IAAI,aAAa;SACX,IAAI,MAAM,KAChB,IAAI,eAAe;SAEnB,MAAM,IAAI,MAAM;AAElB;AAEA,SAAS,YAAY,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,UAAU;IACzD,IAAI,IAAI,OAAO,mBAAmB;IAClC,IAAI,UACH,IAAI,CAAC;IAEN,OAAO,YAAY,CAAA,GAAA,2BAAgB,AAAD,EAAE,IAAI,SAAS;AAClD;AAEA,SAAS,WAAW,OAAO,EAAE,OAAO,EAAE,UAAU;IAC/C,OAAO,YAAY,CAAA,GAAA,2BAAgB,AAAD,EAAE,mBAAmB,WAAW,SAAS;AAC5E;AAEA,SAAS,WAAW,WAAW,EAAE,OAAO,EAAE,UAAU;IACnD,IAAI,MAAM,CAAA,GAAA,2BAAgB,AAAD;IACzB,eAAe,KAAK;IACpB,OAAO,YAAY,KAAK,SAAS;AAClC;AAEA,SAAS,UAAU,WAAW,EAAE,OAAO,EAAE,UAAU;IAClD,IAAI,MAAM,CAAA,GAAA,yBAAe,AAAD;IACxB,eAAe,KAAK;IACpB,OAAO,YAAY,KAAK,SAAS;AAClC;AAEA,SAAS,UAAU,QAAQ,EAAE,OAAO,EAAE,UAAU;IAC/C,OAAO,YAAY,CAAA,GAAA,uBAAc,AAAD,EAAE,WAAW,SAAS;AACvD;AAEA,SAAS,SAAS,GAAG,EAAE,OAAO,EAAE,UAAU;IACzC,OAAO,YAAY,CAAA,GAAA,qBAAa,AAAD,EAAE,MAAM,SAAS;AACjD;AAEA,SAAS,QAAQ,OAAO,EAAE,UAAU;IACnC,OAAO,YAAY,CAAA,GAAA,mBAAY,AAAD,KAAK,SAAS;AAC7C;AAEA,SAAS,YAAY,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU;IACzE,IAAI,IAAI,CAAA,GAAA,mBAAY,AAAD;IACnB,yBAAyB,GAAG;IAC5B,eAAe,GAAG;IAClB,YAAY,GAAG,SAAS;IACxB,aAAa,GAAG;IAChB,OAAO;AACR;AAEA,SAAS,wBAAwB,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU;IACrF,IAAI,IAAI,CAAA,GAAA,2CAAwB,AAAD;IAC/B,yBAAyB,GAAG;IAC5B,eAAe,GAAG;IAClB,YAAY,GAAG,SAAS;IACxB,aAAa,GAAG;IAChB,OAAO;AACR;AAEA,SAAS,eAAe,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU;IAC5E,IAAI,IAAI,CAAA,GAAA,yBAAe,AAAD;IACtB,yBAAyB,GAAG;IAC5B,eAAe,GAAG;IAClB,YAAY,GAAG,SAAS;IACxB,aAAa,GAAG;IAChB,OAAO;AACR;AAEA,SAAS,gBAAgB,IAAI,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU;IACnF,IAAI,UAAU,SAAM,qBAAqB,CAAC,mBAAmB;IAC7D,IAAI,IAAI,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACzB,yBAAyB,GAAG;IAC5B,eAAe,GAAG;IAClB,YAAY,GAAG,SAAS;IACxB,aAAa,GAAG;IAChB,OAAO;AACR;AAEA,SAAS,qBAAqB,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU;IAClF,IAAI,IAAI,CAAA,GAAA,qCAAqB,AAAD,EAAE;IAC9B,yBAAyB,GAAG;IAC5B,eAAe,GAAG;IAClB,YAAY,GAAG,SAAS;IACxB,aAAa,GAAG;IAChB,OAAO;AACR;AAEA,SAAS,iBAAiB,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,UAAU;IACnE,0DAA0D;IAC1D,IAAI,OAAO,mBAAmB;IAC9B,IAAI,IAAI;IACR,IAAI,SAAS;IACb,OAAO;QACN,KAAK;YACJ,IAAI,CAAA,GAAA,mBAAY,AAAD;YACf;QACD,KAAK;YACJ,IAAI,CAAA,GAAA,mBAAY,AAAD;YACf;QACD,KAAK;YACJ,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;YACvB;QACD,KAAK;YACJ,IAAI,CAAA,GAAA,2BAAgB,AAAD,EAAE,mBAAmB;YACxC;QACD,KAAK;YACJ,IAAI,CAAA,GAAA,yBAAe,AAAD,EAAE,mBAAmB;YACvC;QACD,KAAK;YACJ,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE,mBAAmB;YAC1C;QACD;YACC,MAAM,IAAI,MAAM,iCAAiC;IACnD;IACA,eAAe,GAAG;IAClB,YAAY,GAAG,SAAS;IACxB,OAAO;AAAE;AAEV,SAAS,iBAAiB,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,OAAO,EAAE,SAAS,EAAE,UAAU;IACxF,+CAA+C;IAC/C,IAAI,OAAO,mBAAmB;IAC9B,IAAI,IAAI;IACR,IAAI,SAAS;IACb,OAAO;QACN,KAAK;YACJ,IAAI,CAAA,GAAA,qBAAa,AAAD;YAChB,SAAS;YACT;QACD,KAAK;YACJ,IAAI,CAAA,GAAA,qBAAa,AAAD;YAChB,SAAS;YACT;QACD,KAAK;YACJ,IAAI,CAAA,GAAA,mBAAY,AAAD;YACf,SAAS;YACT;QACD;YACC,MAAM,IAAI,MAAM,sCAAsC;IACxD;IACA,yBAAyB,GAAG;IAC5B,eAAe,GAAG;IAClB,YAAY,GAAG,SAAS;IACxB,aAAa,GAAG;IAChB,OAAO;AACR;;;ACpOA;;;;;;;;;;;;;;;AAeA;;AA2PA,6DAAS;AAzPT;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAS;IAER,+DAA+D;IAE/D,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;QAAU;KAAS,EACrB,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC7C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,UAAU,IAAI,EAAE,CAAC;QACrB,IAAI,aAAa,KAAK,QAAQ,CAAC;QAC/B,IAAI,iBAAiB;QACrB,IAAI,IAAI;QACR,IAAI;YACH,KAAK,cAAc,CAAC,SAAS,IAAI;gBAChC,IAAI,SAAS,CAAA,GAAA,sBAAK,AAAD,EAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,4BAA4B,CAAC,SAAS,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAI,SAAS,CAAC,QACvG,sBACA,CAAC,iCAAiC,EAAE,IAAE,EAAE,CAAC,EACzC;gBACP,IAAI,CAAC,SAAM,MAAM,CAAC,SACjB,MAAM,CAAA,GAAA,6BAAmB,AAAD,EAAE;gBAE3B,IAAI,OAAO,aAAa,IACvB,iBAAiB,WAAW,oBAAoB,CAAC,KAAK,UAAU,CAAC,IAAI;gBAEtE;YACD;QACD,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO;iBAEP,MAAM;QAER;QACA,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,eAAe;IAEpC,6DAA6D;IAG7D,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;QAAU;KAAS,EACrB,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,UAAU,IAAI,EAAE,CAAC;QACrB,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,qDAAqD;QACrD,uDAAuD;QACvD,IAAI,aAAa,KAAK,QAAQ,CAAC;QAC/B,IAAI,iBAAiB;QACrB,IAAI,IAAI;QACR,IAAI;YACH,KAAK,cAAc,CAAC,SAAS,IAAI;gBAChC,IAAI,SAAS,CAAA,GAAA,sBAAK,AAAD,EAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,4BAA4B,CAAC,SAAS,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAI,SAAS,CAAC,QACvG,sBACA,CAAC,8BAA8B,EAAE,IAAE,EAAE,CAAC,EACtC;gBACP,iBAAiB,WAAW,oBAAoB,CAAC,QAAQ;gBACzD;YACD;QACD,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO;iBAEP,MAAM;QAER;QACA,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,YAAY;IAGjC,6DAA6D;IAE7D,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;QAAU;QAAS;KAAc,EACnC,SAAS,iBAAiB,GAAG,EAAE,oBAAoB;QAClD,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,UAAU,IAAI,EAAE,CAAC;QACrB,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,IAAI;QACR,IAAI,IAAI;QACR,IAAI;YACH,KAAK,cAAc,CAAC,SAAS,IAAI;gBAChC,IAAI,CAAA,GAAA,sBAAK,AAAD,EAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,6BAA6B,CAAC,SAAS,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAI,SAAS,CAAC,OAAO,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAI,SAAS,CAAC,KACtI,sBACA,CAAC,iCAAiC,EAAE,IAAE,EAAE,CAAC,EACzC;gBACP;YACD;QACD,EAAE,OAAM,GAAG;YACV,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO;iBAEP,MAAM;QAER;QACA,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,eAAe;IACpC,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,wBAAwB;IAG7C,+DAA+D;IAG/D,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAE;QAAS;KAAU,EACrB,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,UAAU,IAAI,EAAE,CAAC;QACrB,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,SAAS;QACb,IAAI,IAAI;QACR,IAAI;YACH,KAAK,cAAc,CAAC,SAAS,IAAI;gBAChC,SAAS,CAAA,GAAA,sBAAK,AAAD,EAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,4BAA4B,CAAC,SAAS,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAI,SAAS,CAAC,QACnG,sBACA,CAAC,gDAAgD,EAAE,IAAE,EAAE,CAAC,EACxD;gBACP;YACD;QACD,EAAE,OAAO,GAAG;YACX,IAAI,SAAM,YAAY,CAAC,IACtB,OAAO;iBAEP,MAAM;QAER;QACA,OAAO,SAAS,SAAS,CAAA,GAAA,mBAAY,AAAD;IACrC,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;QAAgB;QAAU;KAAS,EACrC,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,gBAAgB,IAAI,EAAE,CAAC;QAC3B,IAAI,SAAS,IAAI,EAAE,CAAC;QACpB,IAAI,QAAQ,IAAI,EAAE,CAAC;QACnB,IAAI,QAAQ;QACZ,IAAI,OAAO;QACX,IAAI,MAAM;QACV,IAAI,UAAU,CAAA,GAAA,sBAAO,AAAD,GACnB,OAAO,cAAc,aAAa;aAC5B;YACN,QAAQ,cAAc,aAAa;YACnC,OAAO,OAAO,aAAa;YAC3B,IAAI,SAAS,CAAA,GAAA,sBAAO,AAAD,GAClB,MAAM,MAAM,aAAa;QAE3B;QACA,IAAI,OAAO,KAAK,QAAQ,QAAQ,MAAM,KAAK,OAAO,SAAS,MAAM,GAChE,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE5B,IAAI,SAAS,CAAA,GAAA,mBAAY,AAAD;QACxB,IAAI,iBAAiB;QACrB,IAAK,IAAI,IAAI,OAAQ,KAAK,MAAM,KAAK,IAAK;YACzC,IAAI,UAAU,CAAA,GAAA,2BAAgB,AAAD,EAAE;YAC/B,iBAAiB,OAAO,oBAAoB,CAAC,SAAS;QACvD;QACA,OAAO;IACR,GACA,CAAC,sDAAsD,CAAC;IAKzD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;QAAU;QAAS;QAAS;KAAO,EACrC,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,QAAQ,IAAI,EAAE,CAAC;QACnB,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,OAAO,IAAI,EAAE,CAAC;QAElB,qBAAqB;QACrB,IAAI,iBAAiB,CAAA,GAAA,sBAAK,AAAD,EAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,8BAA8B,CAAC,QACpE,sBACG,CAAC,oCAAoC,CAAC;QACpD,IAAI,SAAM,YAAY,CAAC,iBAAiB,OAAO;QAE/C,IAAI,aAAa;QACjB,MAAM,KAAM;YACX,mCAAmC;YACnC,IAAI,UAAU,CAAA,GAAA,sBAAK,AAAD,EAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,4BAA4B,CAAC,MAAM,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAI,SAAS,CAAC,kBACpG,sBACA,CAAC,6BAA6B,CAAC;YACvC,IAAI,SAAM,YAAY,CAAC,UAAU,OAAO;YAExC,IAAI,CAAC,SAAM,MAAM,CAAC,UACjB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;YAE5B,IAAI,CAAC,QAAQ,aAAa,IACzB;YAGD,eAAe;YACf,IAAI,UAAU,CAAA,GAAA,sBAAK,AAAD,EAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,4BAA4B,CAAC,MAAM,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAI,SAAS,CAAC,kBACpG,sBACA,CAAC,6BAA6B,CAAC;YACvC,IAAI,SAAM,YAAY,CAAC,UAAU,OAAO;YAGxC,YAAY;YACZ,IAAI,SAAS,CAAA,GAAA,sBAAK,AAAD,EAAE,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,4BAA4B,CAAC,KAAK,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAI,SAAS,CAAC,kBACnG,sBACA,CAAC,oCAAoC,CAAC;YAC7C,IAAI,SAAM,YAAY,CAAC,SAAS,OAAO;YAEvC,iBAAiB;QAElB;QACA,OAAO,aAAa,aAAa,CAAA,GAAA,mBAAY,AAAD;IAC7C,GACA,CAAC,sLAAsL,CAAC;IAGzL,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,oCAAoC;AAE1D;;;ACxQA;;;;;;;;;;;;;;;AAeA;;AAwGA,yDAAS;AAtGT;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAS;IAER,iEAAiE;IAGjE,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;QAAS;KAAS,EACpB,SAAS,KAAK,GAAG,EAAE,oBAAoB;QACtC,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,IAAI,EAAE,CAAC,QAAQ,aAAa,MAAM,IAAI,EAAE,CAAC,QAAQ,aAAa;IACpF,GACA,kEACA;IAGD,iEAAiE;IAGjE,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,iBACA;QAAE;KAAU,EACZ,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC9C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,WAAW,IAAI,IAAK;YAC3C,IAAI,IAAI,IAAI,UAAU,CAAC;YACvB,IAAI,SAAS,CAAA,GAAA,wBAAO,AAAD,EAAE,CAAA,GAAA,8BAAiB,AAAD,EAAE,GAAG;YAC1C,IAAI,OAAO,WAAW,MAAM,SAC3B,OAAO;QAET;QACA,OAAO,CAAA,GAAA,mBAAY,AAAD;IACnB,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,QAAQ;IAE7B,iEAAiE;IAEjE,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,gBACA;QAAE;QAAS;QAAW;KAAa,EACnC,SAAS,IAAI,GAAG,EAAE,oBAAoB;QACrC,IAAI,IAAI,IAAI,EAAE,CAAC,QAAQ,aAAa;QACpC,IAAI,SAAS,IAAI,EAAE,CAAC;QACpB,IAAI,UAAU,IAAI,EAAE,CAAC;QACrB,IAAI,WAAW,CAAA,GAAA,sBAAO,AAAD,GACpB,UAAU,CAAA,GAAA,mBAAY,AAAD;QAEtB,IAAI,GAAG;YACN,IAAI,eAAe,CAAA,GAAA,8BAAiB,AAAD,EAAE,QAAQ;YAC7C,IAAI,SAAM,YAAY,CAAC,eACtB,OAAO,CAAA,GAAA,sBAAS,AAAD,EAAE,WAAW,qCAAqC;YAElE,OAAO;QACR,OAAO;YACN,IAAI,gBAAgB,CAAA,GAAA,8BAAiB,AAAD,EAAE,SAAS;YAC/C,IAAI,SAAM,YAAY,CAAC,gBACtB,OAAO,CAAA,GAAA,sBAAS,AAAD,EAAE,WAAW,qCAAqC;YAElE,OAAO;QACR;IACD,GACA;IAED,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,MAAM;IAG3B,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;KAAQ,EACV,SAAS,KAAK,GAAG,EAAE,oBAAoB;QACtC,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,CAAC,IAAI,EAAE,CAAC,OAAO,aAAa;IAClD,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,MACA;QAAE;QAAS;KAAS,EACpB,SAAS,IAAI,GAAG,EAAE,oBAAoB;QACrC,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,IAAI,EAAE,CAAC,QAAQ,aAAa,MAAM,IAAI,EAAE,CAAC,QAAQ,aAAa;IACpF,GACA,2EACA;AAIF;;;ACrHA;;;;;;;;;;;;;;;AAeA;;AA2LA,wDAAS;AAzLT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAS;IAER,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,kBACA,EAAE,EACF,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAChD,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,IAAI;QACR,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA,EAAE,EACF,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,OAAO,CAAA,GAAA,mBAAY,AAAD;IACnB,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,gBACA;QAAC;KAAS,EACV,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC9C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,MAAM;QACV,IAAK,IAAI,IAAI,GAAI,IAAI,KAAK,WAAW,IAAI,IAAK;YAC7C,IAAI,MAAM,KAAK,UAAU,CAAC;YAC1B,qCAAqC;YACrC,IAAI,KAAK,KAAK,IAAI,WAAW,MAAM,YAClC,MAAM,CAAA,GAAA,2BAAgB,AAAD,EAAE,IAAI,aAAa;iBAClC;gBACN,IAAI,CAAC,KACJ,MAAM,CAAA,GAAA,2BAAgB,AAAD;gBAEtB,IAAI,WAAW,CAAC;YACjB;QACD;QACA,IAAI,CAAC,KACJ,MAAM,CAAA,GAAA,2BAAgB,AAAD;QAEtB,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAC;KAAS,EACV,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,IAAI,CAAA,GAAA,mBAAY,AAAD;QACnB,IAAK,IAAI,IAAI,GAAI,IAAI,KAAK,WAAW,IAAI,IACxC,EAAE,WAAW,CAAC,KAAK,UAAU,CAAC;QAE/B,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,yBACA;QAAE;KAAW,EACb,SAAS,qBAAqB,GAAG,EAAE,oBAAoB;QACtD,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,IAAI,CAAA,GAAA,2CAAwB,AAAD;QAC/B,IAAK,IAAI,IAAI,GAAI,IAAI,KAAK,WAAW,IAAI,IAAK;YAC7C,IAAI,IAAI,SAAS,UAAU,CAAC;YAC5B,EAAE,WAAW,CAAC;QACf;QACA,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,eACA;QAAC;KAAS,EACV,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC7C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,IAAI,CAAA,GAAA,yBAAe,AAAD;QACtB,IAAK,IAAI,IAAI,GAAI,IAAI,KAAK,WAAW,IAAI,IAAK;YAC7C,IAAI,IAAI,KAAK,UAAU,CAAC;YACxB,EAAE,WAAW,CAAC;QACf;QACA,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAC;KAAS,EACV,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,IAAI,CAAA,GAAA,qBAAa,AAAD;QACpB,IAAK,IAAI,IAAI,GAAI,IAAI,KAAK,WAAW,IAAI,IACxC,EAAE,WAAW,CAAC,KAAK,UAAU,CAAC;QAE/B,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAC;KAAS,EACV,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,IAAI,CAAA,GAAA,qBAAa,AAAD;QACpB,IAAK,IAAI,IAAI,GAAI,IAAI,KAAK,WAAW,IAAI,IACxC,EAAE,WAAW,CAAC,KAAK,UAAU,CAAC;QAE/B,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAC;KAAS,EACV,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,IAAI,CAAA,GAAA,mBAAY,AAAD;QACnB,IAAK,IAAI,IAAI,GAAI,IAAI,KAAK,WAAW,IAAI,IACxC,EAAE,WAAW,CAAC,KAAK,UAAU,CAAC;QAE/B,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA;QAAC;KAAO,EACR,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,CAAA,GAAA,yBAAe,AAAD,EAAE,IAAI,iBAAiB;QAC7C,EAAE,YAAY,CAAC,CAAA,GAAA,0BAAgB,AAAD;QAC9B,EAAE,iBAAiB;QACnB,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,gBACA;QAAC;KAAO,EACR,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC9C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,CAAA,GAAA,yBAAe,AAAD,EAAE,IAAI,iBAAiB;QAC7C,EAAE,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QAC7B,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAC;KAAO,EACR,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,CAAA,GAAA,yBAAe,AAAD,EAAE,IAAI,iBAAiB;QAC7C,EAAE,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QAC7B,OAAO;IACR,GACA;AAEF;;;ACxMA;;;;;;;;;;;;;;;AAeA;;AA4eA,wDAAS;AA1eT;AAEA;AACA;AACA;AACA;AACA;AACA;AAGA,SAAS;IAER,uBAAuB;IAEvB,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SAAS,GAAG,KACZ;QAAE;QAAS;KAAU,EACrB,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,KAAK,CAAA,GAAA,sBAAO,AAAD,GAAG;YACjB,IAAI,IAAK,CAAC,EAAE,aAAa;YACzB,IAAI,SAAM,OAAO,CAAC,IACjB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;iBAEtB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;QAE1B,OAAO;YACN,IAAI,SAAS,EAAE,aAAa,KAAK,EAAE,aAAa;YAChD,IAAI,SAAM,OAAO,CAAC,MACb,SAAM,OAAO,CAAC,IAClB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;iBAEtB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;QAE1B;IACD,GACA,oDACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aAAa,GAAG,MAChB;QAAE;QAAS;KAAS,EACpB,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAK,KAAK;QACd,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;IACtB,GACA,yEACA;IAGD,+DAA+D;IAE/D,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,QAAQ;QACZ,IAAI,aAAa;QACjB,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,IAAI,IAAK;YAC1C,IAAI,MAAM,GAAG,UAAU,CAAC;YACxB,IAAI,SAAM,OAAO,CAAC,MACjB,aAAa;YAEd,SAAS,IAAI,aAAa;QAC3B;QACA,IAAI,IAAI,aAAa,CAAA,GAAA,uBAAc,AAAD,EAAE,SAAS,CAAA,GAAA,2BAAgB,AAAD,EAAE;QAC9D,OAAO;IACR;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QAAQ,GAAG,KACX;QAAE;KAAY,EACd,OACA,8CACA;IAGD,+DAA+D;IAE/D,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC9C,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAK,IAAI;QACb,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;IACtB;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,gBAAgB,GAAG,KACnB;QAAE;QAAS;KAAS,EACpB,cACA,kFACA;IAGD,+DAA+D;IAE/D,SAAS,sBAAsB,GAAG,EAAE,oBAAoB;QACvD,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAK,KAAK;QACd,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;IACtB;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,4BAA4B,GAAG,MAC/B;QAAE;QAAS;KAAS,EACpB,uBACA,qFACA;IAGD,+DAA+D;IAE/D,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAK,IAAI;QACb,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;IACtB;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aAAa,GAAG,KAChB;QAAE;QAAS;KAAS,EACpB,WACA,+EACA;IAGD,+DAA+D;IAE/D,SAAS,mBAAmB,GAAG,EAAE,oBAAoB;QACpD,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAK,KAAK;QACd,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;IACtB;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,yBAAyB,GAAG,MAC5B;QAAE;QAAS;KAAS,EACpB,oBACA,kFACA;IAGD,+DAA+D;IAE/D,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,EAAE,aAAa,MAAM,GACxB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE5B,IAAI,SAAS,EAAE,aAAa,KAAK,EAAE,aAAa;QAChD,IAAI,SAAM,OAAO,CAAC,MACb,SAAM,OAAO,CAAC,IAClB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;aAEtB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IAE1B;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cAAc,GAAG,KACjB;QAAE;QAAW;KAAW,EACxB,YACA,oDACA;IAGD,+DAA+D;IAE/D,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAK,KAAK;QACd,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;IACtB;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UAAU,GAAG,KACb;QAAE;QAAS;KAAS,EACpB,SACA,sEACA;IAGD,+DAA+D;IAE/D,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,SAAS;QACb,IAAI,aAAa;QACjB,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,IAAI,IAAK;YAC1C,IAAI,MAAM,GAAG,UAAU,CAAC;YACxB,IAAI,SAAM,OAAO,CAAC,MACjB,aAAa;YAEd,UAAU,IAAI,aAAa;QAC5B;QACA,IAAI,IAAI,aAAa,CAAA,GAAA,uBAAc,AAAD,EAAE,UAAU,CAAA,GAAA,2BAAgB,AAAD,EAAE;QAC/D,OAAO;IACR;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SAAS,GAAG,KACZ;QAAE;KAAa,EACf,QACA,+CACA;IAGD,+DAA+D;IAE/D,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAK,EAAE;IAC9B;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA,EAAG,EACH,QACA;IAGD,+DAA+D;IAE/D,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAK,CAAC;IAC7B;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA,EAAG,EACH,OACA;IAGD,+DAA+D;IAE/D,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,KAAK,IAAI,CAAC;QAClB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;KAAQ,EACV,OACA;IAGD,+DAA+D;IAE/D,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,KAAK,IAAI,CAAC;QAClB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;KAAQ,EACV,OACA;IAGD,+DAA+D;IAE/D,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,KAAK,IAAI,CAAC;QAClB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,QACA;QAAE;KAAQ,EACV,OACA;IAGD,+DAA+D;IAE/D,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAK,KAAK,CAAC,GAAG;IACrC;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;QAAM;KAAM,EACd,QACA;IAGD,+DAA+D;IAE/D,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,KAAK,IAAI,CAAC;QACd,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,WACA;QAAE;KAAQ,EACV,UACA;IAGD,+DAA+D;IAE/D,SAAS,KAAK,GAAG,EAAE,oBAAoB;QACtC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,KAAK,GAAG,CAAC;QACjB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;KAAQ,EACV,MACA;IAGD,+DAA+D;IAE/D,SAAS,KAAK,GAAG,EAAE,oBAAoB;QACtC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAK,GAAG,CAAC;IAChC;IAEA,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;KAAM,EACR,MACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;KAAQ,EACV,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,KAAK,KAAK,CAAC;QACf,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB,GACA;IAID,qCAAqC;IACrC,+BAA+B;IAC/B,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;KAAM,EACR,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACvC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAK,GAAG,CAAC;IAChC,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;KAAM,EACR,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAK,KAAK,CAAC;IAClC,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;KAAM,EACR,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAK,IAAI,CAAC;IACjC,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;QAAU;KAAY,EACxB,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,SAAS,EAAE,aAAa,KAAK,EAAE,aAAa;QAChD,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACzB,GACA,2DACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;QAAM;KAAM,EACd,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAK,GAAG,CAAC,GAAI,MAAI;IACxC,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;QAAM;KAAM,EACd,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAK,GAAG,CAAC,GAAG;IACnC,GACA,uDACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA,EAAE,EACF,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,IAAI,KAAK,MAAM;QACnB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;KAAQ,EACV,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,KAAK,KAAK,CAAC;QACf,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;KAAQ,EACV,SAAS,KAAK,GAAG,EAAE,oBAAoB;QACtC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,KAAK,GAAG,CAAC;QACjB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,eACA;QAAE;KAAM,EACR,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC7C,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QACjC,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAK,IAAI,CAAC;IACjC,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,OACA;QAAE;KAAQ,EACV,SAAS,KAAK,GAAG,EAAE,oBAAoB;QACtC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,KAAK,GAAG,CAAC;QACjB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB,GACA;AAEF;;;ACzfA;;;;;;;;;;;;;;;AAeA;;AAgJA,0DAAS;AA9IT;AACA;AACA;AACA;AACA;AACA;AAEA,SAAS;IAER,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,sBACA;QAAE;KAAW,EACb,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,IAAI,IAAI;QACR,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,IAAI,IAAK;YAC1C,IAAI,IAAI,GAAG,UAAU,CAAC,GAAG,iBAAiB;YAC1C,KAAK;QACN;QACA,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACzB,GACA;IAED,8BAA8B;IAC9B,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,cAAc;IAEnC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,kBACA;QAAE;QAAQ;KAAQ,EAClB,SAAS,cAAc,GAAG,EAAE,oBAAoB;QAC/C,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,iBAAiB;QACvC,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,aAAa;QACnC,IAAI,IAAI,KAAK,KAAK,EAAE,MAAM,EACzB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,sBAAsB,EAAE,EAAE,6BAA6B,EAAE,EAAE,yBAAyB,EAAE,EAAE,MAAM,GAAG,EAAE,mBAAmB,CAAC;QAEpJ,IAAI,IAAI,EAAE,MAAM,CAAC;QACjB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACzB,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,mBACA;QAAE;QAAQ;KAAW,EACrB,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAChD,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,iBAAiB;QACvC,IAAI,SAAS,IAAI,EAAE,CAAC,UAAU,iBAAiB;QAC/C,IAAI,IAAI,EAAE,OAAO,CAAC;QAClB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACzB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,kBACA;QAAE;QAAU;KAAO,EACnB,SAAS,cAAc,GAAG,EAAE,oBAAoB;QAC/C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,KAAK,IAAI,EAAE,CAAC,MAAM,iBAAiB;QACvC,IAAI,IAAI;QACR,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,WAAW,IAAI,IACtC,IAAI,CAAC,EAAE,EAAE,EAAE,IAAI,IAAI,KAAK,GAAG,EAAE,IAAI,UAAU,CAAC,GAAG,iBAAiB,GAAG,CAAC;QAErE,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACzB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,iBACA;QAAE;KAAQ,EACV,SAAS,cAAc,GAAG,EAAE,oBAAoB;QAC/C,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,iBAAiB;QACvC,IAAI,MAAM,EAAE,MAAM;QAClB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACzB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,kBACA;QAAE;KAAQ,EACV,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAChD,IAAI,IAAI,CAAA,GAAA,qBAAa,AAAD;QACpB,IAAI,IAAI,IAAI,EAAE,CAAC,OAAO,iBAAiB;QACvC,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAAK;YAClC,IAAI,IAAI,EAAE,MAAM,CAAC;YACjB,IAAI,KAAK,CAAA,GAAA,2BAAgB,AAAD,EAAE;YAC1B,EAAE,WAAW,CAAC;QACf;QACA,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,mBACA;QAAE;QAAQ;KAAO,EACjB,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAChD,IAAI,MAAM,IAAI,EAAE,CAAC,OAAO,iBAAiB;QACzC,IAAI,KAAK,IAAI,EAAE,CAAC,MAAM,iBAAiB;QACvC,IAAI,MAAM,CAAA,GAAA,qBAAa,AAAD;QACtB,IAAI,IAAI,IAAI,KAAK,CAAC;QAClB,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,MAAM,EAAE,IAAK;YAClC,IAAI,SAAS,CAAA,GAAA,2BAAgB,AAAD,EAAE,CAAC,CAAC,EAAE;YAClC,IAAI,WAAW,CAAC;QACjB;QACA,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,oBACA;QAAE;QAAQ;QAAU;KAAQ,EAC5B,SAAS,iBAAiB,GAAG,EAAE,oBAAoB;QAClD,IAAI,MAAM,IAAI,EAAE,CAAC,OAAO,iBAAiB;QACzC,IAAI,QAAQ,IAAI,EAAE,CAAC,SAAS,aAAa;QACzC,IAAI,MAAM,IAAI,EAAE,CAAC,OAAO,aAAa;QACrC,IAAI,IAAI,IAAI,MAAM,CAAC,OAAO;QAC1B,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACzB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,mBACA;QAAE;KAAQ,EACV,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAChD,IAAI,MAAM,IAAI,EAAE,CAAC,OAAO,iBAAiB;QACzC,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,OAAO;IAC7B,GACA;AAEF;;;AC7JA;;;;;;;;;;;;;;;AAeA;;AAuPA,oDAAS;AArPT;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;;CAEC,GACD,SAAS;IAER,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,gBACA,EAAG,EACH,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC9C,IAAI,WAAW,CAAA,GAAA,6BAAW,AAAD;QACzB,IAAI,MAAM,CAAA,GAAA,wBAAiB,AAAD,EAAE;QAC5B,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,sBACA;QAAE;KAAO,EACT,SAAS,kBAAkB,GAAG,EAAE,oBAAoB;QACnD,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,OAAO,MAAM,GACpB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE5B,IAAI,SAAS,IAAI,MAAM,CAAC,GAAG,YAAY;QACvC,IAAI,CAAC,CAAA,GAAA,gCAAc,AAAD,EAAE,SACnB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,oCAAoC,EAAE,OAAO,CAAC,CAAC;QAE5E,IAAI,SAAM,OAAO,CAAC,QAAQ,SAAM,SAAS,CAAC,MAAM;YAC/C,IAAI,IAAI,OAAO,IAAI,aAAa;YAChC,CAAA,GAAA,iCAAe,AAAD,EAAE,QAAQ;QACzB,OACC,CAAA,GAAA,iCAAe,AAAD,EAAE,QAAQ,KAAK,IAAI,aAAa;QAE/C,IAAI,WAAW,CAAA,GAAA,6BAAW,AAAD;QACzB,IAAI,MAAM,CAAA,GAAA,wBAAiB,AAAD,EAAE;QAC5B,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,+BACA,EAAG,EACH,SAAS,0BAA0B,GAAG,EAAE,oBAAoB;QAC3D,IAAI,IAAI,CAAA,GAAA,wCAAsB,AAAD;QAC7B,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACzB,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,iBACA;QAAE;KAAa,EACf,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC9C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,OAAO,EAAE,iBAAiB;QAC9B,CAAA,GAAA,0BAAc,AAAD,EAAE,QAAQ,CAAC;QACxB,OAAO,CAAA,GAAA,mBAAY,AAAD;IACnB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,qBACA,EAAG,EACH,SAAS,kBAAkB,GAAG,EAAE,oBAAoB;QACnD,CAAA,GAAA,0BAAW,AAAD,EAAE,kBAAkB,CAAC;QAC/B,CAAA,GAAA,0BAAW,AAAD,EAAE,oBAAoB,CAAC;QACjC,OAAO,CAAA,GAAA,mBAAY,AAAD;IACnB,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA,EAAG,EACH,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,IAAI,OAAO,WAAW,CAAC,GAAG;QAC9B,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA;QAAE;KAAO,EACT,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,EAAE,iBAAiB;QACnB,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,sBACA;QAAE;QAAU;KAAO,EACnB,SAAS,iBAAiB,GAAG,EAAE,oBAAoB;QAClD,IAAI,IAAI,IAAI,EAAE,CAAC,SAAS,iBAAiB;QACzC,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,EAAE,eAAe,CAAC;QAClB,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,kBACA;QAAE;QAAU;KAAO,EACnB,SAAS,cAAc,GAAG,EAAE,oBAAoB;QAC/C,IAAI,KAAK,IAAI,EAAE,CAAC,SAAS,iBAAiB;QAC1C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,EAAE,QAAQ,CAAC;QACX,OAAO;IACR,GACA;IAID,gEAAgE;IAEhE,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,sBACA;QAAE;KAAO,EACT,SAAS,cAAc,GAAG,EAAE,oBAAoB;QAC/C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,IAAI,EAAE,eAAe;QACzB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IACzB,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,YAAY,CAAC,kBAAkB;IAEvC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,oBACA;QAAE;KAAM,EACR,SAAS,gBAAgB,GAAG,EAAE,oBAAoB;QACjD,IAAI,IAAI,IAAI,EAAE,CAAC;QAEf,IAAI,MAAM,EAAE,cAAc;QAC1B,IAAI,IAAI,MAAM,IAAI,GACjB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;QAEvB,IAAI,KAAK,GAAG,CAAC,EAAE;QACf,IAAI,IAAI,GAAG,UAAU,GAAG,qBAAqB,GAAG,MAAM;QACtD,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,mBACA;QAAE;KAAO,EACT,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAChD,IAAI,IAAI,IAAI,EAAE,CAAC;QAEf,IAAI,MAAM,EAAE,cAAc;QAC1B,IAAI,IAAI,MAAM,IAAI,GACjB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;QAEvB,IAAI,KAAK,GAAG,CAAC,EAAE;QACf,IAAI,IAAI,GAAG,UAAU,GAAG,qBAAqB,GAAG,KAAK;QACrD,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACvB,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,SACA;QAAE;KAAO,EACT,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,QAAQ,GAAG,CAAC,IAAI,WAAW;QAC3B,OAAO;IACR,GACA;IAKD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;QAAS;KAAU,EACrB,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,MAAM,KAAK,iBAAiB;QAChC,sDAAsD;QACtD,mDAAmD;QACnD,WAAW;QACX,IAAI,OAAO,EAAE;QACb,IAAI,OAAO,EAAE;QACb,IAAI,QAAQ,EAAE;QACd,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,WAAW,IAAI,IAAK;YAC3C,IAAI,QAAQ,IAAI,UAAU,CAAC;YAC3B,IAAI,CAAC,EAAE,GAAG;YACV,IAAI,MAAM,cAAc,IAAI;gBAC3B,IAAI,QAAQ,MAAM,cAAc;gBAChC,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE;gBACnB,IAAI,KAAK,CAAC,EAAE,EACX,IAAI,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,UAAU;YAE/B,OACC,IAAI,CAAC,EAAE,GAAG,MAAM,eAAe;QAEjC;QACA,IAAI,SAAS,KAAK;QAClB,IAAI,OAAO,UAAU,UAAU;YAC9B,IAAI,KAAK,KAAK,CAAC,WAAW,QACzB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;iBAExB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;QAExB,OACC,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,KAAK;IAE/B,GACA;AAEF;;;ACpQA;;;;;;;;;;;;;;;AAeA;;AAqEA,iDAAS;AAnET;AACA;AACA;AACA;AAMA;;;;;;;CAOC,GACD,MAAM;IACL,aAAc,CACd;IAEA,qFAAqF;IACrF,6EAA6E;IAC7E,iCAAiC;IAEjC,cAAc,IAAI,EAAE;QACnB,IAAI,CAAC,MACJ,OAAO,CAAC;QAET,IAAI,CAAC,KAAK,IAAI,EACb,KAAK,IAAI,GAAG,CAAA,GAAA,mCAAgB,AAAD;QAE5B,IAAI,CAAC,KAAK,EAAE,EACX,KAAK,EAAE,GAAG;QAEX,IAAI,UAAU,IAAI,CAAA,GAAA,YAAI,AAAD,EAAE;QACvB,IAAI,OAAO,IAAI,CAAA,GAAA,wBAAU,AAAD,EAAE;QAC1B,KAAK,aAAa,CAAC,KAAK,IAAI;QAC5B,KAAK,cAAc,CAAC;QACpB,SAAS,SAAS,GAAG,MAAM,oCAAoC;QAC/D,IAAI,cAAc,SAAS,cAAc,CAAC,KAAK,EAAE;QACjD,KAAK,UAAU,CAAC;QAChB,QAAQ,oBAAoB,CAAC;QAC7B,CAAA,GAAA,0BAAW,AAAD,EAAE,OAAO,CAAC;QACpB,OAAO;IACR;IAEA,mBAAmB,GAAG,EAAE,UAAU,EAAE;QACnC,IAAI,WAAW,IAAI,oBAAoB;QACvC,IAAI,aAAa,IAAI,CAAC,aAAa,CAAC;YACnC,MAAM;YACN,IAAI;QACL;QAEA,6EAA6E;QAC7E,mEAAmE;QACnE,CAAA,GAAA,0BAAW,AAAD,EAAE,yBAAyB,CAAC,CAAA,GAAA,0BAAW,AAAD,EAAE,yBAAyB,KAAK;QAChF,0CAA0C;QAC1C,WAAW,MAAM;QACjB,sCAAsC;QACtC,IAAI,oBAAoB,CAAC;QACzB,OAAO,IAAI,cAAc,EAAE,CAAC,EAAE;IAC/B;AACD;AAEA,MAAM,cAAc,IAAI;;;;;ACjExB,oDAAS;AAfT,MAAM;IAEL,SAAS,IAAI,EAAE;QACd,QAAQ,IAAI,CAAC;YACZ,QAAQ;gBACP,UAAU;oBAAC;iBAAK;YACjB;QACD;IACD;AAED;AAEA,MAAM,iBAAiB,IAAI;;;ACd3B;;;;;;;;;;;;;;;AAeA;;AAoDA,uDAAS;AAlDT;AACA;AACA;AACA;AACA;AAEA,SAAS;IAER,yEAAyE;IACzE,oEAAoE;IACpE,uEAAuE;IACvE,qEAAqE;IAErE,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA;QAAE;QAAQ;KAAO,EACjB,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,UAAU,IAAI,EAAE,CAAC,OAAO,iBAAiB;QAC7C,IAAI,MAAM,CAAA,GAAA,0BAAgB,AAAD,EAAE,SAAS;QACpC,IAAI,eAAe,CAAA,GAAA,qCAAgB,AAAD,EAAE,OAAO,CAAC,KAAK;QACjD,IAAI,cAAc;YACjB,IAAI,IAAI,CAAA,GAAA,6BAAmB,AAAD,EAAE;YAC5B,OAAO;QACR;QACA,IAAI,MAAM,CAAC,CAAA,GAAA,0BAAgB,AAAD,EAAE,SAAS;QACrC,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;QAAO;KAAQ,EACjB,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,UAAU,IAAI,EAAE,CAAC,OAAO,iBAAiB;QAC7C,IAAI,MAAM,CAAA,GAAA,0BAAgB,AAAD,EAAE,SAAS;QACpC,IAAI,EAAE,MAAM,CAAC,MACZ,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;aAErB,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;IAEvB,GACA;AAGF;;;ACjEA;;;;;;;;;;;;;;;AAeA;;AAwLA,wDAAS;AAtLT;AAEA;AACA;AAEA,SAAS;IAER,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA;QAAE;KAAO,EACT,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAC1C,GACA,CAAC,kCAAkC,CAAC;IAGrC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA;QAAE;KAAO,EACT,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,SAAS,CAAC,IAAI,EAAE,CAAC;IAC7C,GACA,CAAC,kCAAkC,CAAC;IAGrC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,mBACA;QAAE;KAAO,EACT,SAAS,gBAAgB,GAAG,EAAE,oBAAoB;QACjD,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,cAAc,CAAC,IAAI,EAAE,CAAC;IAClD,GACA,CAAC,kCAAkC,CAAC;IAIrC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;KAAO,EACT,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,KAAK,CAAC,IAAI,EAAE,CAAC;IACzC,GACA,CAAC,8BAA8B,CAAC;IAGjC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;KAAU,EACZ,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,KAAK,CAAC,IAAI,WAAW;QACzB,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE;IACtB,GACA,CAAC,+BAA+B,CAAC;IAGlC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,uBACA;QAAE;KAAO,EACT,SAAS,mBAAmB,GAAG,EAAE,oBAAoB;QACpD,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,iBAAiB,CAAC,IAAI,EAAE,CAAC;IACrD,GACA,CAAC,2CAA2C,CAAC;IAG9C,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,qBACA;QAAE;KAAO,EACT,SAAS,iBAAiB,GAAG,EAAE,oBAAoB;QAClD,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,eAAe,CAAC,IAAI,EAAE,CAAC;IACnD,GACA,CAAC,yCAAyC,CAAC;IAG5C,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;KAAO,EACT,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,OAAO,CAAC,IAAI,EAAE,CAAC;IAC3C,GACA,CAAC,iCAAiC,CAAC;IAGpC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;KAAO,EACT,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,OAAO,CAAC,IAAI,EAAE,CAAC;IAC3C,GACA,CAAC,gCAAgC,CAAC;IAGnC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA;QAAE;KAAO,EACT,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,SAAS,CAAC,IAAI,EAAE,CAAC;IAC7C,GACA,CAAC,mCAAmC,CAAC;IAGtC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAE;KAAO,EACT,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC5C,GACA,CAAC,iCAAiC,CAAC;IAGpC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAE;KAAO,EACT,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;IAC5C,GACA,CAAC,iCAAiC,CAAC;IAGpC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,WACA;QAAE;KAAO,EACT,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAC1C,GACA,CAAC,+BAA+B,CAAC;IAGlC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,WACA;QAAE;KAAO,EACT,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,cAAc,CAAC,IAAI,EAAE,CAAC;IAClD,GACA,CAAC,+BAA+B,CAAC;IAGlC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,UACA;QAAE;KAAO,EACT,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,KAAK,CAAC,IAAI,EAAE,CAAC;IACzC,GACA,CAAC,4BAA4B,CAAC;IAG/B,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,gBACA;QAAE;KAAO,EACT,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC9C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,WAAW,CAAC,IAAI,EAAE,CAAC;IAC/C,GACA,CAAC,oCAAoC,CAAC;IAGvC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAE;KAAO,EACT,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,SAAS,CAAC,IAAI,EAAE,CAAC;IAC7C,GACA,CAAC,iCAAiC,CAAC;IAGpC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAE;KAAO,EACT,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,SAAS,CAAC,IAAI,EAAE,CAAC;IAC7C,GACA,CAAC,iCAAiC,CAAC;IAGpC,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,WACA;QAAE;KAAO,EACT,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,OAAO,CAAA,GAAA,qBAAa,AAAD,EAAE,SAAM,MAAM,CAAC,IAAI,EAAE,CAAC;IAC1C,GACA,CAAC,+BAA+B,CAAC;AAEnC;;;ACrMA;;;;;;;;;;;;;;;AAeA;;AAqNA,kEAAS;AAnNT;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAKA,SAAS;IAER,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA;QAAE;KAAQ,EACV,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,OAAO,EAAE,SAAS;IACnB,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,WACA;QAAE;KAAQ,EACV,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACxC,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,YAAY,CAAA,GAAA,8BAAiB,AAAD,EAAE,MAAM;QACxC,IAAI,SAAM,YAAY,CAAC,YACtB,UAAU,YAAY,CAAC,CAAA,GAAA,qCAA2B,AAAD;QAElD,OAAO;IACR,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,YACA;QAAE;KAAO,EACT,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,SAAM,OAAO,CAAC,IACjB,OAAO;aACD,IAAI,SAAM,SAAS,CAAC,IAC1B,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE,EAAE,aAAa;aAC/B,IAAI,SAAM,MAAM,CAAC,IACvB,OAAO,EAAE,aAAa,KAAK,CAAA,GAAA,uBAAc,AAAD,EAAE,KAAI,CAAA,GAAA,uBAAc,AAAD,EAAE;aACvD,IAAI,SAAM,SAAS,CAAC,IAAI;YAC9B,IAAI,IAAI,EAAE,iBAAiB;YAC3B,IAAI,SAAS,WAAW;YACxB,IAAI,OAAO,KAAK,CAAC,SAChB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,6BAA6B,EAAE,EAAE,SAAS,CAAC;iBAEvE,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;QAExB,OAAO,IAAI,SAAM,QAAQ,CAAC,IAAI;YAC7B,qBAAqB;YACrB,IAAI,IAAI,EAAE,OAAO;YACjB,IAAI,SAAS,WAAW;YACxB,IAAI,OAAO,KAAK,CAAC,SAChB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,6BAA6B,EAAE,EAAE,SAAS,CAAC;iBAEvE,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;QAExB,OAAO,IAAI,SAAM,MAAM,CAAC,MAAM,SAAM,MAAM,CAAC,MAAM,SAAM,KAAK,CAAC,IAAI;YAChE,qBAAqB;YACrB,IAAI,IAAI,EAAE,gBAAgB;YAC1B,IAAI,SAAS,WAAW;YACxB,IAAI,OAAO,KAAK,CAAC,SAChB,OAAO;YACP,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,6BAA6B,EAAE,EAAE,kBAAkB,EAAE,EAAE,WAAW,GAAG,SAAS,CAAC;iBAE3G,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;QAExB,OACC,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,6BAA6B,EAAE,EAAE,WAAW,GAAG,yBAAyB,CAAC;IAEvG,GACA;IAGD,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,cACA;QAAE;KAAO,EACT,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC5C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,SAAM,SAAS,CAAC,IACnB,OAAO;aACD,IAAI,SAAM,OAAO,CAAC,IACxB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,KAAK,KAAK,CAAC,EAAE,aAAa;aAC5C,IAAI,SAAM,MAAM,CAAC,IACvB,OAAO,EAAE,aAAa,KAAK,CAAA,GAAA,2BAAgB,AAAD,EAAE,KAAI,CAAA,GAAA,2BAAgB,AAAD,EAAE;aAC3D,IAAI,SAAM,SAAS,CAAC,IAAI;YAC9B,IAAI,IAAI,EAAE,iBAAiB;YAC3B,IAAI,SAAS,SAAS;YACtB,IAAI,OAAO,KAAK,CAAC,SAChB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,+BAA+B,EAAE,EAAE,SAAS,CAAC;iBAEzE,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;QAE1B,OAAO,IAAI,SAAM,QAAQ,CAAC,IAAI;YAC7B,qBAAqB;YACrB,IAAI,IAAI,EAAE,OAAO;YACjB,IAAI,SAAS,SAAS;YACtB,IAAI,OAAO,KAAK,CAAC,SAChB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,+BAA+B,EAAE,EAAE,SAAS,CAAC;iBAEzE,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;QAE1B,OAAO,IAAI,SAAM,MAAM,CAAC,MAAM,SAAM,MAAM,CAAC,MAAM,SAAM,KAAK,CAAC,IAAI;YAChE,qBAAqB;YACrB,IAAI,IAAI,EAAE,gBAAgB;YAC1B,IAAI,SAAS,SAAS;YACtB,IAAI,OAAO,KAAK,CAAC,SAChB,OAAO;YACP,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,+BAA+B,EAAE,EAAE,kBAAkB,EAAE,EAAE,WAAW,GAAG,SAAS,CAAC;iBAE7G,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;QAE1B,OACC,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,+BAA+B,EAAE,EAAE,WAAW,GAAG,yBAAyB,CAAC;IAEzG,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,aACA;QAAE;KAAO,EACT,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC3C,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,SAAM,SAAS,CAAC,IACnB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,EAAE,iBAAiB;aACrC,IAAI,SAAM,MAAM,CAAC,IACvB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,EAAE,aAAa,KAAK,QAAQ;aAC9C,IAAI,SAAM,OAAO,CAAC,IACxB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,KAAK,EAAE,aAAa;aACtC,IAAI,SAAM,SAAS,CAAC,IAC1B,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,KAAK,EAAE,aAAa;aACtC,IAAI,SAAM,QAAQ,CAAC,IACzB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,KAAK,EAAE,OAAO;aAChC,IAAI,SAAM,WAAW,CAAC,IAC5B,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,KAAK,EAAE,OAAO;aAChC,IAAI,SAAM,MAAM,CAAC,MAAM,SAAM,MAAM,CAAC,MAAM,SAAM,KAAK,CAAC,IAAI;YAChE,IAAI,KAAK,EAAE,gBAAgB;YAC3B,IAAI,OAAO,MAAO,UACjB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;iBAExB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,8BAA8B,EAAE,GAAG,kBAAkB,EAAE,EAAE,WAAW,GAAG,SAAS,CAAC;QAE/G,OAAO,IAAI,SAAM,KAAK,CAAC,IACtB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE,KAAK,EAAE,gBAAgB;aAE/C,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,8BAA8B,EAAE,EAAE,WAAW,GAAG,yBAAyB,CAAC;IAGxG,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,WACA;QAAE;KAAO,EACT,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACzC,IAAI,IAAI,IAAI,EAAE,CAAC;QAEf,IAAI,SAAM,MAAM,CAAC,IAChB,OAAO;QAER,IAAI,gBAAiB,SAAS,GAAG;YAChC,IAAI,IAAI,CAAA,GAAA,qBAAa,AAAD;YACpB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,IAAK;gBACpC,IAAI,KAAK,CAAA,GAAA,yBAAe,AAAD,EAAE,IAAI,MAAM,CAAC;gBACpC,EAAE,WAAW,CAAC;YACf;YACA,OAAO;QACR;QACA,IAAI,SAAM,SAAS,CAAC,MAChB,SAAM,OAAO,CAAC,MACd,SAAM,MAAM,CAAC,IAEhB,OAAO,cAAc,KAAK,EAAE,aAAa;aACnC,IAAI,SAAM,SAAS,CAAC,IAC1B,OAAO,cAAc,KAAK,EAAE,iBAAiB;aACvC,IAAI,SAAM,QAAQ,CAAC,IAAI;YAC7B,IAAI,IAAI,CAAA,GAAA,qBAAa,AAAD;YACpB,EAAE,WAAW,CAAC,EAAE,QAAQ;YACxB,OAAO;QACR,OACC,gDAAgD;QAChD,kEAAkE;QAClE,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE,CAAC,4BAA4B,EAAE,EAAE,WAAW,GAAG,yBAAyB,CAAC;IAEtG,GACA;AAGF;;;AClOA;;;;;;;;;;;;;;;AAeA;;AAi0CA,6DAAS;AAh0CT;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AAKA;AAYA;AAEA;AACA;AACA;AACA;AAEA,SAAS;IACP,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,wBACA;QAAC;KAAI,EACL,SAAS,oBAAoB,GAAG,EAAE,oBAAoB;QACpD,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,CAAA,GAAA,wCAAkB,AAAD,EAAE;QACnB,OAAO,CAAA,GAAA,mBAAY,AAAD;IACpB,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,wBACA,EAAE,EACF,SAAS,oBAAoB,GAAG,EAAE,oBAAoB;QACpD,IAAI,KAAK,CAAA,GAAA,wCAAkB,AAAD;QAC1B,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IAC1B,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,gBACA;QAAC;QAAO;KAAe,EACvB,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC7C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,WAAW,IAAI,EAAE,CAAC;QAEtB,IAAI,UAAU,EAAE;QAChB,IAAI,SAAM,cAAc,CAAC,KACvB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,IAAI,IACpC,QAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,eAAe;aAG/C,QAAQ,IAAI,CAAC,GAAG,eAAe;QAGjC,IAAI,iBAAiB;YAAC;YAAG;SAAE;QAC3B,IAAI,YAAY,CAAA,GAAA,sBAAO,AAAD,GAAG;YACvB,iBAAiB,EAAE;YACnB,IAAI,SAAM,cAAc,CAAC,WACvB,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,WAAW,IAAI,IAC1C,eAAe,IAAI,CAAC,SAAS,UAAU,CAAC,GAAG,aAAa;iBAG1D,eAAe,IAAI,CAAC,SAAS,aAAa;QAE9C;QAEA,CAAA,GAAA,uBAAW,AAAD,EAAE,SAAS;QACrB,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,aACA;QAAC;QAAO;KAAe,EACvB,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC1C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,WAAW,IAAI,EAAE,CAAC;QAEtB,IAAI,UAAU,EAAE;QAChB,IAAI,SAAM,cAAc,CAAC,KACvB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,IAAI,IACpC,QAAQ,IAAI,CAAC,GAAG,UAAU,CAAC,GAAG,eAAe;aAG/C,QAAQ,IAAI,CAAC,GAAG,eAAe;QAGjC,IAAI,iBAAiB;YAAC;YAAG;SAAE;QAC3B,IAAI,YAAY,CAAA,GAAA,sBAAO,AAAD,GAAG;YACvB,iBAAiB,EAAE;YACnB,IAAI,SAAM,cAAc,CAAC,WACvB,IAAK,IAAI,IAAI,GAAG,IAAI,SAAS,WAAW,IAAI,IAC1C,eAAe,IAAI,CAAC,SAAS,UAAU,CAAC,GAAG,aAAa;iBAG1D,eAAe,IAAI,CAAC,SAAS,aAAa;QAE9C;QAEA,CAAA,GAAA,oBAAQ,AAAD,EAAE,SAAS;QAClB,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,mBACA;QAAC;KAAO,EACR,SAAS,gBAAgB,GAAG,EAAE,oBAAoB;QAChD,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,CAAA,GAAA,+BAAmB,AAAD,EAAE;QACpB,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,iBACA;QAAC;KAAO,EACR,SAAS,gBAAgB,GAAG,EAAE,oBAAoB;QAChD,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,CAAA,GAAA,8BAAkB,AAAD,EAAE;QACnB,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,kBACA;QAAC;KAAY,EACb,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAC/C,IAAI,UAAU,IAAI,EAAE,CAAC;QACrB,IAAI,gBAAgB;QACpB,IAAI,WAAW,CAAA,GAAA,sBAAO,AAAD,GACnB,gBAAgB,QAAQ,aAAa;QAGvC,CAAA,GAAA,yBAAa,AAAD,EAAE;QACd,OAAO,CAAA,GAAA,mBAAY,AAAD;IACpB,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,SACA;QAAC;KAAM,EACP,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACtC,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,IAAI,CAAA,GAAA,mBAAY,AAAD;QACnB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,IAAI,IAAK;YACzC,IAAI,KAAK,GAAG,cAAc,CAAC;YAC3B,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE,GAAG,IAAI,CAAC,MAAM;YACzC,IAAI,QAAQ,EAAE,OAAO;YACrB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC,MAAM,EAAE,IAClC,KAAK,CAAC,EAAE,GAAG,GAAG,IAAI,CAAC,EAAE;YAEvB,EAAE,IAAI;YACN,EAAE,WAAW,CAAC;QAChB;QACA,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,YACA;QAAC;KAAM,EACP,SAAS,SAAS,GAAG,EAAE,oBAAoB;QACzC,IAAI,KAAK,IAAI,EAAE,CAAC;QAEhB,IAAI,MAAM,GAAG,WAAW;QACxB,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,MAAM,GAAG,aAAa,CAAC;YAC3B,MAAO,MAAM,KAAK,MAAM,GAAI;gBAC1B,IAAI,MAAM,GACR,MAAM,IAAK,CAAA,MAAM,CAAA;gBAEnB,IAAI,MAAM,IACR,MAAM,KAAK,CAAE,CAAA,MAAM,CAAA,GAAI,8BAA8B;YAEzD;YACA,IAAI,CAAC,EAAE,GAAG;QACZ;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,WACA;QAAC;KAAM,EACP,SAAS,SAAS,GAAG,EAAE,oBAAoB;QACzC,IAAI,KAAK,IAAI,EAAE,CAAC;QAEhB,IAAI,MAAM,GAAG,WAAW;QACxB,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QACpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IACvB,IAAI,CAAC,EAAE,GAAG,GAAG,aAAa,CAAC,MAAM;QAEnC,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,YACA;QAAC;QAAU;KAAS,EACpB,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACvC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,MAAM,IAAI,EAAE,CAAC;QAEjB,IAAI,MAAM;QACV,IAAI,OAAO,CAAA,GAAA,sBAAO,AAAD,GACf,MAAM,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAE7B,IAAI,WAAW;QACf,IAAI,OAAO,CAAA,GAAA,sBAAO,AAAD,GACf,WAAW,CAAA,GAAA,yCAAmB,AAAD,EAAE;QAGjC,OAAO,CAAA,GAAA,gDAA0B,AAAD,EAAE,UAAU;IAC9C,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,cACA;QAAC;QAAQ;KAAS,EAClB,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC5C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,MAAM,IAAI,EAAE,CAAC;QAEjB,IAAI,CAAE,CAAA,IAAI,WAAW,MAAM,aAAY,GAAI;YACzC,MAAM,CAAA,GAAA,gDAA0B,AAAD,EAC7B,IAAI,aAAa,IACjB,IAAI,WAAW;YAEjB,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QAEA,IAAI,MAAM,KAAK,GAAG,CAAC,IAAI,WAAW,IAAI,IAAI,WAAW;QACrD,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QACpB,IAAI,KAAK,IAAI,aAAa,CAAC;QAE3B,IAAI,cAAc;QAClB,IAAI,eAAe,IAAI,CAAA,GAAA,mCAAa,AAAD;QAEnC,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,SAAS,IAAI,aAAa,CAAC;YAC/B,IAAI,SAAS,IAAI,aAAa,CAAC;YAC/B,IAAI,SAAS,SAAS;YACtB,IAAI,MAAM,IAAI;YACd,IAAI,QAAQ,eAAe;YAC3B,MAAM,QAAS,CAAA,SAAS,EAAC;YACzB,IAAI,CAAC,EAAE,GAAG;QACZ;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,YACA;QAAC;QAAO;KAAM,EACd,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC1C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,KAAK,IAAI,EAAE,CAAC;QAEhB,IAAI,QAAQ,GAAG,WAAW;QAC1B,IAAI,QAAQ,GAAG,WAAW;QAC1B,IAAI,SAAS,QAAQ;QACrB,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE,SAAS,KAAK;QACzC,IAAI,QAAQ,EAAE,OAAO;QACrB,IAAK,IAAI,WAAW,GAAG,WAAW,QAAQ,WAAY;YACpD,IAAI,MAAM;YACV,IAAK,IAAI,SAAS,GAAG,SAAS,OAAO,SAAU;gBAC7C,IAAI,UAAU;gBACd,IAAI,UAAU,WAAW;gBACzB,IAAI,UAAU,SAAS,WAAW,GAAG;oBACnC,IAAI,UAAU,GAAG,aAAa,CAAC;oBAC/B,iGAAiG;oBACjG,mGAAmG;oBACnG,0FAA0F;oBAC1F,gCAAgC;oBAChC,IAAI,UAAU,WAAW,QAAQ,MAAM,GAAG,aAAa,CAAC;oBACxD,OAAO,UAAU;gBACnB;YACF;YACA,KAAK,CAAC,SAAS,GAAG;QACpB;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,QACA;QAAC;QAAQ;KAAS,EAClB,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACtC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,MAAM,IAAI,EAAE,CAAC;QAEjB,IAAI,CAAE,CAAA,IAAI,WAAW,MAAM,aAAY,GAAI;YACzC,MAAM,CAAA,GAAA,gDAA0B,AAAD,EAC7B,IAAI,aAAa,IACjB,IAAI,WAAW;YAEjB,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QAEA,IAAI,MAAM,KAAK,GAAG,CAAC,IAAI,WAAW,IAAI,IAAI,WAAW;QACrD,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAI,gBAAgB,IAAI,aAAa,CAAC;QACtC,IAAI,CAAC,EAAE,GAAG;QACV,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,UAAU,IAAI,aAAa,CAAC;YAChC,IAAI,YAAY,KAAK,GAAG,CAAC,GAAG,IAAI,aAAa,CAAC;YAE9C,IAAI,OAAO,UAAU;YAErB,IAAI,OAAO,WACT,IAAI,CAAC,EAAE,GAAG,gBAAgB;iBACrB,IAAI,OAAO,CAAC,WACjB,IAAI,CAAC,EAAE,GAAG,gBAAgB;iBAE1B,IAAI,CAAC,EAAE,GAAG;YAEZ,gBAAgB,IAAI,CAAC,EAAE;QACzB;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,+CAA+C;IAC/C,oGAAoG;IACpG,wJAAwJ;IAExJ,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,YACA;QAAC;QAAO;KAAK,EACb,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACvC,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,IAAI,IAAI,EAAE,CAAC;QAEf,IAAI,MAAM,GAAG,WAAW;QACxB,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QACpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,IAAI,CAAA,GAAA,uBAAc,AAAD,EAAE,GAAG,aAAa,CAAC;YACxC,IAAI,SAAS,CAAA,GAAA,sBAAK,AAAD,EACf,CAAA,GAAA,0BAAW,AAAD,EACP,MAAM,GACN,4BAA4B,CAAC,GAAG,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,SAAS,CAAC,KAClE,sBACA;YAEF,IAAI,OAAO,WAAW,MAAM,WAC1B,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;YAE7B,IAAI,CAAC,EAAE,GAAG,OAAO,aAAa;QAChC;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,SACA;QAAC;KAAS,EACV,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACvC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,OAAO,CAAA,GAAA,sBAAO,AAAD,GAAG;YAClB,MAAM,CAAA,GAAA,2BAAgB,AAAD,EAAE,CAAA,GAAA,2CAAqB,AAAD;YAC3C,IAAI,MAAM,CAAC,CAAA,GAAA,0BAAgB,AAAD,EAAE,MAAM;YAClC,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QACA,IAAI,MAAM,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC/B,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,IAAI,KAAK,MAAM,KAAK,MAAM;YAC9B,IAAI,CAAC,EAAE,GAAG;QACZ;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,YACA;QAAC;KAAQ,EACT,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC1C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,CAAA,GAAA,sBAAO,AAAD,GAAG;YACjB,KAAK,CAAA,GAAA,2BAAgB,AAAD,EAAE,CAAA,GAAA,2CAAqB,AAAD;YAC1C,GAAG,MAAM,CACP,CAAA,GAAA,0BAAgB,AAAD,EAAE,MAAM;YAEzB,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QAEA,IAAI,MAAM,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC/B,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QACpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,IAAI,KAAK,GAAG,CAAC,AAAC,IAAI,MAAO,IAAI,KAAK,EAAE;YACxC,IAAI,CAAC,EAAE,GAAG;QACZ;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,QACA;QAAC;KAAQ,EACT,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC5C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,CAAA,GAAA,sBAAO,AAAD,GAAG;YACjB,KAAK,CAAA,GAAA,2BAAgB,AAAD,EAAE;YACtB,GAAG,MAAM,CAAC,CAAA,GAAA,0BAAgB,AAAD,EAAE,KAAK;YAChC,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QAEA,IAAI,MAAM,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC/B,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IACvB,IAAI,IAAI,MAAM,GACZ,IAAI,CAAC,EAAE,GAAG;aAEV,IAAI,CAAC,EAAE,GAAG;QAGd,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,cACA;QAAC;KAAQ,EACT,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC5C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,CAAA,GAAA,sBAAO,AAAD,GAAG;YACjB,KAAK,CAAA,GAAA,2BAAgB,AAAD,EAAE,CAAA,GAAA,2CAAqB,AAAD;YAC1C,GAAG,MAAM,CACP,CAAA,GAAA,0BAAgB,AAAD,EAAE,MAAM;YAEzB,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QAEA,IAAI,MAAM,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC/B,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAI,eAAe;QACnB,IAAI,OAAO,AAAC,IAAI,MAAO,CAAA,GAAA,mCAAa,AAAD;QACnC,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,QAAQ,IAAI,KAAK,EAAE,GAAG;YAC1B,gDAAgD;YAChD,IAAI,OAAO,AAAC,IAAI,CAAA,GAAA,mCAAa,AAAD,MAAO;YAEnC,IAAI,IAAI;YACR,IAAK,IAAI,IAAI,GAAG,KAAK,cAAc,IAAK;gBACtC,IAAI,SAAS,IAAI,IAAI;gBACrB,IAAI,IAAI,AAAC,IAAI,SAAU,KAAK,GAAG,CAAC,SAAS,QAAQ;gBACjD,KAAK;YACP;YACA,IAAI,CAAC,EAAE,GAAG,IAAK,CAAA,IAAI,KAAK,EAAE,AAAD;QAC3B;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,WACA;QAAC;KAAQ,EACT,SAAS,SAAS,GAAG,EAAE,oBAAoB;QACzC,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,CAAA,GAAA,sBAAO,AAAD,GAAG;YACjB,KAAK,CAAA,GAAA,2BAAgB,AAAD,EAAE,CAAA,GAAA,2CAAqB,AAAD;YAC1C,GAAG,MAAM,CACP,CAAA,GAAA,0BAAgB,AAAD,EAAE,MAAM;YAEzB,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QAEA,IAAI,MAAM,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC/B,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,IAAI,IAAI;YACZ,IAAI,CAAC,EAAE,GAAG;QACZ;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,QACA;QAAC;KAAS,EACV,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACtC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,OAAO,CAAA,GAAA,sBAAO,AAAD,GAAG;YAClB,MAAM,CAAA,GAAA,2BAAgB,AAAD,EAAE;YACvB,IAAI,MAAM,CACR,CAAA,GAAA,0BAAgB,AAAD,EAAE,WAAW;YAE9B,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QAEA,IAAI,MAAM,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC/B,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,IAAI,MAAM,IAAI;YAClB,IAAI,CAAC,EAAE,GAAG;QACZ;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,eACA;QAAC;QAAO;KAAW,EACnB,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC5C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,QAAQ,CAAA,GAAA,sBAAO,AAAD,GAAG;YACnB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;YACxB,KAAK,MAAM,CACT,CAAA,GAAA,0BAAgB,AAAD,EAAE,WAAW;YAE9B,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QACA,IAAI,CAAE,CAAA,KAAK,WAAW,MAAM,aAAY,GAAI;YAC1C,IAAI,MAAM,KAAK,OAAO,KAAK,KAAK,MAAM,CAAC,KAAK;YAC5C,OAAO,CAAA,GAAA,gDAA0B,AAAD,EAAE,KAAK,aAAa;YACpD,IAAI,KACF,KAAK,MAAM,CAAC;QAEhB;QAEA,IAAI,WAAW,CAAA,GAAA,mCAAa,AAAD,EAAE;QAC7B,IAAI,cAAc,GAAG,WAAW;QAChC,IAAI,eAAe,KAAK,WAAW;QAEnC,gEAAgE;QAChE,6DAA6D;QAE7D,qEAAqE;QACrE,oEAAoE;QACpE,8DAA8D;QAC9D,2CAA2C;QAE3C,IAAI,SAAS;QACb,IAAI,MAAM;QACV,IAAI,cAAc;QAClB,IAAK,IAAI,IAAI,GAAG,cAAc,aAAa,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,aAAc;YACrE,IAAI,aAAa,KAAK,aAAa,CAAC;YACpC,uEAAuE;YACvE,qCAAqC;YACrC,IAAI,2BAA2B,CAAA,GAAA,0CAAoB,AAAD,EAChD,YACA;YAEF,IAAI,MAAM,QACR,OAAO,CAAA,GAAA,6BAAmB,AAAD,EACvB,CAAC,0DAA0D,EAAE,OAAO,SAAS,CAAC;YAGlF,qFAAqF;YACrF,iFAAiF;YACjF,qFAAqF;YACrF,wFAAwF;YACxF,sFAAsF;YACtF,IAAI,kBAAkB,cAAc;YACpC,eAAe;YACf;QACF;QACA,IAAI,OAAO,GACT,OAAO,CAAA,GAAA,6BAAmB,AAAD,EACvB,CAAC,+DAA+D,CAAC;QAGrE,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAI,IAAI;QACR,cAAc;QACd,IACE,IAAI,IAAI,GACR,cAAc,aACd,KAAK,IAAI,AAAC,CAAA,IAAI,CAAA,IAAK,aACnB;YACA,IAAI,IAAI,GAAG,yBAAyB,CAAC;YACrC,IAAI,aAAa,KAAK,aAAa,CAAC;YACpC,0BAA0B;YAC1B,IAAI,2BAA2B,CAAA,GAAA,0CAAoB,AAAD,EAChD,YACA;YAEF,yDAAyD;YACzD,kDAAkD;YAClD,8CAA8C;YAC9C,oCAAoC;YACpC,IAAI,kBAAkB,cAAc;YACpC,eAAe;YACf,IAAI,CAAC,EAAE,GAAG;QACZ;QAEA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,eACA;QAAC;QAAO;KAAY,EACpB,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC5C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,OAAO,CAAA,GAAA,sBAAO,AAAD,GAAG;YAClB,MAAM,CAAA,GAAA,2BAAgB,AAAD,EAAE;YACvB,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QAEA,IAAI,iBAAiB;QAErB,IAAI,cAAc,GAAG,WAAW;QAEhC,IAAI,CAAE,CAAA,IAAI,WAAW,MAAM,aAAY,GAAI;YACzC,IAAI,cAAc,IAAI,aAAa;YACnC,IAAI,eAAe,GACjB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EACvB;YAGJ,MAAM,CAAA,GAAA,gDAA0B,AAAD,EAAE;YACjC,iBAAiB,cAAe,CAAA,IAAI,KAAK,GAAG,CAAC,YAAW;QAC1D,OACE,wCAAwC;QACxC,iBAAiB,IAAI,WAAW;QAElC,IAAI,cAAc,IAAI,WAAW;QACjC,IAAI,SAAS;QACb,IAAI,iBAAiB,QACnB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EACvB,CAAC,0DAA0D,EAAE,OAAO,SAAS,CAAC;QAGlF,IAAI,kBAAkB,GACpB,8BAA8B;QAC9B,OAAO,CAAA,GAAA,6BAAmB,AAAD,EACvB,CAAC,+DAA+D,CAAC;QAIrE,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAI,cAAc;QAClB,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,IAAK;YACvC,IAAI,IAAI,GAAG,yBAAyB,CAAC;YACrC,IAAI,kBAAkB,IAAI,aAAa,CAAC,IAAI;YAC5C,eAAe;YACf,IAAI,CAAC,EAAE,GAAG;QACZ;QAEA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,kBACA;QAAC;QAAO;KAAU,EAClB,SAAS,eAAe,GAAG,EAAE,oBAAoB;QAC/C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,cAAc,IAAI,aAAa;QAEnC,UAAU;QACV,UAAU;QACV,SAAS;QACT,aAAa;QAEb,qCAAqC;QAErC,IAAI,cAAc,KAAM,CAAA,cAAc,EAAC;QAEvC,IAAI,cAAc,GAAG,WAAW;QAEhC,IAAI,iBAAiB,cAAe,CAAA,IAAI,KAAK,GAAG,CAAC,YAAW;QAE5D,IAAI,SAAS;QACb,IAAI,iBAAiB,QACnB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EACvB,CAAC,6DAA6D,EAAE,OAAO,SAAS,CAAC;QAGrF,IAAI,kBAAkB,GACpB,8BAA8B;QAC9B,OAAO,CAAA,GAAA,6BAAmB,AAAD,EACvB,CAAC,kEAAkE,CAAC;QAIxE,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAI,cAAc;QAClB,IAAK,IAAI,IAAI,GAAG,IAAI,gBAAgB,IAAK;YACvC,IAAI,IAAI,GAAG,yBAAyB,CAAC;YACrC,IAAI,kBAAkB;YACtB,eAAe;YACf,IAAI,CAAC,EAAE,GAAG;QACZ;QAEA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,aACA;QAAC;KAAM,EACP,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC3C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,GAAG,MAAM;QACnB,IAAI,OAAO,IAAI;QAEf,IAAI,MAAM,GAAG,WAAW;QACxB,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QACpB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,IAAI,IAAK;YACzC,IAAI,MAAM,GAAG,aAAa,CAAC;YAC3B,IAAI,CAAC,EAAE,GAAG,MAAM;QAClB;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,gBACA;QAAC;KAAM,EACP,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC7C,IAAI,KAAK,IAAI,EAAE,CAAC;QAEhB,IAAI,MAAM,GAAG,WAAW;QACxB,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QACpB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,IAAI,IAAK;YACzC,IAAI,MAAM,GAAG,aAAa,CAAC;YAC3B,IAAI,OAAO,GACT,IAAI,CAAC,EAAE,GAAG;iBAEV,IAAI,CAAC,EAAE,GAAG;QAEd;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,gBACA;QAAC;KAAM,EACP,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC7C,IAAI,KAAK,IAAI,EAAE,CAAC;QAEhB,IAAI,MAAM,GAAG,WAAW;QACxB,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QACpB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,IAAI,IAAK;YACzC,IAAI,MAAM,GAAG,aAAa,CAAC;YAC3B,IAAI,OAAO,GACT,IAAI,CAAC,EAAE,GAAG;iBAEV,IAAI,CAAC,EAAE,GAAG,CAAC;QAEf;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,UACA;QAAC;KAAM,EACP,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACxC,IAAI,KAAK,IAAI,EAAE,CAAC;QAEhB,IAAI,MAAM,GAAG,WAAW;QACxB,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QACpB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,WAAW,IAAI,IAAK;YACzC,IAAI,MAAM,GAAG,aAAa,CAAC;YAC3B,IAAI,CAAC,EAAE,GAAG,CAAC;QACb;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,UACA;QAAC;QAAO;KAAS,EACjB,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACxC,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,IAAI,EAAE,CAAC;QAEjB,IAAI,CAAE,CAAA,IAAI,WAAW,MAAM,aAAY,GAAI;YACzC,MAAM,CAAA,GAAA,gDAA0B,AAAD,EAAE,IAAI,aAAa,IAAI,GAAG,WAAW;YACpE,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QAEA,IAAI,MAAM,KAAK,GAAG,CAAC,GAAG,WAAW,IAAI,IAAI,WAAW;QACpD,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,MAAM,GAAG,aAAa,CAAC;YAC3B,IAAI,SAAS,IAAI,aAAa,CAAC;YAC/B,IAAI,CAAC,EAAE,GAAG,MAAM;QAClB;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,eACA;QAAC;QAAO;KAAS,EACjB,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACxC,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,IAAI,EAAE,CAAC;QAEjB,IAAI,CAAE,CAAA,IAAI,WAAW,MAAM,aAAY,GAAI;YACzC,MAAM,CAAA,GAAA,gDAA0B,AAAD,EAAE,IAAI,aAAa,IAAI,GAAG,WAAW;YACpE,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QAEA,IAAI,cAAc,GAAG,WAAW;QAChC,IAAI,MAAM,KAAK,GAAG,CAAC,aAAa,IAAI,WAAW;QAC/C,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,QAAQ,IAAI,aAAa,CAAC;YAC9B,IAAI,iBAAiB,QAAQ;YAC7B,IAAI,MAAM,GAAG,yBAAyB,CAAC,IAAI;YAC3C,IAAI,CAAC,EAAE,GAAG;QACZ;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,QACA;QAAC;KAAc,EACf,SAAS,MAAM,GAAG,EAAE,oBAAoB;QACtC,IAAI,QAAQ,IAAI,EAAE,CAAC;QAEnB,8DAA8D;QAC9D,IAAI,MAAM,WAAW,MAAM,KAAK,MAAM,UAAU,CAAC,GAAG,cAAc,IAChE,QAAQ,MAAM,UAAU,CAAC;QAG3B,IAAI,QAAQ,EAAE;QAEd,IAAI,MAAM;QACV,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,WAAW,IAAI,IAAK;YAC5C,IAAI,IAAI,MAAM,UAAU,CAAC;YACzB,IAAI,CAAE,CAAA,EAAE,WAAW,MAAM,aAAY,GACnC,IAAI,CAAA,GAAA,gDAA0B,AAAD,EAAE,EAAE,aAAa;YAEhD,IAAI,IAAI,EAAE,WAAW;YACrB,IAAI,IAAI,KACN,MAAM;YAER,MAAM,IAAI,CAAC;QACb;QACA,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,IAAI;YACR,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAChC,KAAK,KAAK,CAAC,EAAE,CAAC,aAAa,CAAC;YAE9B,IAAI,CAAC,EAAE,GAAG;QACZ;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,UACA;QAAC;QAAO;KAAQ,EAChB,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACxC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,KAAK,IAAI,EAAE,CAAC;QAEhB,IAAI,MAAM,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC/B,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAI,QAAQ;QACZ,IAAI,QAAQ,GAAG,WAAW;QAE1B,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IACvB,IAAI,IAAI,OACN,IAAI,CAAC,QAAQ,GAAG,GAAG,aAAa,CAAC;aAEjC,IAAI,CAAC,QAAQ,GAAG;QAGpB,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,qBACA;QAAC;QAAO;KAAQ,EAChB,SAAS,aAAa,GAAG,EAAE,oBAAoB;QAC7C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,KAAK,IAAI,EAAE,CAAC;QAEhB,IAAI,iBAAiB,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC1C,IAAI,mBAAmB,GAAG,WAAW;QACrC,IAAI,iBAAiB,kBACnB,iBAAiB;QAEnB,IAAI,iBAAiB,GACnB,iBAAiB;QAEnB,IAAI,gBAAgB;QACpB,IAAI,YAAY,mBAAmB;QAEnC,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,eAAe,IAAI,kBAAkB,IAChD,IAAI,CAAC,IAAI,cAAc,GAAG,GAAG,aAAa,CAAC;QAE7C,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,mBACA;QAAC;QAAO;KAAQ,EAChB,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC3C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,KAAK,IAAI,EAAE,CAAC;QAEhB,IAAI,iBAAiB,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC1C,IAAI,mBAAmB,GAAG,WAAW;QACrC,IAAI,iBAAiB,kBACnB,iBAAiB;QAEnB,IAAI,iBAAiB,GACnB,iBAAiB;QAGnB,IAAI,cAAc,mBAAmB;QACrC,IAAI,YAAY;QAEhB,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,aAAa,IAC/B,IAAI,CAAC,EAAE,GAAG,GAAG,aAAa,CAAC;QAE7B,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,SACA;QAAC;QAAO;KAAS,EACjB,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACvC,IAAI,OAAO,IAAI,EAAE,CAAC;QAClB,IAAI,KAAK,IAAI,EAAE,CAAC;QAEhB,OAAO,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC5B,IAAI,mBAAmB,GAAG,WAAW;QACrC,IAAI,iBAAiB,mBAAmB;QAExC,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,MAAM,IAAI,gBAAgB,IACrC,IAAI,CAAC,EAAE,GAAG,GAAG,aAAa,CAAC,IAAI;QAEjC,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,YACA;QAAC;QAAO;QAAM;QAAgB;KAAK,EACnC,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACvC,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,IAAI,IAAI,EAAE,CAAC;QACf,IAAI,cAAc,IAAI,EAAE,CAAC,eAAe,aAAa;QACrD,IAAI,IAAI,IAAI,EAAE,CAAC,KAAK,aAAa;QAEjC,IAAI,MAAM,GAAG,WAAW;QACxB,IAAI,SAAS,GAAG,OAAO;QACvB,IAAI,SAAS,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAChC,IAAI,UAAU,OAAO,OAAO;QAE5B,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IACvB,OAAO,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE;QAGxB,IAAI,gBAAgB;QACpB,IAAK,IAAI,IAAI,GAAG,IAAI,GAAG,IAAK;YAC1B,gBAAgB,CAAA,GAAA,sBAAK,AAAD,EAClB,CAAA,GAAA,0BAAW,AAAD,EAAE,MAAM,GAAG,4BAA4B,CAAC,GAAG;YAEvD,IAAI,cAAc,cAAc,OAAO;YACvC,IAAK,IAAI,IAAI,GAAG,IAAI,cAAc,WAAW,IAAI,IAC/C,WAAW,CAAC,EAAE,GAAG,WAAW,CAAC,EAAE,GAAG;YAEpC,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IACvB,IAAI,IAAI,cAAc,WAAW,IAC/B,OAAO,CAAC,EAAE,IAAI,WAAW,CAAC,EAAE;QAGlC;QAEA,OAAO,IAAI;QACX,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,aACA;QAAC;KAAM,EACP,SAAS,WAAW,GAAG,EAAE,oBAAoB;QAC3C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,GAAG,MAAM;QACnB,OAAO,CAAA,GAAA,uBAAc,AAAD,EAAE;IACxB,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,YACA;QAAC;KAAM,EACP,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC1C,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,MAAM,GAAG,WAAW;QACxB,OAAO,CAAA,GAAA,2BAAgB,AAAD,EAAE;IAC1B,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,WACA;QAAC;KAAS,EACV,SAAS,UAAU,GAAG,EAAE,oBAAoB;QAC1C,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,OAAO,CAAA,GAAA,sBAAO,AAAD,GAAG;YAClB,MAAM,CAAA,GAAA,2BAAgB,AAAD,EAAE;YACvB,IAAI,MAAM,CACR,CAAA,GAAA,0BAAgB,AAAD,EAAE,SAAS;YAE5B,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QACA,IAAI,MAAM,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC/B,OAAO,CAAA,GAAA,+BAAkB,AAAD,EAAE;IAC5B,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,OACA;QAAC;KAAc,EACf,SAAS,KAAK,GAAG,EAAE,oBAAoB;QACrC,IAAI,QAAQ,IAAI,EAAE,CAAC;QAEnB,8DAA8D;QAC9D,IAAI,MAAM,WAAW,MAAM,KAAK,MAAM,UAAU,CAAC,GAAG,cAAc,IAChE,QAAQ,MAAM,UAAU,CAAC;QAG3B,IAAI,QAAQ,EAAE;QAEd,IAAI,MAAM;QACV,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,WAAW,IAAI,IAAK;YAC5C,IAAI,IAAI,MAAM,UAAU,CAAC;YACzB,IAAI,CAAE,CAAA,EAAE,WAAW,MAAM,aAAY,GACnC,IAAI,CAAA,GAAA,gDAA0B,AAAD,EAAE,EAAE,aAAa;YAEhD,IAAI,IAAI,EAAE,WAAW;YACrB,IAAI,IAAI,KACN,MAAM;YAER,MAAM,IAAI,CAAC;QACb;QAEA,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QACpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IAAK;YAC5B,IAAI,IAAI;YACR,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAChC,KAAK,KAAK,CAAC,EAAE,CAAC,aAAa,CAAC;YAE9B,IAAI,CAAC,EAAE,GAAG;QACZ;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,YACA;QAAC;QAAS;KAAS,EACnB,SAAS,SAAS,GAAG,EAAE,oBAAoB;QACzC,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,CAAE,CAAA,GAAG,WAAW,MAAM,aAAY,GACpC,KAAK,CAAA,GAAA,gDAA0B,AAAD,EAAE,GAAG,aAAa;QAGlD,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,OAAO,CAAA,GAAA,sBAAO,AAAD,GAAG;YAClB,MAAM,CAAA,GAAA,2BAAgB,AAAD,EAAE;YACvB,IAAI,MAAM,CACR,CAAA,GAAA,0BAAgB,AAAD,EAAE,SAAS;YAE5B,CAAA,GAAA,wBAAO,AAAD,EAAE;QACV;QACA,IAAI,MAAM,CAAA,GAAA,0CAAoB,AAAD,EAAE;QAC/B,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IACvB,IAAI,CAAC,EAAE,GAAG,GAAG,aAAa,CAAC;QAE7B,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,UACA;QAAC;QAAO;KAAS,EACjB,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACxC,IAAI,KAAK,IAAI,EAAE,CAAC;QAChB,IAAI,QAAQ;QACZ,IAAI,SAAS,CAAA,GAAA,sBAAO,AAAD,GACjB,QAAQ,IAAI,EAAE,CAAC,QAAQ,aAAa;QAEtC,IAAI,QAAQ,GAAG,WAAW;QAC1B,IAAI,MAAM,QAAQ;QAClB,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,IACvB,IAAI,CAAC,EAAE,GAAG,GAAG,aAAa,CAAC,IAAI;QAEjC,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,OACA;QAAC;KAAgB,EACjB,SAAS,OAAO,GAAG,EAAE,oBAAoB;QACvC,IAAI,QAAQ,IAAI,EAAE,CAAC;QAEnB,IAAI,QAAQ,EAAE;QACd,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,WAAW,IAAI,IAAK;YAC5C,IAAI,IAAI,MAAM,UAAU,CAAC;YACzB,IAAI,EAAE,WAAW,MAAM,eACrB,MAAM,IAAI,CAAC;iBACN,IAAI,EAAE,cAAc,IACzB,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,WAAW,IAAI,IAAK;gBACxC,IAAI,KAAK,EAAE,UAAU,CAAC;gBACtB,IAAI,GAAG,WAAW,MAAM,eACtB,MAAM,IAAI,CAAC;qBAEX,MAAM,IAAI,CAAC,CAAA,GAAA,gDAA0B,AAAD,EAAE,GAAG,aAAa;YAE1D;iBACK,IAAI,SAAM,SAAS,CAAC,MAAM,SAAM,OAAO,CAAC,IAC7C,MAAM,IAAI,CAAC,CAAA,GAAA,gDAA0B,AAAD,EAAE,EAAE,aAAa;iBAErD,OAAO,CAAA,GAAA,6BAAmB,AAAD,EACvB,CAAC,8DAA8D,EAAE,EAAE,WAAW,GAAG,CAAC;QAGxF;QAEA,IAAI,MAAM;QACV,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,IAAI,IAAI,KAAK,CAAC,EAAE;YAChB,OAAO,EAAE,WAAW;QACtB;QAEA,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE;QAC3B,IAAI,OAAO,EAAE,OAAO;QAEpB,IAAI,IAAI;QACR,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;YACrC,IAAI,IAAI,KAAK,CAAC,EAAE;YAChB,IAAK,IAAI,IAAI,GAAG,IAAI,EAAE,WAAW,IAAI,KAAK,IACxC,IAAI,CAAC,EAAE,GAAG,EAAE,aAAa,CAAC;QAE9B;QACA,EAAE,IAAI;QACN,OAAO;IACT,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,eACA;QAAC;KAAS,EACV,SAAS,YAAY,GAAG,EAAE,oBAAoB;QAC5C,IAAI,QAAQ,IAAI,EAAE,CAAC,SAAS,iBAAiB;QAE7C,IAAI,gBAAgB,CAAA,GAAA,uCAAsB,AAAD;QACzC,cAAc,GAAG,CACf,IAAI,CAAA,GAAA,oDAAkC,AAAD,EAAE,eAAe,SACpD,QAAQ,EACR,aAAa;YAEb,CAAA,GAAA,sBAAU,AAAD,EAAE,OAAO,SAAU,UAAU;gBACpC,IAAI,IAAI,CAAA,GAAA,+BAAkB,AAAD,EAAE,WAAW,MAAM;gBAC5C,EAAE,QAAQ,CAAC;gBACX,SAAS;YACX;QACF;QAEF,IAAI,iBAAiB,CAAA,GAAA,yBAAe,AAAD,EAAE,CAAC,cAAc,CAAC;QACrD,eAAe,YAAY,CAAC,CAAA,GAAA,yBAAe,AAAD;QAC1C,cAAc,WAAW,CAAC;QAC1B,cAAc,QAAQ;QACtB,OAAO;IAEP,gCAAgC;IAChC,yBAAyB;IACzB,YAAY;IACd,GACA;IAGF,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACnB,WACA;QAAC;KAAQ,EACT,SAAS,QAAQ,GAAG,EAAE,oBAAoB;QACxC,IAAI,MAAM,IAAI,EAAE,CAAC;QACjB,IAAI,IAAI,IAAI,aAAa;QACzB,CAAA,GAAA,4BAAM,AAAD,EAAE;QACP,OAAO,CAAA,GAAA,mBAAY,AAAD;IACpB,GACA;AAEJ;;;AC90CA;;;;;;;;;;;;;;;AAeA;;AAoEA,wDAAS;AAlET;AACA;AACA;AACA;AACA;AAEA;AACA;AAMA,SAAS;IACR,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,oBACA,EAAG,EACH,SAAS,gBAAgB,GAAG,EAAE,oBAAoB;QACjD,IAAI,KAAK,CAAA,GAAA,uCAAsB,AAAD;QAC9B,GAAG,GAAG,CAAC,IAAI,CAAA,GAAA,oDAAkC,AAAD,EAC3C,oBACA,SAAS,QAAQ,EAAE,GAAG;YACrB,CAAA,GAAA,+BAAc,AAAD,EAAE,SAAS,IAAI;gBAC3B,gCAAgC;gBAChC,2BAA2B;gBAC3B,IAAI,IAAI,CAAA,GAAA,mBAAY,AAAD;gBACnB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAG,IAAK;oBACtC,IAAI,MAAM,CAAA,GAAA,wBAAiB,AAAD,EAAE,IAAI,CAAC,EAAE;oBACnC,IAAI,aAAa;oBACjB,IAAI,MAAM,CAAC,CAAA,GAAA,0BAAgB,AAAD,EAAE,YAAY;oBACxC,EAAE,WAAW,CAAC;gBACf;gBACA,SAAS;YACV;QACD;QAED,IAAI,cAAc,CAAA,GAAA,uBAAa,AAAD,EAAE,CAAC,mBAAmB,CAAC;QACrD,GAAG,WAAW,CAAC;QACf,OAAO;IACR,GACA;IAID,CAAA,GAAA,kBAAO,AAAD,EAAE,aAAa,CACpB,iBACA;QAAE;KAAc,EAChB,SAAS,SAAS,GAAG,EAAE,oBAAoB;QAC1C,IAAI,WAAW,IAAI,EAAE,CAAC;QACtB,IAAI,aAAa,SAAS,MAAM,CAAC,CAAA,GAAA,0BAAgB,AAAD,EAAE,YAAY;QAC9D,IAAI,KAAK,SAAS,cAAc,CAAC,CAAA,GAAA,0BAAgB,AAAD,EAAE,MAAM;QACxD,IAAI,CAAC,cAAc,CAAC,IACnB,OAAO,CAAA,GAAA,6BAAmB,AAAD,EAAE;QAE5B,IAAI,KAAK,CAAA,GAAA,uCAAsB,AAAD;QAC9B,GAAG,YAAY,CAAC;QAChB,IAAI,MAAM,IAAI,CAAA,GAAA,iDAA+B,AAAD,EAAE,GAAG,aAAa;QAC9D,GAAG,GAAG,CAAC;QACP,GAAG,QAAQ;QACX,OAAO;IACR,GACA;AAGF;;;ACjFA;;;;;;;;;;;;;;;AAeA;;AAOA,6CAAgB;AALhB;AACA;AAEA,CAAA,GAAA,wBAAU,AAAD,EAAE,UAAU;AAEd,SAAS,QAAQ,QAAQ;IAC/B,KAAK,UAAU,WAAW;AAC3B;AAEA,SAAS,YAAY,CAAC,EAAE,CAAC;IACxB,IAAI,KAAK,GACR,MAAM,IAAI,MAAM,iCAAiC,IAAI,UAAU;AAEjE;AAEA,SAAS,aAAa,CAAC;IACtB,IAAI,CAAC,GACJ,MAAM,IAAI,MAAM;AAElB;AAEA,SAAS,YAAY,CAAC;IACrB,IAAI,GACH,MAAM,IAAI,MAAM;AAElB;AAEA,SAAS;IACR,IAAI,iBAAiB,IAAI;IACzB,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC;IAC3C,IAAI,OAAO,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB;IACtC,IAAI,cAAc;QACjB,QAAQ;QACR,cAAc;QACd,YAAY;IACb;IACA,aAAa;IACb,aAAa,KAAK,MAAM,CAAC;IACzB,YAAY,KAAK,MAAM,EAAE,YAAY,MAAM;IAC3C,YAAY,KAAK,YAAY,EAAE,YAAY,YAAY;IACvD,YAAY,KAAK,UAAU,EAAE,YAAY,UAAU;AACpD;AAEA,SAAS;IACR,IAAI,aAAa,IAAI;IACrB,IAAI,iBAAiB,IAAI;IACzB,IAAI,YAAY,IAAI;IACpB,IAAI,eAAe;IACnB,CAAA,GAAA,4CAAoB,AAAD,EAAE,2BAA2B,CAAC,YAAY,gBAAgB,cAAc;IAC3F,IAAI,OAAO,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB;IACtC,IAAI,cAAc;QACjB,QAAQ;QACR,QAAQ;QACR,YAAY;QACZ,OAAO;QACP,cAAc;IACf;IACA,aAAa;IACb,YAAY,KAAK,MAAM,EAAE,YAAY,MAAM;IAC3C,YAAY,KAAK,YAAY,EAAE,YAAY,YAAY;IACvD,YAAY,KAAK,KAAK,EAAE,YAAY,KAAK;IACzC,YAAY,KAAK,MAAM,EAAE,YAAY,MAAM;IAC3C,YAAY,KAAK,UAAU,EAAE,YAAY,UAAU;AACpD;AAEA,SAAS;IACR,IAAI,UAAU;IACd,IAAI,WAAW;IACf,IAAI,WAAW;IACf,IAAI,UAAU;IACd,IAAI,UAAU;IACd,IAAI,SAAS;IACb,CAAA,GAAA,4CAAoB,AAAD,EAAE,iBAAiB,CAAC,SAAS,UAAU,UAAU,SAAS,SAAS;IACtF,IAAI,OAAO,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB;IACtC,IAAI,cAAc;QACjB,QAAQ;QACR,cAAc;QACd,SAAS;QACT,UAAU;QACV,UAAU;QACV,SAAS;QACT,SAAS;QACT,QAAQ;IACT;IACA,aAAa;IACb,YAAY,KAAK,MAAM,EAAE,YAAY,MAAM;IAC3C,YAAY,KAAK,YAAY,EAAE,YAAY,YAAY;IACvD,YAAY,KAAK,OAAO,EAAE,YAAY,OAAO;IAC7C,YAAY,KAAK,QAAQ,EAAE,YAAY,QAAQ;IAC/C,YAAY,KAAK,QAAQ,EAAE,YAAY,QAAQ;IAC/C,YAAY,KAAK,OAAO,EAAE,YAAY,OAAO;IAC7C,YAAY,KAAK,OAAO,EAAE,YAAY,OAAO;IAC7C,YAAY,KAAK,MAAM,EAAE,YAAY,MAAM;AAC5C;AAGA,SAAS;IACR,CAAA,GAAA,4CAAoB,AAAD,EAAE,SAAS;IAC9B,IAAI,OAAO,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB;IACtC,IAAI,cAAc;QACjB,QAAQ;QACR,cAAc;IACf;IACA,aAAa;IACb,aAAa,KAAK,MAAM,CAAC;IACzB,YAAY,KAAK,MAAM,EAAE,YAAY,MAAM;IAC3C,YAAY,KAAK,YAAY,EAAE,YAAY,YAAY;AACxD;AAEA,SAAS;IACR,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;IAC3C,IAAI,OAAO,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB;IACtC,IAAI,cAAc;QACjB,QAAQ;QACR,cAAc;IACf;IACA,aAAa;IACb,aAAa,KAAK,MAAM,CAAC;IACzB,YAAY,KAAK,MAAM,EAAE,YAAY,MAAM;IAC3C,YAAY,KAAK,YAAY,EAAE,YAAY,YAAY;AACxD;AAEA,SAAS;IACR,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB;IAC1C,IAAI,OAAO,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB;IACtC,IAAI,cAAc;QACjB,QAAQ;QACR,cAAc;IACf;IACA,aAAa;IACb,aAAa,KAAK,MAAM,CAAC;IACzB,YAAY,KAAK,MAAM,EAAE,YAAY,MAAM;IAC3C,YAAY,KAAK,YAAY,EAAE,YAAY,YAAY;AACxD;AAEA,SAAS;IACR,CAAA,GAAA,4CAAoB,AAAD,EAAE,8BAA8B;IACnD,IAAI,OAAO,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB;IACtC,IAAI,cAAc;QACjB,QAAQ;QACR,cAAc;IACf;IACA,aAAa;IACb,aAAa,KAAK,MAAM,CAAC;IACzB,YAAY,KAAK,MAAM,EAAE,YAAY,MAAM;IAC3C,YAAY,KAAK,YAAY,EAAE,YAAY,YAAY;AACxD;AAGA,SAAS;IACR,IAAI,MAAM,IAAI;IACd,CAAA,GAAA,4CAAoB,AAAD,EAAE,SAAS;IAC9B,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC,KAAK;IAChD,CAAA,GAAA,4CAAoB,AAAD,EAAE,iBAAiB,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK;IAChE,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;AACnD;AAGA,SAAS;IACR,IAAI,MAAM,IAAI;IACd,CAAA,GAAA,4CAAoB,AAAD,EAAE,SAAS;IAC9B,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC,KAAK;IAChD,CAAA,GAAA,4CAAoB,AAAD,EAAE,iBAAiB,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK;IAChE,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,CAAA,GAAA,4CAAoB,AAAD,EAAE,iBAAiB,CAAC,KAAK,KAAK,KAAK,KAAK,KAAK;IAChE,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;AACnD;AAEA,SAAS;IACR,IAAI,MAAM,IAAI;IACd,CAAA,GAAA,4CAAoB,AAAD,EAAE,SAAS;IAC9B,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB;IAC1C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC,KAAK;IAChD,CAAA,GAAA,4CAAoB,AAAD,EAAE,2BAA2B,CAAC,KAAK,KAAK;IAC3D,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;AACnD;AAEA,SAAS;IACR,IAAI,MAAM,IAAI;IACd,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB;IAC1C,CAAA,GAAA,4CAAoB,AAAD,EAAE,8BAA8B;IACnD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;AACnD;AAEA,SAAS;IACR,IAAI,MAAM,IAAI;IACd,CAAA,GAAA,4CAAoB,AAAD,EAAE,SAAS;IAC9B,CAAA,GAAA,4CAAoB,AAAD,EAAE,SAAS;IAC9B,CAAA,GAAA,4CAAoB,AAAD,EAAE,SAAS;IAC9B,CAAA,GAAA,4CAAoB,AAAD,EAAE,SAAS;IAC9B,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB,CAAC;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB;IAC1C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB;IAC1C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB;IAC1C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB;IAC1C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB;IAC1C,CAAA,GAAA,4CAAoB,AAAD,EAAE,sBAAsB;IAC3C,CAAA,GAAA,4CAAoB,AAAD,EAAE,qBAAqB;IAC1C,CAAA,GAAA,4CAAoB,AAAD,EAAE,8BAA8B;IACnD,CAAA,GAAA,4CAAoB,AAAD,EAAE,8BAA8B;IACnD,CAAA,GAAA,4CAAoB,AAAD,EAAE,8BAA8B;IACnD,CAAA,GAAA,4CAAoB,AAAD,EAAE,8BAA8B;IACnD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB,GAAG,MAAM,EAAE;IAClD,YAAY,CAAA,GAAA,wBAAU,AAAD,EAAE,gBAAgB;AACxC;;;AC5PA;;;;;;;;;;;;;;;AAeA;;AAoLA,iDAAS;AAAT,qDAAsB;AAhLtB,IAAI,OAAO;AAGX,SAAS,YAAY,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IACpD;IACA,IAAI,IAAI,CAAC;IACT,EAAE,GAAG,GAAG;IACR,EAAE,MAAM,GAAG;IACX,EAAE,OAAO,GAAG;IACZ,EAAE,QAAQ,GAAG;IACb,EAAE,OAAO,GAAG;IACZ,eAAe;AAChB;AAEA,IAAI,4BAA4B;AAChC,IAAI,cAAc;AAElB,SAAS;IACR,IAAI,aACH,aAAa;IAEd,cAAc,WAAW;QACxB,SAAS,cAAc,CAAC,sBAAsB,KAAK,CAAC,OAAO,GAAG;QAC9D,4BAA4B;IAC7B,GAAG;AACJ;AAEA,SAAS,kBAAkB,GAAG,EAAE,KAAK,EAAE,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI;IAC1D,IAAI,CAAC,2BAA2B;QAC/B,4BAA4B;QAC5B,SAAS,cAAc,CAAC,sBAAsB,KAAK,CAAC,OAAO,GAAG;QAC9D;QACA;IACD;IACA;IACA,YAAY,KAAK,OAAO,MAAM,KAAK,KAAK;AACzC;AAGA,SAAS;IACR,SAAS,cAAc,CAAC,gBAAgB,KAAK,GAAG;AACjD;AAEA,SAAS,gBAAgB,CAAC;IACzB,IAAI,EAAE,GAAG,IAAI,SACZ;AAEF;AAGA,SAAS;IACR,IAAI,cAAc,SAAS,cAAc,CAAC;IAC1C,YAAY,QAAQ,GAAG,SAAS,CAAC;QAChC,mCAAmC;QACnC,OAAO;QACP,YAAY,SAAS,OAAO,OAAO,OAAO,OAAO;QACjD,WAAW;YACV,YAAY,KAAK,GAAG;QACrB,GAAG;IACJ;IACA,YAAY,OAAO,GAAG,SAAS,CAAC;QAC/B,IAAI,SAAS,MAAM;YAClB,8BAA8B;YAC9B,OAAO,YAAY,KAAK;YACxB,YAAY,MAAM,OAAO,OAAO,OAAO,OAAO;QAC/C,OAAO;YACN,iCAAiC;YACjC,IAAI,SAAS,YAAY,KAAK;YAC9B,IAAI,OAAO,MAAM,GAAG,KAAK,MAAM,EAAE;gBAChC,IAAI,IAAI,OAAO,MAAM,CAAC,OAAO,MAAM,GAAG;gBACtC,OAAO;gBACP,YAAY,GAAG,OAAO,OAAO,OAAO,OAAO;YAC5C,OAAO;gBACN,OAAO;gBACP,oBAAoB;gBACpB,YAAY,aAAa,OAAO,OAAO,OAAO,OAAO;YACtD;QACD;QACA,WAAW;YACV,YAAY,KAAK,GAAG;QACrB,GAAG;QACH,OAAO;IACR;IAEA,YAAY,WAAW,CAAC;IACxB,SAAS,cAAc,CAAC,sBAAsB,KAAK,CAAC,OAAO,GAAG;IAC9D,SAAS,cAAc,CAAC,YAAY,SAAS,CAAC,GAAG,CAAC;IAElD,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,OAAO,MAAM,OAAO,OAAO,OAAO;IACrD;IACA,SAAS,cAAc,CAAC,aAAa,OAAO,GAAG;QAC9C,kBAAkB,OAAO,OAAO,OAAO,OAAO,OAAO;IACtD;IACA,SAAS,cAAc,CAAC,eAAe,OAAO,GAAG;QAChD,kBAAkB,aAAa,OAAO,OAAO,OAAO,OAAO;IAC5D;IACA,SAAS,cAAc,CAAC,eAAe,OAAO,GAAG;QAChD,kBAAkB,cAAc,OAAO,OAAO,OAAO,OAAO;IAC7D;IAEA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,aAAa,OAAO,OAAO,OAAO,OAAO;IAC5D;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,aAAa,MAAM,OAAO,OAAO,OAAO;IAC3D;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,UAAU,OAAO,OAAO,OAAO,OAAO;IACzD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IACA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,MAAM,OAAO,OAAO,OAAO;IACnD;IAEA,SAAS,cAAc,CAAC,eAAe,OAAO,GAAG;QAChD,kBAAkB,SAAS,OAAO,MAAM,OAAO,OAAO;IACvD;IACA,SAAS,cAAc,CAAC,eAAe,OAAO,GAAG;QAChD,kBAAkB,SAAS,OAAO,OAAO,OAAO,OAAO;IACxD;IAEA,SAAS,cAAc,CAAC,cAAc,OAAO,GAAG;QAC/C,kBAAkB,KAAK,OAAO,OAAO,OAAO,OAAO;IACpD;IACA,SAAS,cAAc,CAAC,eAAe,OAAO,GAAG;QAChD,kBAAkB,KAAK,OAAO,OAAO,OAAO,OAAO;IACpD;IACA,SAAS,cAAc,CAAC,gBAAgB,OAAO,GAAG;QACjD,kBAAkB,KAAK,OAAO,OAAO,OAAO,OAAO;IACpD;IAEA,SAAS,cAAc,CAAC,eAAe,OAAO,GAAG;QAChD,kBAAkB,SAAS,OAAO,OAAO,OAAO,OAAO;IACxD;IACA,SAAS,cAAc,CAAC,gBAAgB,OAAO,GAAG;QACjD,kBAAkB,SAAS,MAAM,OAAO,OAAO,OAAO;IACvD;AACD","sources":["../../node_modules/@parcel/runtime-browser-hmr/lib/runtime-acb37eae795a094b.js","vodkastart.js","vodka.js","eventqueue.js","gc.js","browsereventresponsefunctions.js","manipulator.js","nex/doc.js","nex/word.js","nex/line.js","nex/deferredcommand.js","nex/deferredvalue.js","nex/nil.js","asyncfunctions.js","midifunctions.js","nex/letter.js","pfonts/pfontmanager.js","pfonts/basic.js","pfonts/drawingops.js","pfonts/bezier.js","pfonts/glyph.js","pfonts/font.js","pfonts/pen.js","pfonts/weirdhelvetica.js","nex/separator.js","keydispatcher.js","actions.js","keyresponsefunctions.js","nex/builtin.js","documentation.js","evaluatorinterface.js","builtins/asyncbuiltins.js","builtins/surfacebuiltins.js","nex/surface.js","builtins/basicbuiltins.js","builtins/contractbuiltins.js","nex/contract.js","builtins/environmentbuiltins.js","builtins/filebuiltins.js","servercommunication.js","nexparser2.js","parserfunctions.js","builtins/iterationbuiltins.js","builtins/logicbuiltins.js","builtins/makebuiltins.js","builtins/mathbuiltins.js","builtins/stringbuiltins.js","builtins/syscalls.js","rootmanager.js","webfonts.js","builtins/tagbuiltins.js","builtins/testbuiltins.js","builtins/typeconversions.js","builtins/wavetablebuiltins.js","builtins/midibuiltins.js","tests/unittests.js","mobile.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";var HMR_USE_SSE = false;module.bundle.HMR_BUNDLE_ID = \"f03ab1989876d776\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, HMR_USE_SSE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var HMR_USE_SSE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !['localhost', '127.0.0.1', '0.0.0.0'].includes(hostname) ? 'wss' : 'ws';\n  var ws;\n  if (HMR_USE_SSE) {\n    ws = new EventSource('/__parcel_hmr');\n  } else {\n    try {\n      ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n    } catch (err) {\n      if (err.message) {\n        console.error(err.message);\n      }\n      ws = {};\n    }\n  }\n\n  // Web extension context\n  var extCtx = typeof browser === 'undefined' ? typeof chrome === 'undefined' ? null : chrome : browser;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  if (ws instanceof WebSocket) {\n    ws.onerror = function (e) {\n      if (e.message) {\n        console.error(e.message);\n      }\n    };\n    ws.onclose = function () {\n      console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n    };\n  }\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 || _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension fix\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3 && typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n            extCtx.runtime.reload();\n            return;\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 || _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","import { setup } from './vodka.js'\nsetup();\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from './utils.js'\n\nimport { setAppFlags, otherflags, experiments } from './globalappflags.js'\nimport { perfmon } from './perfmon.js'\n\nimport { eventQueue } from './eventqueue.js'\n\nimport { eventQueueDispatcher } from './eventqueuedispatcher.js'\nimport { keyDispatcher } from './keydispatcher.js'\nimport { systemState } from './systemstate.js'\nimport { createAsyncBuiltins } from './builtins/asyncbuiltins.js'\nimport { createSurfaceBuiltins } from './builtins/surfacebuiltins.js'\nimport { createBasicBuiltins } from './builtins/basicbuiltins.js'\nimport { createContractBuiltins } from './builtins/contractbuiltins.js'\nimport { createEnvironmentBuiltins } from './builtins/environmentbuiltins.js'\nimport { createFileBuiltins } from './builtins/filebuiltins.js'\nimport { createIterationBuiltins } from './builtins/iterationbuiltins.js'\nimport { createLogicBuiltins } from './builtins/logicbuiltins.js'\nimport { createMakeBuiltins } from './builtins/makebuiltins.js'\nimport { createMathBuiltins } from './builtins/mathbuiltins.js'\nimport { createStringBuiltins } from './builtins/stringbuiltins.js'\nimport { createSyscalls } from './builtins/syscalls.js'\nimport { createTagBuiltins } from './builtins/tagbuiltins.js'\nimport { createTestBuiltins } from './builtins/testbuiltins.js'\nimport { createTypeConversionBuiltins } from './builtins/typeconversions.js'\nimport { createWavetableBuiltins } from './builtins/wavetablebuiltins.js'\nimport { createMidiBuiltins } from './builtins/midibuiltins.js'\nimport { loadAndRun } from './servercommunication.js'\nimport { RenderNode } from './rendernode.js'\nimport { Root } from './nex/root.js'\nimport { Command } from './nex/command.js'\nimport { DeferredCommand } from './nex/deferredcommand.js'\nimport { constructEString } from './nex/estring.js'\nimport { NEXT_NEX_ID, setNextNexId } from './nex/nex.js'\nimport { runTest } from './tests/unittests.js';\nimport { possiblyRecordAction, startRecordingTest } from './testrecorder.js'\nimport {\n\tRENDER_FLAG_EXPLODED,\n\tRENDER_FLAG_NORMAL,\n\tRENDER_FLAG_RENDER_IF_DIRTY,\n\tRENDER_MODE_NORM,\n\tRENDER_MODE_EXPLO } from './globalconstants.js'\nimport { evaluateNexSafely } from './evaluator.js'\nimport { BINDINGS } from './environment.js'\nimport { rootManager } from './rootmanager.js'\nimport { setAPIDocCategory, writeDocs } from './documentation.js'\nimport { maybeKillSound } from './webaudio.js'\nimport { setupMobile, doMobileKeyDown } from './mobile.js'\nimport { setupHelp } from './help.js'\n\nimport { getFeatureVector } from './featurevector.js'\n\n\n// EXPERIMENTS\n\n// all these should go into SystemState\n// possibly some of them would be moved into Render-specific\n// SystemState objects (for example, screen rendering vs. audio rendering)\n\nlet root = null;\n\n// used by emscripten\nvar Module = {}\n\nfunction dumpPerf() {\n\tperfmon.dump();\n}\n\nfunction startPerf() {\n\tperfmon.activate();\n}\n\nfunction doRealKeyInput(keycode, whichkey, hasShift, hasCtrl, hasMeta, hasAlt) {\n\tlet r = keyDispatcher.dispatch(keycode, whichkey, hasShift, hasCtrl, hasMeta, hasAlt);\n\n\t// if it returns false, it means we handled the keystroke and we are\n\t// canceling the browser event - this also means something 'happened' so we render.\n\tif (!r) {\n\t\teventQueueDispatcher.enqueueRenderOnlyDirty()\n\t}\n\treturn r;\t\n}\n\n// omgg\nfunction doKeyInputNotForTests(keycode, whichkey, hasShift, hasCtrl, hasMeta, hasAlt) {\n\teventQueueDispatcher.enqueueDoKeyInput(keycode, whichkey, hasShift, hasCtrl, hasMeta, hasAlt);\n\t// will return true if we want the browser event to propagate\n\treturn keyDispatcher.shouldBubble(keycode, whichkey, hasShift, hasCtrl, hasMeta, hasAlt);\n}\n\nvar testEventQueue = [];\n\n// the tests that use this legacy method are updated to use the new way,\n// but this is still used in two places in testharness.js\nfunction doKeyInput(keycode, whichkey, hasShift, hasCtrl, hasMeta) {\n\t//if you have to debug an old test you can alert the keycode\n\t// and run with -s\n\t//alert(keycode);\n\n\n\n\t// in order to make this simulate user activity better I'd need\n\t// to go modify all the tests so they don't call this method\n\t// synchronously. Instead I will force a full-screen render\n\t// in between key events -- there are certain things that\n\t// require render node caching to happen in between user\n\t// events (which usually happens because people can't\n\t// type keys fast enough to beat the js scheduler)\n\teventQueueDispatcher.enqueueDoKeyInput(keycode, whichkey, hasShift, hasCtrl, hasMeta, false);\n\teventQueueDispatcher.enqueueImportantTopLevelRender();\n\treturn false; // we no longer know if we can honor the browser event?\n}\n\n\nfunction createBuiltins() {\n\t// in the order we want them in the docs\n\tsetAPIDocCategory('Basic Builtins'); createBasicBuiltins();\n\tsetAPIDocCategory('Environment Builtins'); createEnvironmentBuiltins();\n\tsetAPIDocCategory('Iteration Builtins'); createIterationBuiltins();\n\tsetAPIDocCategory('Logic Builtins'); createLogicBuiltins();\n\tsetAPIDocCategory('Math Builtins'); createMathBuiltins();\n\tsetAPIDocCategory('Syscalls'); createSyscalls();\n\tsetAPIDocCategory('Tag Builtins'); createTagBuiltins();\n\tsetAPIDocCategory('Contract Builtins'); createContractBuiltins();\n\tsetAPIDocCategory('Async Builtins'); createAsyncBuiltins();\n\tsetAPIDocCategory('File Builtins'); createFileBuiltins();\n\tsetAPIDocCategory('String Builtins'); createStringBuiltins();\n\tsetAPIDocCategory('Wavetable Builtins'); createWavetableBuiltins();\n\tsetAPIDocCategory('Midi Builtins'); createMidiBuiltins();\n\tsetAPIDocCategory('Surface Builtins'); createSurfaceBuiltins();\n\tsetAPIDocCategory('Make Builtins'); createMakeBuiltins();\n\tsetAPIDocCategory('Type Conversion Builtins'); createTypeConversionBuiltins();\n\tsetAPIDocCategory('Test Builtins'); createTestBuiltins();\n}\n\nfunction nodeLevelRender(node) {\n\tsystemState.setGlobalRenderPassNumber(systemState.getGlobalRenderPassNumber() + 1);\n\tlet flags = systemState.getGlobalCurrentDefaultRenderFlags();;\n\tnode.render(flags);\n}\n\nfunction topLevelRender() {\n\tsystemState.setGlobalRenderPassNumber(systemState.getGlobalRenderPassNumber() + 1);\n\tlet flags = systemState.getGlobalCurrentDefaultRenderFlags();\n\tsystemState.getRoot().setRenderDepth(0);\n\tsystemState.getRoot().render(flags);\n}\n\nfunction renderOnlyDirty() {\n\tsystemState.setGlobalRenderPassNumber(systemState.getGlobalRenderPassNumber() + 1);\n\tlet flags = systemState.getGlobalCurrentDefaultRenderFlags();\n\tsystemState.getRoot().setRenderDepth(0);\n\tsystemState.getRoot().render(flags | RENDER_FLAG_RENDER_IF_DIRTY);\n\tsystemState.getRoot().setAllNotDirty();\n}\n\nfunction setDocRootFromFile(filename) {\n\tlet cmd = DeferredCommand.makeDeferredCommandWithArgs(\n\t\t\"eval\",\n\t\tsystemState.getSCF().makeCommandWithArgs(\n\t\t\t\"load\",\n\t\t\tconstructEString(filename)));\n\tlet exp = evaluateNexSafely(cmd, BINDINGS);\n\tlet expNode = root.appendChild(exp);\n\texpNode.setSelected(true);\n\tsystemState.setGlobalCurrentDefaultRenderFlags(0);\t\n}\n\nfunction setDocRootFromStart() {\n\tloadAndRun('start-doc', function(result) {\n\t\tlet expNode = root.appendChild(result);\n\t\texpNode.setSelected(false);\n\t\troot.setRenderMode(RENDER_MODE_NORM);\n\t\tsystemState.setGlobalCurrentDefaultRenderFlags(0);\t\n\t});\n}\n\nfunction setEmptyDocRoot() {\n\troot.setRenderMode(RENDER_MODE_EXPLO);\n\troot.setSelected(false);\n}\n\n\nfunction setOrCreateSessionId() {\n\tlet params = new URLSearchParams(window.location.search);\n\tlet sessionId = null;\n\tif (params.has('sessionId')) {\n\t\tsessionId = params.get('sessionId');\n\t\tUtils.setCookie('sessionId', sessionId);\n\t} else {\n\t\tsessionId = Utils.getCookie('sessionId');\n\t}\n\tsystemState.setSessionId(sessionId);\n}\n\nfunction getFilenameFromQueryString() {\n\tlet params = new URLSearchParams(window.location.search);\n\tif (params.has('runfile')) {\n\t\treturn params.get('runfile');\n\t}\n\treturn null;\n}\n\nfunction replSetup() {\n\teventQueue.initialize();\n\tcreateBuiltins();\n\t// because of https://github.com/eeeeaaii/vodka/issues/29\n\tif (NEXT_NEX_ID > 1000) {\n\t\tthrow new Error('too many builtins, increase starting nex ID');\n\t}\n\tsetNextNexId(1000);\n}\n\nfunction macSubst() {\n\tif (!Utils.isMac()) {\n\t\tlet opts = document.getElementsByClassName('optionkey');\n\t\tfor (let i = 0; i < opts.length; i++) {\n\t\t\topts[i].textContent = 'ctrl';\n\t\t}\t\t\n\t\tlet metas = document.getElementsByClassName('metakey');\n\t\tfor (let i = 0; i < metas.length; i++) {\n\t\t\tmetas[i].textContent = 'ctrl';\n\t\t}\t\t\n\t}\n}\n\n\nfunction doKeydownEvent(e) {\n\tpossiblyRecordAction(e, 'down');\n\tif (systemState.isKeyFunnelActive()) {\n\t\treturn doKeyInputNotForTests(e.key, e.code, e.shiftKey, e.ctrlKey, e.metaKey, e.altKey);\n\t} else {\n\t\treturn true;\n\t}\n}\n\n\n// app main entry point\n\nfunction setup() {\n\tsetAppFlags();\n\t// do session id before doing help\n\tsetOrCreateSessionId();\n\tmacSubst();\n\n \n// this replaced by react\n//\tsetupHelp();\n\n\n\teventQueue.initialize();\n\n\tif (Utils.getQSVal('mobile')) {\n\t\tsetupMobile();\n\t}\n\n\n\tkeyDispatcher.setUiCallbackObject({\n\t\t'setExplodedState': function(exploded) {\n\t\t\tdocument.getElementById(\"mobile_esc\").innerText = (exploded) ? 'explode' : 'contract'\n\t\t}});\n\n\t// testharness.js needs this\n\twindow.doKeyInput = doKeyInput;\n\twindow.runTest = runTest;\n\tcreateBuiltins();\n\n\n// this also replaced by react\n//\twriteDocs();\n\n\n\n\t// because of https://github.com/eeeeaaii/vodka/issues/29\n\tif (NEXT_NEX_ID > 1000) {\n\t\tthrow new Error('too many builtins, increase starting nex ID');\n\t}\n\tsetNextNexId(1000);\n\n\t// this code for attaching a render node to a root will expand\n\t// when there are different render node types.\n\t// note this is duplicated in undo.js\n\troot = rootManager.createNewRoot();\n\n\tif (Utils.getQSVal('createtest')) {\n\t\tstartRecordingTest();\n\t\tdocument.title = '- recording test -';\n\t}\n\n\n\tdocument.onclick = function(e) {\n\t\tpossiblyRecordAction(e, 'mouse');\n\t\treturn true;\n\t}\n\tdocument.onkeyup = function(e) {\n\t\tpossiblyRecordAction(e, 'up');\n\t\tmaybeKillSound();\n\t\treturn true;\n\t}\n\tdocument.onkeydown = function(e) {\n\t\tdoMobileKeyDown(e);\n\t\treturn doKeydownEvent(e);\n\t}\n\tlet filenameFromQS = getFilenameFromQueryString();\n\tif (!!otherflags.FILE) {\n\t\tsetDocRootFromFile(otherflags.FILE);\n\t} else if (filenameFromQS) {\n\t\tsetDocRootFromFile(filenameFromQS);\n\t} else if (getFeatureVector().hasstart) {\n\t\t// feature vector is initialized by the webserver.\n\t\t// if hasstart is true, it means the user has added a \":start\"\n\t\t// file, meaning that it should be loaded.\n\t\tsetDocRootFromStart();\n\t} else {\n\t\tsetEmptyDocRoot();\n\t}\n\teventQueueDispatcher.enqueueRenderOnlyDirty()\n}\n\n\nexport {\n\tsetup,\n\tdumpPerf,\n\tstartPerf,\n\ttopLevelRender,\n\tnodeLevelRender,\n\tdoRealKeyInput,\n\tdoKeyInput,\n\trenderOnlyDirty,\n\treplSetup\n}\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n\n// javascript timeouts and events are already queued,\n// but it's first-come-first-serve. This converts\n// them into a priority queue by making every action\n// just push an event onto a javascript array queue\n// marked w/ the appropriate priority, then we\n// pop and execute anything that's been queued.\n\n// we have:\n// - user events, which preempt everything because responsiveness\n// - deferred finish, which should preempt rendering because they affect how things get rendered\n// - rendering\n// - true low priority things, like alert animation\n// additionally, in certain contexts we need to enqueue render events at an equal priority\n// to user events, like for example for older tests that directly call into doKeyInput\n// rather than mimicking browser events.\n\n// do not do the thing where you have multiple names for a queue\nconst USER_EVENT_PRIORITY = 0;\nconst DEFERRED_PRIORITY = 1;\nconst RENDER_PRIORITY = 2;\nconst ALERT_ANIMATION_PRORITY = 3;\nconst GC_PRIORITY = 4;\n\nimport * as Vodka from './vodka.js'\n\nimport { gc } from './gc.js'\nimport { respondToClickEvent } from './browsereventresponsefunctions.js'\nimport { systemState } from './systemstate.js'\nimport { eventQueueDispatcher } from './eventqueuedispatcher.js'\nimport { experiments } from './globalappflags.js'\n\nconst EVENT_DEBUG = false;\n\nclass EventQueue {\n\tconstructor() {\n\t\tthis.queueSet = [];\n\t\tthis.queueSet[USER_EVENT_PRIORITY] = [];\n\t\tthis.queueSet[DEFERRED_PRIORITY] = [];\n\t\tthis.queueSet[RENDER_PRIORITY] = [];\n\t\tthis.queueSet[ALERT_ANIMATION_PRORITY] = [];\n\t\tthis.queueSet[GC_PRIORITY] = [];\n\t}\n\n\tinitialize() {\n\t\teventQueueDispatcher.createDelegate('enqueueAlertAnimation', this);\n\t\teventQueueDispatcher.createDelegate('enqueueRenderOnlyDirty', this);\n\t\teventQueueDispatcher.createDelegate('enqueueDoKeyInput', this);\n\t\teventQueueDispatcher.createDelegate('enqueueDoClickHandlerAction', this);\n\t\teventQueueDispatcher.createDelegate('enqueueImportantTopLevelRender', this);\n\t\teventQueueDispatcher.createDelegate('enqueueDeferredFinish', this);\n\t\teventQueueDispatcher.createDelegate('enqueueDeferredSettle', this);\n\t\teventQueueDispatcher.createDelegate('enqueueRenotifyDeferredListeners', this);\n\t\teventQueueDispatcher.createDelegate('enqueueTopLevelRender', this);\n\t\teventQueueDispatcher.createDelegate('enqueueGC', this);\n\t}\n\n\t/**\n\t * @param {RenderNode} renderNode\n\t */\n\tenqueueAlertAnimation(renderNode) {\n\t\tEVENT_DEBUG ? console.log('enqueueing: AlertAnimation'):null;\n\t\tlet item = {\n\t\t\taction: \"doAlertAnimation\",\n\t\t\tshouldDedupe: true,\n\t\t\trenderNode: renderNode,\n\t\t\tequals: function(other) {\n\t\t\t\t // ref equals is okay?\n\t\t\t\treturn (\n\t\t\t\t\tother.action == this.action\n\t\t\t\t\t&& other.renderNode == this.renderNode);\n\t\t\t},\n\t\t\tdo: function doAlertAnimation() {\n\t\t\t\tif (!experiments.DISABLE_ALERT_ANIMATIONS) {\n\t\t\t\t\tthis.renderNode.doAlertAnimation();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tthis.queueSet[ALERT_ANIMATION_PRORITY].push(item);\n\t\tthis.setTimeoutForProcessingNextItem(item);\n\t}\n\n\t/**\n\t * @param {string} keycode\n\t * @param {string} whichkey\n\t * @param {boolean} hasShift\n\t * @param {boolean} hasCtrl\n\t * @param {boolean} hasMeta\n\t * @param {boolean} hasAlt\n\t */\n\tenqueueDoKeyInput(keycode, whichkey, hasShift, hasCtrl, hasMeta, hasAlt) {\n\t\tEVENT_DEBUG ? console.log('enqueueing: DoKeyInput'):null;\n\t\tlet item = {\n\t\t\taction: \"doKeyInput\",\n\t\t\tkeycode: keycode,\n\t\t\twhichkey: whichkey,\n\t\t\thasShift: hasShift,\n\t\t\thasCtrl: hasCtrl,\n\t\t\thasMeta: hasMeta,\n\t\t\thasAlt: hasAlt,\n\t\t\tshouldDedupe: false,\n\t\t\tequals: null, // not needed when shouldDedupe = false\n\t\t\tdo: function doDoKeyInput() {\n\t\t\t\tVodka.doRealKeyInput(this.keycode, this.whichkey, this.hasShift, this.hasCtrl, this.hasMeta, this.hasAlt);\n\t\t\t}\n\t\t};\n\t\tthis.queueSet[USER_EVENT_PRIORITY].push(item);\n\t\tthis.setTimeoutForProcessingNextItem(item);\n\t}\n\n\n\t/**\n\t * Enqueues an event that renders only nexes that are marked as dirty.\n\t */\n\tenqueueRenderOnlyDirty() {\n\t\tEVENT_DEBUG ? console.log('enqueueing: RenderOnlyDirty'):null;\n\t\tlet item = {\n\t\t\taction: \"renderOnlyDirty\",\n\t\t\tshouldDedupe: true,\n\t\t\tequals: function(other) {\n\t\t\t\t // ref equals is okay?\n\t\t\t\treturn (\n\t\t\t\t\tother.action == this.action);\n\t\t\t},\n\t\t\tdo: function doRenderNodeRender() {\n\t\t\t\tVodka.renderOnlyDirty();\n\t\t\t}\n\t\t};\n\t\tthis.queueSet[RENDER_PRIORITY].push(item);\n\t\tthis.setTimeoutForProcessingNextItem(item);\n\t}\n\n\tenqueueImportantTopLevelRender() {\n\t\tEVENT_DEBUG ? console.log('enqueueing: ImportantTopLevelRender'):null;\n\t\tlet item = {\n\t\t\taction: \"importantTopLevelRender\",\n\t\t\tshouldDedupe: true,\n\t\t\tequals: function(other) {\n\t\t\t\treturn (\n\t\t\t\t\tother.action == this.action);\n\t\t\t},\n\t\t\tdo: function doImportantTopLevelRender() {\n\t\t\t\tVodka.topLevelRender();\n\t\t\t}\n\t\t};\n\t\t// push to the user event queue because higher priority\n\t\tthis.queueSet[USER_EVENT_PRIORITY].push(item);\n\t\tthis.setTimeoutForProcessingNextItem(item);\n\t}\n\n\tenqueueDoClickHandlerAction(target, renderNode, atTarget, event) {\n\t\tEVENT_DEBUG ? console.log('enqueueing: DoClickHandlerAction'):null;\n\t\tlet item = {\n\t\t\taction: \"doClickHandlerAction\",\n\t\t\ttarget: target,\n\t\t\tshouldDedupe: false,\n\t\t\trenderNode: renderNode,\n\t\t\tevent: event,\n\t\t\tatTarget: atTarget,\n\t\t\tequals: null, // not needed when shouldDedupe = false\n\t\t\tdo: function doDoClickHandlerAction() {\n\t\t\t\trespondToClickEvent(this.target, this.renderNode, this.atTarget, this.event);\n\t\t\t}\n\t\t};\n\t\t// TODO: test this and see if it works at render priority\n\t\tthis.queueSet[USER_EVENT_PRIORITY].push(item);\n\t\tthis.setTimeoutForProcessingNextItem(item);\n\t}\n\n\tenqueueDeferredFinish(deferred, result) {\n\t\tEVENT_DEBUG ? console.log('enqueueing: DeferredFinish'):null;\n\t\tlet item = {\n\t\t\taction: \"deferredFinish\",\n\t\t\tdeferred: deferred,\n\t\t\tresult: result,\n\t\t\tshouldDedupe: false,\n\t\t\tequals: null, // not needed when shouldDedupe = false\n\t\t\tdo: function doDeferredFinish() {\n\t\t\t\tthis.deferred.finish(this.result);\n\t\t\t}\n\t\t};\n\t\tthis.queueSet[DEFERRED_PRIORITY].push(item);\n\t\tthis.setTimeoutForProcessingNextItem(item);\n\t}\n\n\tenqueueDeferredSettle(deferred, result) {\n\t\tEVENT_DEBUG ? console.log('enqueueing: DeferredSettle'):null;\n\t\tlet item = {\n\t\t\taction: \"deferredSettle\",\n\t\t\tdeferred: deferred,\n\t\t\tresult: result,\n\t\t\tshouldDedupe: false,\n\t\t\tequals: null, // not needed when shouldDedupe = false\n\t\t\tdo: function doDeferredSettle() {\n\t\t\t\tthis.deferred.settle(this.result);\n\t\t\t}\n\t\t};\n\t\tthis.queueSet[DEFERRED_PRIORITY].push(item);\n\t\tthis.setTimeoutForProcessingNextItem(item);\n\t}\n\n\tenqueueRenotifyDeferredListeners(deferred) {\n\t\tEVENT_DEBUG ? console.log('enqueueing: RenotifyDeferredListeners'):null;\n\t\tlet item = {\n\t\t\taction: \"renotifyDeferredListeners\",\n\t\t\tdeferred: deferred,\n\t\t\tshouldDedupe: false,\n\t\t\tequals: null, // not needed when shouldDedupe = false\n\t\t\tdo: function doRenotifyDeferredListeners() {\n\t\t\t\tthis.deferred.notifyAllListeners();\n\t\t\t}\n\t\t};\n\t\tthis.queueSet[DEFERRED_PRIORITY].push(item);\n\t\tthis.setTimeoutForProcessingNextItem(item);\n\t}\n\n\tenqueueTopLevelRender() {\n\t\tEVENT_DEBUG ? console.log('enqueueing: TopLevelRender'):null;\n\t\tlet item = {\n\t\t\taction: \"topLevelRender\",\n\t\t\tshouldDedupe: true,\n\t\t\tequals: function(other) {\n\t\t\t\treturn (other.action == this.action);\n\t\t\t},\n\t\t\tdo: function doTopLevelRender() {\n\t\t\t\tVodka.topLevelRender();\n\t\t\t}\n\t\t};\n\t\tthis.queueSet[RENDER_PRIORITY].push(item);\n\t\tthis.setTimeoutForProcessingNextItem(item);\n\t}\n\n\tenqueueGC() {\n\t\tEVENT_DEBUG ? console.log('enqueueing: GC'):null;\n\t\tlet item = {\n\t\t\taction: \"gc\",\n\t\t\tshouldDedupe: true,\n\t\t\tequals: function(other) {\n\t\t\t\treturn (other.action == this.action);\n\t\t\t},\n\t\t\tdo: function doEnqueueGC() {\n\t\t\t\tgc.markAndSweep();\n\t\t\t}\n\t\t};\n\t\tthis.queueSet[GC_PRIORITY].push(item);\n\t\tthis.setTimeoutForProcessingNextItem(item);\n\t}\n\n\tsetTimeoutForProcessingNextItem(item) {\n\t\tsetTimeout(this.processNextItem.bind(this), 0);\n\t\t// setTimeout((function() {\n\t\t// \tthis.processNextItem();\n\t\t// }).bind(this), 0);\n\t}\n\n\tselectQueue() {\n\t\t// queues with lower indices in the queueSet array have higher priority\n\t\tfor (let i = 0; i < this.queueSet.length; i++) {\n\t\t\tif (this.queueSet[i].length > 0) {\n\t\t\t\treturn this.queueSet[i];\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tretrieveNextItem() {\n\t\tlet queueToUse = this.selectQueue();\n\t\tif (!queueToUse) return null;\n\t\tlet item = queueToUse.shift();\n\t\tEVENT_DEBUG ? console.log(`processing: ${item.action}`):null;\n\t\t// if a bunch of equivalent actions were enqueued, pop them all and just do one\n\t\twhile(queueToUse.length > 0 && queueToUse[0].shouldDedupe && queueToUse[0].equals(item)) {\n\t\t\tqueueToUse.shift();\n\t\t}\n\t\treturn item;\n\t}\n\n\tprocessNextItem() {\n\t\tlet item = this.retrieveNextItem();\n\t\tif (!item) {\n\t\t\treturn;\n\t\t}\n\t\titem.do();\n\t\tthis.setTimeoutForProcessingNextItem();\n\t}\n}\n\nconst eventQueue = new EventQueue();\n\nexport { eventQueue }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { systemState } from './systemstate.js';\n\n/*\nFF_GEN is a cheap way to cancel all pending deferred computations. It's a \"generation\"\nnumber, so basically if the current generation is zero, then any newly created deferred\ncomputation is given that generation number when it's kicked off. If the generation is\nincremented at any point (so that we are now on generation 1), then when that deferred\ncomputation attempts to complete, it will see that it's from an old generation, and it\nwon't complete.\n*/\n\nlet FF_GEN = 0;\n\nfunction getFFGen() {\n\treturn FF_GEN;\n}\n\nfunction incFFGen() {\n\tFF_GEN++;\n}\n\n// UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE \n// UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE \n// UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE UPDATE \n\n// This \"garbage collector\" is deprecated and unused. It's also misnamed, what it really is\n// is something that looks for orphan deferreds. However I don't think even this is needed\n// anymore because I can do deferred cancelling in the call to cleanupOnMemoryFree that\n// heap makes when freeing memory. Need to look at the mark and sweep algo below and see\n// if applies to now\n\n/**\n * Cancels any deferreds that are not visible on the screen. This is of questionable usefulness.\n */\nclass GarbageCollector {\n\t// right now I only do deferred, and I kill any deferreds\n\t// that are not currently visible/rendering on the screen\n\t// (meaning that if you stored an deferred in an environment\n\t// somewhere it will get killed by this)\n\t// also this is only run manually.\n\tconstructor() {\n\t\tthis.deferreds = {};\n\t}\n\n\tregister(def) {\n\t\tthis.deferreds[def.getID()] = {\n\t\t\tdef:def,\n\t\t\tisReachable:false\n\t\t};\n\t}\n\n\tmarkAndSweep() {\n\t\tfor (let key in this.deferreds) {\n\t\t\tlet rec = this.deferreds[key];\n\t\t\trec.isReachable = false;\n\t\t}\n\t\tlet nodesToProcess = [];\n\t\tnodesToProcess.push(systemState.getRoot());\n\t\twhile(nodesToProcess.length > 0) {\n\t\t\tlet node = nodesToProcess.pop();\n\t\t\tlet nex = node.getNex();\n\t\t\tif (nex.getTypeName() == '-deferredvalue-' || nex.getTypeName() == '-deferredcommand-') {\n\t\t\t\tthis.deferreds[nex.getID()].isReachable = true;\n\t\t\t}\n\t\t\tif (nex.isNexContainer()) {\n\t\t\t\tfor (let i = 0; i < node.numChildren(); i++) {\n\t\t\t\t\tlet c = node.getChildAt(i);\n\t\t\t\t\tnodesToProcess.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tfor (let key in this.deferreds) {\n\t\t\tlet rec = this.deferreds[key];\n\t\t\tif (!rec.isReachable) {\n\t\t\t\trec.def.cancel();\n\t\t\t}\n\t\t}\n\t}\n}\n\nconst gc = new GarbageCollector();\n\nexport { gc, incFFGen, getFFGen }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { eventQueueDispatcher } from './eventqueuedispatcher.js'\nimport { systemState } from './systemstate.js'\nimport { manipulator } from './manipulator.js'\n\n// can return null if user clicks on some other thing\nfunction getParentNexOfDomElement(elt) {\n\twhile(elt && !elt.classList.contains('nex')) {\n\t\telt = elt.parentNode;\n\t}\n\treturn elt;\n}\n\nfunction respondToClickEvent(nex, renderNode, atTarget, browserEvent) {\n\tif (nex.extraClickHandler) {\n\t\tnex.extraClickHandler(browserEvent.clientX, browserEvent.clientY);\n\t\treturn;\n\t}\n\tif (systemState.isMouseFunnelActive() && atTarget) {\n\t\tlet parentNexDomElt = getParentNexOfDomElement(browserEvent.target);\n\t\tif (systemState.getGlobalSelectedNode().getDomNode() == parentNexDomElt) {\n\t\t\treturn;\n\t\t}\n\t\tlet insertAfterRemove = false;\n\t\tlet oldSelectedNode = systemState.getGlobalSelectedNode();\n\t\tif ((systemState.getGlobalSelectedNode().getNex().getTypeName() == '-estring-'\n\t\t\t|| systemState.getGlobalSelectedNode().getNex().getTypeName() == '-eerror-')\n\t\t\t\t&& systemState.getGlobalSelectedNode().getNex().getMode() == MODE_EXPANDED) {\n\t\t\tsystemState.getGlobalSelectedNode().getNex().finishInput();\n\t\t} else if (systemState.getGlobalSelectedNode().getNex().getTypeName() == '-insertionpoint-') {\n\t\t\tinsertAfterRemove = true;\n\t\t}\n\n\t\tbrowserEvent.stopPropagation();\n\t\trenderNode.setSelected();\n\t\tif (insertAfterRemove && systemState.getGlobalSelectedNode() != oldSelectedNode) {\n\t\t\tmanipulator.removeNex(oldSelectedNode);\n\t\t}\n\t\teventQueueDispatcher.enqueueImportantTopLevelRender();\n\t}\n}\n\nexport { respondToClickEvent }\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nvar CLIPBOARD = null;\nvar CLIPBOARD_INSERTION_MODE = null;\n\nimport * as Utils from './utils.js'\nimport { systemState } from './systemstate.js'\nimport { RenderNode } from './rendernode.js' \nimport { Nex } from './nex/nex.js' \nimport { Root } from './nex/root.js' \nimport { ContextType } from './contexttype.js'\n\nimport { constructFatalError } from './nex/eerror.js'\n\nimport { constructLambda } from './nex/lambda.js'\nimport { constructESymbol } from './nex/esymbol.js' \nimport { constructCommand } from './nex/command.js' \nimport { constructBool } from './nex/bool.js' \nimport { constructDoc } from './nex/doc.js' \nimport { constructEString } from './nex/estring.js' \nimport { constructWord } from './nex/word.js' \nimport { constructWavetable } from './nex/wavetable.js' \nimport { constructLine } from './nex/line.js' \nimport { constructOrg } from './nex/org.js' \nimport { constructFloat } from './nex/float.js' \nimport { constructInteger } from './nex/integer.js' \nimport { constructDeferredCommand } from './nex/deferredcommand.js' \nimport { constructLetter } from './nex/letter.js' \nimport { constructSeparator } from './nex/separator.js' \nimport { constructNil } from './nex/nil.js' \nimport { constructInstantiator } from './nex/instantiator.js' \n\nimport { experiments } from './globalappflags.js'\nimport { isRecordingTest } from './testrecorder.js'\nimport { doTutorial } from './help.js'\nimport {\n\tINSERT_UNSPECIFIED,\n\tINSERT_AFTER,\n\tINSERT_BEFORE,\n\tINSERT_INSIDE,\n\tINSERT_AROUND\n} from './rendernode.js'\n\nclass Manipulator {\n\n\t// Private methods start with underscore. This needs a big refactoring.\n\n\t// deprecated\n\t_conformData(data) {\n\t\tif (data instanceof Nex) {\n\t\t\treturn new RenderNode(data);\n\t\t} else return data;\n\t}\n\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t// TESTS\n\n\t_inSameLine(s1, s2) {\n\t\tlet l1 = this.getEnclosingLineInSameDoc(s1);\n\t\tlet l2 = this.getEnclosingLineInSameDoc(s2);\n\t\treturn l1 == l2;\n\t}\n\n\tisInsertBefore(node) {\n\t\treturn (node.getInsertionMode() == INSERT_BEFORE);\n\t}\n\n\tisInsertAfter(node) {\n\t\treturn (node.getInsertionMode() == INSERT_AFTER);\n\t}\n\n\tisInsertAround(node) {\n\t\treturn (node.getInsertionMode() == INSERT_AROUND);\n\t}\n\n\tisInsertInside(node) {\n\t\treturn (node.getInsertionMode() == INSERT_INSIDE);\n\t}\n\n\t_isEmpty(node) {\n\t\treturn node.numChildren() == 0;\n\t}\n\n\t_isLetterInDocFormatUpToLine(node) {\n\t\tif (!Utils.isLetter(node)) return false;\n\t\tlet word = node.getParent();\n\t\tif (!word) return false;\n\t\tif (!Utils.isWord(word)) return false;\n\t\tlet line = word.getParent();\n\t\tif (!line) return false;\n\t\tif (!Utils.isLine(line)) return false;\n\t\treturn true;\n\n\t}\n\n\n\t_isLetterInDocFormat(node) {\n\t\tif (!Utils.isLetter(node)) return false;\n\t\tlet word = node.getParent();\n\t\tif (!word) return false;\n\t\tif (!Utils.isWord(word)) return false;\n\t\tif (experiments.V2_INSERTION_LENIENT_DOC_FORMAT) {\n\t\t\treturn true;\n\t\t}\n\t\tlet line = word.getParent();\n\t\tif (!line) return false;\n\t\tif (!Utils.isLine(line)) return false;\n\t\tlet doc = line.getParent();\n\t\tif (!doc) return false;\n\t\tif (!Utils.isDoc(doc)) return false;\n\t\treturn true;\n\n\t}\n\n\t_isSeparatorInDocFormat(node) {\n\t\tif (!Utils.isSeparator(node)) return false;\n\t\tlet line = node.getParent();\n\t\tif (!line) return false;\n\t\tif (!Utils.isLine(line)) return false;\n\t\tif (experiments.V2_INSERTION_LENIENT_DOC_FORMAT) {\n\t\t\treturn true;\n\t\t}\n\t\tlet doc = line.getParent();\n\t\tif (!doc) return false;\n\t\tif (!Utils.isDoc(doc)) return false;\n\t\treturn true;\n\t}\n\n\t_isLetterInSeparatorPosition(node) {\n\t\tif (!Utils.isLetter(node)) return false;\n\t\tlet line = node.getParent();\n\t\tif (!line) return false;\n\t\tif (!Utils.isLine(line)) return false;\n\t\tif (experiments.V2_INSERTION_LENIENT_DOC_FORMAT) {\n\t\t\treturn true;\n\t\t}\n\t\tlet doc = line.getParent();\n\t\tif (!doc) return false;\n\t\tif (!Utils.isDoc(doc)) return false;\n\t\treturn true;\n\t}\n\n\t_isSeparatorInLetterPosition(node) {\n\t\tif (!Utils.isSeparator(node)) return false;\n\t\tlet word = node.getParent();\n\t\tif (!word) return false;\n\t\tif (!Utils.isWord(word)) return false;\n\t\tif (experiments.V2_INSERTION_LENIENT_DOC_FORMAT) {\n\t\t\treturn true;\n\t\t}\n\t\tlet line = word.getParent();\n\t\tif (!line) return false;\n\t\tif (!Utils.isLine(line)) return false;\n\t\tlet doc = line.getParent();\n\t\tif (!doc) return false;\n\t\tif (!Utils.isDoc(doc)) return false;\n\t\treturn true;\n\t}\n\n\t_isInDocFormat(node) {\n\t\treturn this._isLetterInDocFormat(node)\n\t\t\t|| this._isSeparatorInDocFormat(node)\n\t\t\t|| this._isLetterInSeparatorPosition(node);\n\t}\t\n\n\t_isOnlyLeafInLine(node) {\n\t\tlet line = this.getEnclosingLineInSameDoc(node);\n\t\treturn (node == this._getFirstLeafInside(line)\n\t\t\t\t&& node == this._getLastLeafInside(line));\n\t}\n\n\t_isFirstLeafInLine(node) {\n\t\tif (this._isLetterInDocFormat(node)) {\n\t\t\tlet word = node.getParent();\n\t\t\tlet line = word.getParent();\n\t\t\treturn (word.getChildAt(0) == node\n\t\t\t\t\t&& line.getChildAt(0) == word);\n\t\t} else if (this._isSeparatorInDocFormat(node)) {\n\t\t\tlet line = node.getParent();\n\t\t\treturn (line.getChildAt(0) == node);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t_isEmptyLineInDoc(node) {\n\t\tlet p = node.getParent();\n\t\tif (!p) return false;\n\t\treturn (Utils.isLine(node)\n\t\t\t&& Utils.isDoc(p)\n\t\t\t&& this._isEmpty(node));\n\t}\n\n\t_isLastChildOf(c, of) {\n\t\tif (of.numChildren() == 0) return false;\n\t\treturn (of.getLastChild() == c);\n\t}\n\n\t_isFirstChildOf(c, of) {\n\t\tif (of.numChildren() == 0) return false;\n\t\treturn (of.getFirstChild() == c);\n\t}\n\n\t_forceInsertionMode(mode, node) {\n\t\treturn node.setInsertionMode(mode);\n\t}\n\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t// SPLITTING\n\n\n\t// given a list\n\t// ( ( a b c d S e f g ) )\n\t// where S is the element to split after\n\t// we are passing in some list type\n\t// and this does this:\n\t// ( ( a b c d S ) ( e f g ) )\n\t_splitParentAfterAndPutIn(toSplitAfter, toPutIn) {\n\t\tlet p = toSplitAfter.getParent();\n\t\tif (!p) return false;\n\t\tif (p.getLastChild() == toSplitAfter) {\n\t\t\treturn false; // nothing to do\n\t\t}\n\t\tlet c;\n\t\twhile (c = p.getChildAfter(toSplitAfter)) {\n\t\t\tp.removeChild(c);\n\t\t\ttoPutIn.appendChild(c);\n\t\t}\n\t\tlet p2 = p.getParent();\n\t\tp2.insertChildAfter(toPutIn, p);\n\t\treturn true;\t\t\n\t}\n\n\t// given a list\n\t// ( ( a b c d S e f g ) )\n\t// where S is the element to split before\n\t// we are passing in some list type\n\t// and this does this:\n\t// ( ( a b c d ) ( S e f g ) )\n\t_splitParentBeforeAndPutIn(toSplitBefore, toPutIn) {\n\t\tlet p = toSplitBefore.getParent();\n\t\tif (!p) return false;\n\t\tif (p.getFirstChild() == toSplitBefore) {\n\t\t\treturn false; // nothing to do\n\t\t}\n\t\tlet c;\n\t\twhile (c = p.getChildAfter(toSplitBefore)) {\n\t\t\tp.removeChild(c);\n\t\t\ttoPutIn.appendChild(c);\n\t\t}\n\t\tp.removeChild(toSplitBefore);\n\t\ttoPutIn.prependChild(toSplitBefore);\n\t\tlet p2 = p.getParent();\n\t\tp2.insertChildAfter(toPutIn, p);\n\t\treturn true;\t\t\n\t}\n\n\t// given a list like this:\n\t// ( ( ( a b c S d e f ) ) )\n\t// splits parent AND grandparent\n\t// ( ( ( a b c S ) ) ( ( d e f ) ) )\n\t_splitParentAndGrandparentAfterAndPutIn(toSplitAfter, toPutInParentLevel, toPutInGrandparentLevel) {\n\t\tlet t = this._splitParentAfterAndPutIn(toSplitAfter, toPutInParentLevel);\n\t\tif (!t) return false;\n\t\tlet p = toSplitAfter.getParent();\n\t\treturn this._splitParentAfterAndPutIn(p, toPutInGrandparentLevel);\n\t}\n\n\t// given a list like this:\n\t// ( ( ( a b c S d e f ) ) )\n\t// splits parent AND grandparent\n\t// ( ( ( a b c ) ) ( ( S d e f ) ) )\n\t_splitParentAndGrandparentBeforeAndPutIn(toSplitBefore, toPutInParentLevel, toPutInGrandparentLevel) {\n\t\tlet t = this._splitParentBeforeAndPutIn(toSplitBefore, toPutInParentLevel);\n\t\tif (!t) return false;\n\t\tlet p = toSplitBefore.getParent();\n\t\treturn this._splitParentBeforeAndPutIn(p, toPutInGrandparentLevel);\n\t}\n\n\t// given a list like this:\n\t// ( ( a b c ( ...S... ) d e ) )\n\t// splits just grandparent, ignoring what's in the parent of S\n\t// ( ( a b c ) ( (...S...) d e ) )\n\t_splitGrandparentBeforeAndPutIn(toSplitBefore, toPutIn) {\n\t\tlet p = toSplitBefore.getParent();\n\t\tif (!p) return false;\n\t\treturn this._splitParentBeforeAndPutIn(p, toPutIn);\n\t}\n\n\t// given a list like this:\n\t// ( ( a b c ( ...S... ) d e ) )\n\t// splits just grandparent, ignoring what's in the parent of S\n\t// ( ( a b c (...S...) ) ( d e ) )\n\t_splitGrandparentAfterAndPutIn(toSplitAfter, toPutIn) {\n\t\tlet p = toSplitAfter.getParent();\n\t\tif (!p) return false;\n\t\treturn this._splitParentAfterAndPutIn(p, toPutIn);\n\t}\n\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t// APPENDING\n\n\t_appendAfterAndSelect(toAppend, after) {\n\t\tif (this._appendAfter(toAppend, after)) {\n\t\t\ttoAppend.setSelected();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t_appendAfter(toAppend, after) {\n\t\tlet p = after.getParent();\n\t\tif (!p) return false;\n\t\tp.insertChildAfter(toAppend, after);\n\t\treturn true;\n\t}\n\n\t_appendAsLastChildOf(toAppend, inside) {\n\t\tinside.appendChild(toAppend);\n\t\treturn true;\n\t}\n\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t// PREPENDING\n\n\t_prependBeforeAndSelect(toPrepend, before) {\n\t\tif (this._prependBefore(toPrepend, before)) {\n\t\t\ttoPrepend.setSelected();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t_prependBefore(toPrepend, before) {\n\t\tlet p = before.getParent();\n\t\tif (!p) return false;\n\t\tp.insertChildBefore(toPrepend, before);\n\t\treturn true;\n\t}\n\n\t_prependAsFirstChildOf(toPrepend, inside) {\n\t\tinside.prependChild(toPrepend);\n\t\treturn true;\n\t}\n\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t// JOINING\n\n\t// takes all the contents of c2 and puts them in c1,\n\t// then deletes c2\n\t_joinContainers(c1, c2) {\n\t\tlet p = c1.getParent();\n\t\tif (p.getNextSibling(c1) != c2) return false;\n\t\twhile (c2.hasChildren()) {\n\t\t\tc1.appendChild(c2.removeChildAt(0));\n\t\t}\n\t\tthis._deleteNode(c2);\n\t}\n\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t// DELETING\n\n\n\t// cleaned up version of removeNex\n\t_deleteNode(node) {\n\t\tlet p = node.getParent();\n\t\tif (!p) return false;\n\t\tif (node.isSelected()) {\n\t\t\tp.setSelected();\n\t\t}\n\t\tp.removeChild(node);\n\t\treturn true;\n\t}\n\n\t_deleteLetterAndPossiblyWord(s) {\n\t\tlet word = s.getParent();\n\t\tif (!word) return;\n\t\tif (word.numChildren() == 1) {\n\t\t\tthis._deleteNode(word);\n\t\t} else {\n\t\t\tthis._deleteNode(s);\n\t\t}\n\t}\n\n\t_deleteUpToLine(s) {\n\t\t// could be line > thing\n\t\t// or line > word > thing\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tthis._deleteNode(s);\n\t\tif (Utils.isWord(p)) {\n\t\t\tlet line = p.getParent();\n\t\t\tthis._deleteNode(p);\n\t\t}\n\t\treturn true;\n\t}\n\n\t_deleteSeparatorAndPossiblyJoinWords(s) {\n\t\tlet prev = this._getSiblingBefore(s);\n\t\tlet next = this._getSiblingAfter(s);\n\t\tthis._deleteNode(s);\n\t\tif (prev && next && Utils.isWord(prev) && Utils.isWord(next)) {\n\t\t\tthis._joinContainers(prev, next);\n\t\t}\n\t}\n\n\t_deleteCorrectlyAccordingToLeafType(toDelete) {\n\t\tif (this._isLetterInDocFormat(toDelete)) {\n\t\t\tthis._deleteLetterAndPossiblyWord(toDelete);\t\t\t\t\t\n\t\t} else if (this._isSeparatorInDocFormat(toDelete) || this._isLetterInSeparatorPosition(toDelete)) {\n\t\t\tthis._deleteSeparatorAndPossiblyJoinWords(toDelete);\n\t\t}\n\t}\n\n\t_deleteEmptyLine(s) {\n\t\tlet previousSibLine = this._getSiblingBefore(s);\n\t\tif (previousSibLine) {\n\t\t\tpreviousSibLine.setSelected();\n\t\t\tif (!this._isEmpty(previousSibLine)) {\n\t\t\t\tlet tosel = this._getLastLeafInside(previousSibLine);\n\t\t\t\ttosel.setSelected();\n\t\t\t\tthis._forceInsertionMode(INSERT_AFTER, tosel);\n\t\t\t}\n\t\t\tthis._deleteNode(s);\n\t\t} else {\n\t\t\tlet p = s.getParent();\n\t\t\tp.setSelected();\n\t\t\tthis._deleteNode(s);\n\t\t}\n\t}\n\n\t_deleteLineBreak(s) {\n\t\tlet enclosingLine = this.getEnclosingLineInSameDoc(s);\n\t\tlet previousSibLine = this._getSiblingBefore(enclosingLine);\n\t\tif (enclosingLine && previousSibLine && Utils.isLine(previousSibLine)) {\n\t\t\tthis._joinContainers(previousSibLine, enclosingLine);\n\t\t\t// now maybe join words.\n\t\t\tlet enclosingWord = this.getEnclosingWordInSameDoc(s);\n\t\t\tlet previousSibWord = this._getSiblingBefore(enclosingWord); // if enclosingWord null, returns null\n\t\t\tif (enclosingWord && previousSibWord && Utils.isWord(previousSibWord)) {\n\t\t\t\tthis._joinContainers(previousSibWord, enclosingWord);\n\t\t\t}\n\t\t\tlet prev = this._getLeafBefore(s);\n\t\t\tif (prev && this._inSameLine(prev, s)) {\n\t\t\t\tprev.setSelected();\n\t\t\t\tthis._forceInsertionMode(INSERT_AFTER, prev);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\n\t}\n\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t// GETTING OTHER NODES\n\n\t// gets the selected node\n\tselected() {\n\t\treturn systemState.getGlobalSelectedNode();\t\t\n\t}\n\n\t_getSiblingAfter(of) {\n\t\tlet p = of.getParent();\n\t\tif (!p) return false;\n\t\tlet sib = p.getNextSibling(of);\n\t\tif (!sib) {\n\t\t\treturn false; // meh not strictly necessary but clearer?\n\t\t}\n\t\treturn sib;\n\t}\n\n\t_getSiblingBefore(of) {\n\t\tif (!of) return null;\n\t\tlet p = of.getParent();\n\t\tif (!p) return false;\n\t\tlet sib = p.getPreviousSibling(of);\n\t\tif (!sib) {\n\t\t\treturn false; // meh not strictly necessary but clearer?\n\t\t}\n\t\treturn sib;\n\t}\n\n\t_getLeafBefore(before) {\n\t\tlet s = before;\n\t\tlet c = null;\n\t\twhile(!(c = this._getSiblingBefore(s))) {\n\t\t\ts = s.getParent();\n\t\t\tif (!s || Utils.isCodeContainer(s)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\ts = c;\n\t\twhile(!Utils.isCodeContainer(s)) {\n\t\t\tlet c = this._getLastChildOf(s);\n\t\t\tif (!c) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\ts = c;\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\n\t_getLeafAfter(after) {\n\t\tlet s = after;\n\t\tlet c = null;\n\t\twhile(!(c = this._getSiblingAfter(s))) {\n\t\t\ts = s.getParent();\n\t\t\tif (!s || Utils.isCodeContainer(s)) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\ts = c;\n\t\twhile(!Utils.isCodeContainer(s)) {\n\t\t\tlet c = this._getFirstChildOf(s);\n\t\t\tif (!c) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\ts = c;\n\t\t\t}\n\t\t}\n\t\treturn s;\n\t}\n\n\t_getLeafAfterFromSameLine(after) {\n\t\tlet c = this._getLeafAfter(after);\n\t\tif (!c) return null;\n\t\tif (!this._inSameLine(after, c)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn c;\n\t}\n\n\t_getLeafBeforeFromSameLine(before) {\n\t\tlet c = this._getLeafBefore(before);\n\t\tif (!c) return null;\n\t\tif (!this._inSameLine(before, c)) {\n\t\t\treturn null;\n\t\t}\n\t\treturn c;\n\t}\n\n\t_getFirstChildOf(s) {\n\t\tif (!Utils.isNexContainer(s)) return false;\n\t\tlet c = s.getFirstChild();\n\t\tif (!c) {\n\t\t\treturn false;\n\t\t}\n\t\treturn c;\n\t}\n\n\t_getFirstLeafInside(s) {\n\t\twhile(Utils.isNexContainer(s)\n\t\t\t&& (s = s.getFirstChild()) != null);\n\t\treturn s;\n\t}\n\n\t_getLastLeafInside(s) {\n\t\twhile(Utils.isNexContainer(s)\n\t\t\t&& (s = s.getLastChild()) != null);\n\t\treturn s;\n\t}\n\n\t_getLastChildOf(s) {\n\t\tif (!Utils.isNexContainer(s)) return false;\n\t\tlet c = s.getLastChild();\n\t\tif (!c) {\n\t\t\treturn false;\n\t\t}\n\t\treturn c;\n\t}\n\n\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\t//////// *********************** --------------------------------------------------\n\n\n\t//////// OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n\t//////// OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n\t//////// OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n\n\t// OKAY NOW THIS OTHER ASCII GARBAGE IS FOR PRIVATE HELPER METHODS\n\t// THEY ARE NOT UTILITIES BECAUSE THEY AREN'T GENERAL PURPOSE\n\t// THEY ARE SPECIFIC IN PURPOSE BUT NOT PUBLIC\n\t// THESE SHOULD ALL BE SEPARATE CLASSES THEN I WOULDN'T HAVE TO SCREAM IN ALL CAPS\n\n\n\t_doLineBreakBeforeSeparator(s, context) {\n\t\tif (this._isSeparatorInDocFormat(s) || this._isLetterInSeparatorPosition(s)) {\n\t\t\tif (this._splitParentBeforeAndPutIn(s, this.possiblyMakeImmutable(this.newLine(), context))) {\n\t\t\t\t// split was performed, select next leaf and put insertion point before\n\t\t\t\tthis._selectPreviousLeafImpl();\n\t\t\t\tthis._forceInsertionMode(INSERT_AFTER, this.selected());\n\t\t\t} else {\n\t\t\t\tthis._prependBefore(this.possiblyMakeImmutable(this.newLine(), context), this.getEnclosingLineInSameDoc(s));\n\t\t\t\t// leave current thing selected!\n\t\t\t}\n\t\t} else if (this._isSeparatorInLetterPosition(s)) {\n\t\t\tthis._doLineBreakBeforeLetter(s);\n\t\t} else {\n\t\t\t// idk, call the method we use for random things? do nothing? idk\n\t\t}\n\t}\n\n\t_doLineBreakAfterSeparator(s, context) {\n\t\tif (this._isSeparatorInDocFormat(s) || this._isLetterInSeparatorPosition(s)) {\n\t\t\tif (this._splitParentAfterAndPutIn(s, this.possiblyMakeImmutable(this.newLine(), context))) {\n\t\t\t\t// split was performed, select next leaf and put insertion point before\n\t\t\t\tthis._selectNextLeafImpl();\n\t\t\t\tthis._forceInsertionMode(INSERT_BEFORE, this.selected());\n\t\t\t} else {\n\t\t\t\t// split not performed, insert new empty line\n\t\t\t\tthis._appendAfterAndSelect(this.possiblyMakeImmutable(this.newLine(), context), this.getEnclosingLineInSameDoc(s));\n\t\t\t}\n\t\t} else if (this._isSeparatorInLetterPosition(s)) {\n\t\t\tthis._doLineBreakAfterLetter(s, context);\n\t\t} else {\n\t\t\t// idk, call the method we use for random things? do nothing? idk\n\t\t}\n\t}\n\n\t_doLineBreakBeforeLetter(s, context) {\n\t\tlet needToChangeSelectedLetter = (s.getInsertionMode() == INSERT_AFTER);\n\t\tif (this._isLetterInDocFormat(s) || this._isSeparatorInLetterPosition(s)) {\n\t\t\t// for situations where we have ( ( a S b c) )\n\t\t\tif (this._splitParentAndGrandparentBeforeAndPutIn(s, this.possiblyMakeImmutable(this.newWord(), context), this.possiblyMakeImmutable(this.newLine(), context))) {\n\t\t\t\t// split was performed\n\t\t\t\tif (needToChangeSelectedLetter) {\n\t\t\t\t\tthis._selectPreviousLeafImpl();\n\t\t\t\t\tthis._forceInsertionMode(INSERT_AFTER, this.selected());\t\t\t\t\t\n\t\t\t\t}\n\t\t\t// for situations where we have ( a ( S b c) )\n\t\t\t} else if (this._splitGrandparentBeforeAndPutIn(s, this.possiblyMakeImmutable(this.newLine(), context))) {\n\t\t\t\tif (needToChangeSelectedLetter) {\n\t\t\t\t\tthis._selectPreviousLeafImpl();\n\t\t\t\t\tthis._forceInsertionMode(INSERT_AFTER, this.selected());\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._prependBefore(this.possiblyMakeImmutable(this.newLine(), context), this.getEnclosingLineInSameDoc(s));\n\t\t\t\t// leave current thing selected!\n\t\t\t}\n\t\t} else if (this._isLetterInSeparatorPosition(s)) {\n\t\t\tthis._doLineBreakBeforeSeparator(s, context);\n\t\t}\n\t}\n\n\t_doLineBreakAfterLetter(s, context) {\n\t\tif (this._isLetterInDocFormat(s) || this._isSeparatorInLetterPosition(s)) {\n\t\t\t// for situations where we have ( ( a b S c ) )\n\t\t\tif (this._splitParentAndGrandparentAfterAndPutIn(s, this.possiblyMakeImmutable(this.newWord(), context), this.possiblyMakeImmutable(this.newLine(), context))) {\n\t\t\t\t// split was performed, need to move selected node\n\t\t\t\tthis._selectNextLeafImpl();\n\t\t\t\tthis._forceInsertionMode(INSERT_BEFORE, this.selected());\n\t\t\t// for situations where we have ( ( a b S ) c )\n\t\t\t} else if (this._splitGrandparentAfterAndPutIn(s, this.possiblyMakeImmutable(this.newLine(), context))) {\n\t\t\t\tthis._selectNextLeafImpl();\n\t\t\t\tthis._forceInsertionMode(INSERT_BEFORE, this.selected());\t\t\t\t\n\t\t\t} else {\n\t\t\t\tthis._appendAfterAndSelect(this.possiblyMakeImmutable(this.newLine(), context), this.getEnclosingLineInSameDoc(s));\n\t\t\t}\n\t\t} else if (this._isLetterInSeparatorPosition(s)) {\n\t\t\tthis._doLineBreakAfterSeparator(s, context);\n\t\t}\n\t}\t\n\n\n\t//////// OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n\t//////// OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n\t//////// OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n\n\n\t// OKAY BELOW THIS WE HAVE ENTRY POINT METHODS\n\t// THAT ARE CALLED DIRECTLY FROM KEYRESPONSEFUNCTIONS.JS\n\t// TO PERFORM WHATEVER ACTIONS IT WANTS TO PERFORM\n\t// THESE NEED A BETTER NAMING CONVENTION THAT TELLS YOU\n\t// WHAT NEX FIRES THEM IN RESPONSE TO WHAT KEYSTROKES\n\n\tdeleteLeaf(s) {\n\t\tif (this._isOnlyLeafInLine(s)) {\n\t\t\tif (this.isInsertAfter(s)) {\n\t\t\t\tlet line = this.getEnclosingLineInSameDoc(s);\n\t\t\t\tthis._deleteUpToLine(s);\n\t\t\t\tline.setSelected();\n\t\t\t\tthis._forceInsertionMode(INSERT_INSIDE, line);\n\t\t\t} else {\n\t\t\t\tthis._deleteLineBreak(s);\n\t\t\t}\n\t\t} else if (this._isFirstLeafInLine(s)) {\n\t\t\tif (this.isInsertAfter(s)) {\n\t\t\t\tlet nextLeaf = this._getLeafAfter(s);\n\t\t\t\tnextLeaf.setSelected();\n\t\t\t\tthis._forceInsertionMode(INSERT_BEFORE, nextLeaf);\n\t\t\t\tthis._deleteNode(s);\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\t// treat around the same as before\n\t\t\t\tthis._deleteLineBreak(s);\n\t\t\t}\n\t\t} else if (this._isInDocFormat(s)) {\n\t\t\tif (this.isInsertAfter(s)) {\n\t\t\t\tlet toSelectNext = this._getLeafBefore(s);\n\t\t\t\ttoSelectNext.setSelected();\n\t\t\t\tthis._deleteCorrectlyAccordingToLeafType(s);\n\t\t\t} else {\n\t\t\t\tlet toDelete = this._getLeafBefore(s);\n\t\t\t\tthis._deleteCorrectlyAccordingToLeafType(toDelete);\n\t\t\t\t// so we want to try to keep the insertion point on the right\n\t\t\t\t// whenever possible, so if possible we grab previous leaf and select it,\n\t\t\t\t// putting insertion on right. But if they are in different lines, don't.\n\t\t\t\tlet prev = this._getLeafBefore(s);\n\t\t\t\tif (prev && this.getEnclosingLineInSameDoc(prev) == this.getEnclosingLineInSameDoc(s)) {\n\t\t\t\t\tprev.setSelected();\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\t// simpler delete for \"naked\" letters\n\t\t\tthis.removeAndSelectPreviousSibling(s);\n\t\t}\n\t}\n\n\tmaybeDeleteEmptyLine(s) {\n\t\tif (this._isEmptyLineInDoc(s)) {\n\t\t\tthis._deleteEmptyLine(s);\n\t\t}\n\t}\n\n\t// used by undo\n\tdeleteAnyLineBreak() {\n\t\tlet sel = this.selected();\n\t\tif (Utils.isLetter(sel) || Utils.isSeparator(sel)) {\n\t\t\tthis._deleteLineBreak(sel);\n\t\t} else {\n\t\t\tthis.maybeDeleteEmptyLine(sel);\n\t\t}\n\t}\n\n\tremoveAndSelectPreviousSibling(s) {\n\t\tdoTutorial('delete');\n\t\tlet b = this._getSiblingBefore(s);\n\t\tlet a = this._getSiblingAfter(s);\n\t\tlet p = s.getParent();\n\t\tthis._deleteNode(s);\n\t\tif (b) {\n\t\t\tb.setSelected();\n\t\t} else if (a) {\n\t\t\ta.setSelected();\n\t\t\tthis._forceInsertionMode(INSERT_BEFORE, a);\n\t\t} else {\n\t\t\tp.setSelected();\n\t\t\tthis._forceInsertionMode(INSERT_INSIDE, p);\n\t\t}\n\t}\n\n\tremoveAndSelectPreviousSiblingIfEmpty(s) {\n\t\tif (!s.hasChildren()) {\n\t\t\tthis.removeAndSelectPreviousSibling(s);\n\t\t}\n\t}\n\n\tselectPreviousLeaf(s) {\n\t\tif (this._isFirstLeafInLine(s)) {\n\t\t\tif (s.getInsertionMode() == INSERT_BEFORE) {\n\t\t\t\tthis._selectPreviousLeafImpl();\n\t\t\t\tlet changedWhatIsSelected = (s != this.selected());\n\t\t\t\tif (changedWhatIsSelected) {\n\t\t\t\t\tif (Utils.isLine(this.selected())) {\n\t\t\t\t\t\tthis._forceInsertionMode(INSERT_INSIDE, this.selected());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._forceInsertionMode(INSERT_AFTER, this.selected());\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// because attempting to go to the previous leaf temporarily changes\n\t\t\t\t\t// which node is selected, doing so will revert selection mode\n\t\t\t\t\t// to the default (insert_after), so we need to restore it to before.\n\t\t\t\t\tthis._forceInsertionMode(INSERT_BEFORE, this.selected());\t\t\t\t\t\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis._forceInsertionMode(INSERT_BEFORE, this.selected());\n\t\t\t}\n\t\t} else if (this._isEmptyLineInDoc(s)) {\n\t\t\tlet sib = this._getSiblingBefore(s);\n\t\t\tif (sib) {\n\t\t\t\tif (this._isEmptyLineInDoc(sib)) {\n\t\t\t\t\tsib.setSelected();\n\t\t\t\t\tthis._forceInsertionMode(INSERT_INSIDE, sib);\n\t\t\t\t} else {\n\t\t\t\t\tlet c = this._getLastLeafInside(sib);\n\t\t\t\t\tc.setSelected();\n\t\t\t\t\tthis._forceInsertionMode(INSERT_AFTER, c);\n\t\t\t\t}\n\t\t\t} else return false;\n\t\t} else {\n\t\t\tthis._selectPreviousLeafImpl();\n\t\t}\n\t}\n\n\tselectNextLeaf(s) {\n\t\tif (s.getInsertionMode() == INSERT_BEFORE) {\n\t\t\tthis._forceInsertionMode(INSERT_AFTER, this.selected());\n\t\t\treturn;\n\t\t}\n\t\tthis._selectNextLeafImpl();\n\t\tif (this._isFirstLeafInLine(this.selected())) {\n\t\t\tthis._forceInsertionMode(INSERT_BEFORE, this.selected());\n\t\t} else {\n\t\t\tif (Utils.isLine(this.selected())) {\n\t\t\t\tthis._forceInsertionMode(INSERT_INSIDE, this.selected());\n\t\t\t} else {\n\t\t\t\tthis._forceInsertionMode(INSERT_AFTER, this.selected());\n\t\t\t}\n\t\t}\n\t}\n\n\n\tdoLineBreakForLetter(s, context) {\n\t\tif (s.getInsertionMode() == INSERT_AFTER) {\n\t\t\tthis._doLineBreakAfterLetter(s, context);\n\t\t} else {\n\t\t\tthis._doLineBreakBeforeLetter(s, context);\n\t\t}\n\t}\n\n\tdoLineBreakForSeparator(s, context) {\n\t\tif (s.getInsertionMode() == INSERT_AFTER) {\n\t\t\tthis._doLineBreakAfterSeparator(s, context);\n\t\t} else {\n\t\t\tthis._doLineBreakBeforeSeparator(s, context);\n\t\t}\n\t}\n\n\tdoLineBreakForLine(s, context) {\n\t\tlet ln = this.possiblyMakeImmutable(this.newLine(), context);\n\t\tlet mode = s.getInsertionMode();\n\t\tif (mode == INSERT_BEFORE || mode == INSERT_AROUND) {\n\t\t\tthis._prependBeforeAndSelect(ln, s);\n\t\t} else {\n\t\t\tthis._appendAfterAndSelect(ln, s);\n\t\t}\n\t}\n\n\tmoveLeftUp(s) {\n\t\tif (experiments.OLD_ARROW_KEY_TRAVERSAL) {\n\t\t\tthis.selectPreviousSibling()\n\t\t\t\t|| this._forceInsertionMode(INSERT_BEFORE, this.selected());\n\t\t\treturn;\n\t\t}\n\n\t\tlet r = false;\n\t\tif (s.getInsertionMode() == INSERT_AFTER) {\n\t\t\tif (Utils.isNexContainer(s) && s.nex.canDoInsertInside()) {\n\t\t\t\tr = this._forceInsertionMode(INSERT_INSIDE, s);\n\t\t\t} else {\n\t\t\t\tr = this._forceInsertionMode(INSERT_BEFORE, s);\n\t\t\t}\n\t\t} else if (s.getInsertionMode() == INSERT_INSIDE) {\n\t\t\tr = this._forceInsertionMode(INSERT_BEFORE, s);\n\t\t} else {\n\t\t\tif (r = this.selectPreviousSibling()) {\n\t\t\t\tthis._forceInsertionMode(INSERT_BEFORE, this.selected());\n\t\t\t}\n\t\t}\n\t\tif (r) {\n\t\t\tdoTutorial('movement');\n\t\t}\n\t\treturn r;\n\t}\n\n\tmoveLeftForLine(s) {\n\t\t// if s is not in doc context, don't do anything special.\n\t\tlet context = this.getContextForNode(s);\n\t\tif (context != ContextType.DOC && context != ContextType.IMMUTABLE_DOC) {\n\t\t\treturn this.moveLeftUp();\n\t\t}\n\t\treturn this.selectPreviousLeaf(s);\n\t}\n\n\tmoveUpForLine(s) {\n\t\t// if s is not in doc context, don't do anything special.\n\t\tlet context = this.getContextForNode(s);\n\t\tif (context != ContextType.DOC && context != ContextType.IMMUTABLE_DOC) {\n\t\t\treturn this.moveLeftUp();\n\t\t}\n\t\treturn this.selectCorrespondingLetterInPreviousLine(s);\n\t}\n\n\tmoveRightDown(s) {\n\t\tif (experiments.OLD_ARROW_KEY_TRAVERSAL) {\n\t\t\tif (s.getInsertionMode() == INSERT_BEFORE) {\n\t\t\t\tthis._forceInsertionMode(INSERT_AFTER, s);\n\t\t\t} else {\n\t\t\t\tthis.selectNextSibling()\n\t\t\t\t\t||  this._forceInsertionMode(INSERT_AFTER, this.selected());\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\tlet r = false;\n\t\tif (s.getInsertionMode() == INSERT_BEFORE) {\n\t\t\tif (Utils.isNexContainer(s) && s.nex.canDoInsertInside()) {\n\t\t\t\tr = this._forceInsertionMode(INSERT_INSIDE, s);\n\t\t\t} else {\n\t\t\t\tr = this._forceInsertionMode(INSERT_AFTER, s);\n\t\t\t}\n\t\t} else if (s.getInsertionMode() == INSERT_INSIDE) {\n\t\t\tr = this._forceInsertionMode(INSERT_AFTER, s);\n\t\t} else {\n\t\t\tif (r = this.selectNextSibling()) {\n\t\t\t\tthis._forceInsertionMode(INSERT_AFTER, this.selected());\n\t\t\t}\n\t\t}\n\t\tif (r) {\n\t\t\tdoTutorial('movement');\n\t\t}\n\t\treturn r;\n\t}\n\n\tmoveRightForLine(s) {\n\t\t// if s is not in doc context, don't do anything special.\n\t\tlet context = this.getContextForNode(s);\n\t\tif (context != ContextType.DOC && context != ContextType.IMMUTABLE_DOC) {\n\t\t\treturn this.moveRightDown(s);\n\t\t}\n\t\treturn this.selectNextLeaf(s);\n\t}\n\n\tmoveDownForLine(s) {\n\t\t// if s is not in doc context, don't do anything special.\n\t\tlet context = this.getContextForNode(s);\n\t\tif (context != ContextType.DOC && context != ContextType.IMMUTABLE_DOC) {\n\t\t\treturn this.moveRightDown(s);\n\t\t}\n\t\treturn this.selectCorrespondingLetterInNextLine(s);\n\t}\n\n\n\t// in use\n\tselectFirstChildOrMoveInsertionPoint(s) {\n\t\tif (!s.nex.canDoInsertInside()) {\n\t\t\treturn;\n\t\t}\n\t\tdoTutorial('movement');\n\t\tif (!this.selectFirstChild()) {\n\t\t\tthis._forceInsertionMode(INSERT_INSIDE, this.selected());\n\t\t} else {\n\n\t\t\t// when selecting first child, put insertion point before it\n\t\t\t// WILL BREAK ALL THE TESTS\n\t\t\t// so I need some kind of flag for old tests\n\t\t\tmanipulator._forceInsertionMode(INSERT_BEFORE, this.selected())\n\n\t\t\treturn true;\n\t\t};\n\n\t}\n\n\t// heavily used\n\tdefaultInsertFor(insertInto, toInsert) {\n\t\t// ahem this only works if insertInto is selected\n\t\tswitch(insertInto.getInsertionMode()) {\n\t\t\tcase INSERT_AFTER:\n\t\t\t\treturn this.insertAfterSelectedAndSelect(toInsert);\n\t\t\tcase INSERT_BEFORE:\n\t\t\t\treturn this.insertBeforeSelectedAndSelect(toInsert);\n\t\t\tcase INSERT_INSIDE:\n\t\t\t\treturn this.insertAsFirstChild(toInsert);\n\t\t\tcase INSERT_AROUND:\n\t\t\t\tif (Utils.isNexContainer(toInsert)) {\n\t\t\t\t\treturn this.wrapSelectedInAndSelect(toInsert);\n\t\t\t\t} else {\n\t\t\t\t\treturn this.insertBeforeSelectedAndSelect(toInsert);\n\t\t\t\t}\n\t\t}\n\t}\n\n\t// These are used by the exact keystrokes you think\n\tforceInsertBefore() {\n\t\t\tthis._forceInsertionMode(INSERT_BEFORE, this.selected());\t\t\n\t}\n\n\t// These are used by the exact keystrokes you think\n\tforceInsertAfter() {\n\t\t\tthis._forceInsertionMode(INSERT_AFTER, this.selected());\t\t\n\t}\n\n\t// These are used by the exact keystrokes you think\n\tforceInsertAround() {\n\t\t\tthis._forceInsertionMode(INSERT_AROUND, this.selected());\t\t\n\t}\n\n\t// These are used by the exact keystrokes you think\n\tforceInsertInside() {\n\t\t\tthis._forceInsertionMode(INSERT_INSIDE, this.selected());\t\t\n\t}\n\n\n\t// JUST DOC THINGS\n\n\tinsertSeparatorBeforeOrAfterSelectedLetter(newSeparator) {\n\t\tlet s = this.selected();\n\n\t\tlet inDocFormat = this._isLetterInDocFormatUpToLine(s);\n\t\tif (!inDocFormat) {\n\t\t\tthis.defaultInsertFor(s, newSeparator);\n\t\t\treturn;\t\t\t\n\t\t}\n\n\t\tif (s.getInsertionMode() == INSERT_AFTER) {\n\t\t\tlet w = s.getParent();\n\t\t\t// we always put the separator after the word\n\t\t\t// we are currently in, but sometimes we split that\n\t\t\t// word.\n\t\t\tif (!this._isLastChildOf(s, w)) {\n\t\t\t\tlet nw = this.newWord();\n\t\t\t\tthis._splitParentAfterAndPutIn(s, nw)\n\t\t\t}\n\t\t\tthis._appendAfterAndSelect(newSeparator, w);\n\t\t} else {\n\t\t\tlet w = s.getParent();\n\t\t\tif (!this._isFirstChildOf(s, w)) {\n\t\t\t\tlet nw = this.newWord();\n\t\t\t\tthis._splitParentBeforeAndPutIn(s, nw)\n\t\t\t\tthis._prependBeforeAndSelect(newSeparator, nw);\n\t\t\t} else {\n\t\t\t\tthis._prependBeforeAndSelect(newSeparator, w);\t\t\t\t\n\t\t\t}\n\t\t}\n\t}\n\n\t// doc elements get special insert methods I guess\n\t// I'm going to hold the line on keeping regexes out of this file\n\tinsertLetterFromLine(newLetter, line) {\n\t\tif (line.getInsertionMode() == INSERT_INSIDE) {\n\t\t\tif (this._isEmpty(line) || !Utils.isWord(this._getFirstChildOf(line))) {\n\t\t\t\tlet word = this.newWord();\n\t\t\t\tthis._prependAsFirstChildOf(newLetter, word)\n\t\t\t\tthis._prependAsFirstChildOf(word, line);\n\t\t\t\tnewLetter.setSelected();\n\t\t\t\treturn true;\n\t\t\t} else {\n\t\t\t\tlet word = this._getFirstChildOf(line);\n\t\t\t\tthis._prependAsFirstChildOf(newLetter, word);\n\t\t\t\tnewLetter.setSelected();\n\t\t\t\treturn true;\n\t\t\t}\n\t\t} else {\n\t\t\treturn this.defaultInsertFor(line, newLetter);\n\t\t}\n\t}\n\n\tinsertSeparatorFromLine(newSeparator, line) {\n\t\treturn this.defaultInsertFor(line, newSeparator);\n\t}\n\n\tinsertAsFirstChild(data) {\n\t\tdata = this._conformData(data);\n\t\tlet s = systemState.getGlobalSelectedNode();\n\t\tlet newNode = s.prependChild(data);\n\t\tnewNode.setSelected();\n\t\treturn true;\t\t\n\t}\n\n\n\n\tselectCorrespondingLetterInPreviousLine(s) {\n\t\tlet thisLine = Utils.isLine(s) ? s : this.getEnclosingLineInSameDoc(s);\n\t\t// Okay in the weird/wrong event that we have a word inside a doc that's not\n\t\t// inside a line, we just... do our best.\n\t\tif (!thisLine) {\n\t\t\tthisLine = Utils.isWord(s) ? s : this.getEnclosingWordInSameDoc(s);\n\t\t}\n\t\tif (!thisLine) {\n\t\t\t// ok shit we just have a letter by itself inside a doc. Cool we can keep going.\n\t\t\tthisLine = s;\n\t\t}\n\t\tlet sib = this._getSiblingBefore(thisLine);\n\t\tif (!sib) return;\n\t\tif (!Utils.isLine(sib)) {\n\t\t\tsib.setSelected();\n\t\t\treturn;\n\t\t}\n\t\tif (this._isEmptyLineInDoc(sib)) {\n\t\t\tsib.setSelected();\n\t\t\tthis._forceInsertionMode(INSERT_INSIDE, sib);\n\t\t\treturn;\n\t\t}\n\t\tif (this._isEmptyLineInDoc(s)) {\n\t\t\tlet lf = this._getFirstLeafInside(sib);\n\t\t\t// we already know it has at least one child\n\t\t\t// or above would \n\t\t\tlf.setSelected();\n\t\t\tthis._forceInsertionMode(INSERT_AFTER, lf);\n\t\t\treturn;\n\t\t}\n\t\tlet putBefore = this.isInsertBefore(s);\n\t\tlet targetX = s.getLeftX();\n\t\t// I think the dot is 5 px\n\t\tif (putBefore) targetX -= 5;\n\t\tlet c = this._getFirstLeafInside(sib);\n\t\twhile(c && c.getLeftX() < targetX) {\n\t\t\tlet d = this._getLeafAfterFromSameLine(c);\n\t\t\tif (c == d) throw new Error('not supposed to happen');\n\t\t\tif (!d) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tc = d;\n\t\t\t}\n\t\t}\n\t\tif (!c) {\n\t\t\tthrow new Error('not supposed to happen');\n\t\t}\n\t\tc.setSelected();\n\t\tif (putBefore) {\n\t\t\tthis._forceInsertionMode(INSERT_BEFORE, c);\n\t\t}\n\t\treturn true;\n\t}\n\n\tselectCorrespondingLetterInNextLine(s) {\n\t\tlet thisLine = Utils.isLine(s) ? s : this.getEnclosingLineInSameDoc(s);\n\t\t// Okay in the weird/wrong event that we have a word inside a doc that's not\n\t\t// inside a line, we just... do our best.\n\t\tif (!thisLine) {\n\t\t\tthisLine = Utils.isWord(s) ? s : this.getEnclosingWordInSameDoc(s);\n\t\t}\n\t\tif (!thisLine) {\n\t\t\t// ok shit we just have a letter by itself inside a doc. Cool we can keep going.\n\t\t\tthisLine = s;\n\t\t}\n\t\tlet sib = this._getSiblingAfter(thisLine);\n\t\tif (!sib) return;\n\t\tif (!Utils.isLine(sib)) {\n\t\t\tsib.setSelected();\n\t\t\treturn;\n\t\t}\n\t\tif (this._isEmptyLineInDoc(sib)) {\n\t\t\tsib.setSelected();\n\t\t\tthis._forceInsertionMode(INSERT_INSIDE, sib);\n\t\t\treturn;\n\t\t}\n\t\tif (this._isEmptyLineInDoc(s)) {\n\t\t\tlet lf = this._getFirstLeafInside(sib);\n\t\t\t// we already know it has at least one child\n\t\t\t// or above would \n\t\t\tlf.setSelected();\n\t\t\tthis._forceInsertionMode(INSERT_AFTER, lf);\n\t\t\treturn;\n\t\t}\n\t\tlet putBefore = this.isInsertBefore(s);\n\t\tlet targetX = s.getLeftX();\n\t\t// I think the dot is 5 px\n\t\tif (putBefore) targetX -= 5;\n\t\tlet c = this._getFirstLeafInside(sib);\n\t\twhile(c && c.getLeftX() < targetX) {\n\t\t\tlet d = this._getLeafAfterFromSameLine(c);\n\t\t\tif (c == d) throw new Error('not supposed to happen');\n\t\t\tif (!d) {\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\tc = d;\n\t\t\t}\n\t\t}\n\t\tif (!c) {\n\t\t\tthrow new Error('not supposed to happen');\n\t\t}\n\t\tc.setSelected();\n\t\tif (putBefore) {\n\t\t\tthis._forceInsertionMode(INSERT_BEFORE, c);\n\t\t}\n\t\treturn true;\n\t}\n\n\n\tfindNextSiblingThatSatisfies(f) {\n\t\twhile (this.selectNextSibling()) {\n\t\t\tif (f(systemState.getGlobalSelectedNode())) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tgetEnclosingLineInSameDoc(s) {\n\t\twhile(s = s.getParent()) {\n\t\t\tif (Utils.isDoc(s)) {\n\t\t\t\t// we don't want to stray out of the immediate doc.\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (Utils.isLine(s)) {\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\tgetEnclosingWordInSameDoc(s) {\n\t\twhile (s = s.getParent()) {\n\t\t\tif (Utils.isDoc(s)) {\n\t\t\t\t// we don't want to stray out of the immediate doc.\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tif (Utils.isWord(s)) {\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t_getEnclosingNexThatSatisfies(s, test) {\n\t\twhile (s = s.getParent()) {\n\t\t\tif (!s) return null;\n\t\t\tif (test(s)) {\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\t\treturn null;\n\t}\n\n\t// traversal\n\n\t_closeOff(s, test) {\n\t\tlet obj = this._getEnclosingNexThatSatisfies(s, test);\n\t\tif (obj) {\n\t\t\tobj.setSelected();\n\t\t\tthis._forceInsertionMode(INSERT_AFTER, obj);\n\t\t}\t\t\n\t}\n\n\tcloseOffWord(s) {\n\t\tthis._closeOff(s, function(nex) {\n\t\t\treturn Utils.isWord(nex);\n\t\t});\n\t}\n\n\tcloseOffDoc(s) {\t\t\n\t\tthis._closeOff(s, function(nex) {\n\t\t\treturn Utils.isDoc(nex);\n\t\t});\n\t}\n\n\tcloseOffOrg(s) {\t\t\n\t\tthis._closeOff(s, function(nex) {\n\t\t\treturn Utils.isOrg(nex);\n\t\t});\n\t}\n\n\tcloseOffLine(s) {\t\t\n\t\tthis._closeOff(s, function(nex) {\n\t\t\treturn Utils.isLine(nex);\n\t\t});\n\t}\n\n\n\t_selectPreviousLeafImpl() {\n\t\tlet first = (systemState.getGlobalSelectedNode());\n\t\twhile(!this.selectPreviousSibling()) {\n\t\t\tlet p = this.selectParent();\n\t\t\tif (!p || Utils.isCodeContainer((systemState.getGlobalSelectedNode()))) {\n\t\t\t\tfirst.setSelected();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\twhile(!Utils.isCodeContainer((systemState.getGlobalSelectedNode())) && this.selectLastChild());\n\t\treturn true;\n\t}\n\n\t_selectNextLeafImpl() {\n\t\tlet first = (systemState.getGlobalSelectedNode());\n\t\twhile(!this.selectNextSibling()) {\n\t\t\tlet p = this.selectParent();\n\t\t\tif (!p || Utils.isCodeContainer((systemState.getGlobalSelectedNode()))) {\n\t\t\t\tfirst.setSelected();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\twhile(!Utils.isCodeContainer((systemState.getGlobalSelectedNode())) && this.selectFirstChild());\n\t\treturn true;\n\t}\n\n\tselectFirstLeaf() {\n\t\tlet c = (systemState.getGlobalSelectedNode());\n\t\twhile(Utils.isNexContainer(c) && c.hasChildren()) {\n\t\t\tc = c.getFirstChild();\n\t\t}\n\t\tc.setSelected();\n\t\treturn true;\n\t}\n\n\t// generic selection stuff\n\n\tselectLastChild() {\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tif (!Utils.isNexContainer(s)) return false;\n\t\tlet c = s.getLastChild();\n\t\tif (c) {\n\t\t\tc.setSelected();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tselectFirstChild() {\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tif (!Utils.isNexContainer(s)) return false;\n\t\tlet c = s.getFirstChild();\n\t\tif (c) {\n\t\t\tc.setSelected();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tselectNthChild(n) {\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tif (n >= s.numChildren()) return false;\n\t\tif (n < 0) return false;\n\t\tlet c = s.getChildAt(n);\n\t\tif (!c) return false;\n\t\tc.setSelected();\n\t\treturn true;\n\t}\n\n\tselectNextSibling() {\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tlet nextSib = p.getNextSibling(s);\n\t\tif (nextSib) {\n\t\t\tnextSib.setSelected();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tselectPreviousSibling() {\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tlet sib = p.getPreviousSibling(s);\n\t\tif (sib) {\n\t\t\tsib.setSelected();\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tselectParent() {\n\t\tdoTutorial('movement');\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tp.setSelected();\n\t\treturn true;\n\t}\n\n\t// CRUD operations\n\n\t// ALL THE INSERTS SHOULD BE REPLACED BY THIS\n\tinsertAtSelectedObjInsertionPoint(node) {\n\t\tlet s = this.selected();\n\t\tswitch(s.getInsertionMode()) {\n\t\t\tcase INSERT_AFTER:\n\t\t\t\treturn manipulator.insertAfterSelectedAndSelect(node);\n\t\t\tcase INSERT_BEFORE:\n\t\t\t\treturn manipulator.insertBeforeSelectedAndSelect(node);\n\t\t\tcase INSERT_INSIDE:\n\t\t\t\treturn manipulator.insertAsFirstChild(node);\n\t\t\tcase INSERT_AROUND:\n\t\t\t\tif (node.getNex().isNexContainer()) {\n\t\t\t\t\treturn manipulator.wrapSelectedInAndSelect(node);\n\t\t\t\t} else {\n\t\t\t\t\treturn manipulator.insertBeforeSelectedAndSelect(node);\n\t\t\t\t}\n\t\t}\n\t}\t\n\n\tunroll(s) {\n\t\tlet p = s.getParent();\n\t\tlet c = null;\n\t\tlet toselect = null;\n\t\twhile(s.hasChildren()) {\n\t\t\tc = s.getFirstChild();\n\t\t\tif (!toselect) {\n\t\t\t\ttoselect = c;\n\t\t\t}\n\t\t\tp.insertChildBefore(c, s);\n\t\t}\n\t\tif (c) {\n\t\t\tp.removeChild(s);\n\t\t\ttoselect.setSelected();\n\t\t}\n\t}\n\n\twrapSelectedInAndSelect(wrapperNode) {\n\t\tlet s = this.selected();\n\t\tlet p = s.getParent();\n\t\tp.replaceChildWith(s, wrapperNode);\n\t\twrapperNode.appendChild(s);\n\t\twrapperNode.setSelected();\n\t\treturn s;\n\t}\n\n\tappendAndSelect(data) {\n\t\tdata = this._conformData(data);\n\t\tlet s = systemState.getGlobalSelectedNode();\n\t\tlet newNode = s.appendChild(data);\n\t\tnewNode.setSelected();\n\t\treturn true;\t\t\n\t}\n\n\n\n\tinsertAfterSelected(data) {\n\t\tdata = this._conformData(data);\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tp.insertChildAfter(data, s);\n\t\treturn true;\n\t}\n\n\tinsertAfterSelectedAndSelect(data) {\n\t\tdata = this._conformData(data);\n\t\tlet r = this.insertAfterSelected(data)\n\t\t\t&& this.selectNextSibling();\n\t\treturn r;\n\t}\n\n\tinsertBeforeSelected(data) {\n\t\tdata = this._conformData(data);\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tp.insertChildBefore(data, s);\n\t\treturn true;\n\t}\n\n\t// used in evaluator.js\n\tinsertBeforeSelectedAndSelect(data) {\n\t\tlet r = this.insertBeforeSelected(data)\n\t\t\t&& this.selectPreviousSibling();\n\t\treturn r;\n\t}\n\n\tattemptToRemoveLastItemInCommand() {\n\t\tlet p = (systemState.getGlobalSelectedNode()).getParent();\n\t\tif (!p) return false;\n\t\tif (p.numChildren() == 1 && Utils.isCodeContainer(p)) {\n\t\t\tif (!this.removeNex((systemState.getGlobalSelectedNode()))) return false;\n\t\t\tp.setSelected();\n\t\t\tthis._forceInsertionMode(INSERT_INSIDE, p);\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t// this is used by an old function that is only used by deferredcommand (maybe)\n\tremoveSelectedAndSelectPreviousSibling() {\n\t\tlet toDel = (systemState.getGlobalSelectedNode());\n\t\treturn (\n\t\t\tthis.attemptToRemoveLastItemInCommand()\n\t\t\t||\n\t\t\t(this.selectPreviousSibling() || this.selectParent())\n\t\t\t&&\n\t\t\tthis.removeNex(toDel)\n\t\t);\t\n\t}\n\n\t// used in browsereventresponsefunctions.js\n\tremoveNex(toDel) {\n\t\t// toDel must not be a nex, has to be a RenderNode.\n\t\tif (!(toDel instanceof RenderNode)) {\n\t\t\tthrow new Error('need to delete the rendernode not the nex');\n\t\t}\n\t\tlet p = toDel.getParent();\n\t\tif (!p) return false;\n\t\tif (toDel.isSelected()) {\n\t\t\tp.setSelected();\n\t\t}\n\t\tp.removeChild(toDel);\n\t\treturn true;\n\t}\n\n\t// used in evaluator.js\n\treplaceSelectedWith(nex) {\n\t\tnex = this._conformData(nex);\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tif (s === nex) return true; // trivially true\n\t\tlet p = s.getParent(true);\n\t\tif (!p) return false;\n\t\tp.replaceChildWith(s, nex);\n\t\tnex.setSelected();\n\t\treturn true;\n\t}\n\n\treplaceSelectedWithFirstChildOfSelected() {\n\t\tlet s = systemState.getGlobalSelectedNode();\n\t\tlet p = s.getParent(true);\n\t\tif (!p) return false;\n\t\tif (!(s.numChildren() == 1)) return false;\n\t\tlet nex = s.getChildAt(0);\n\t\tp.replaceChildWith(s, nex);\n\t\tnex.setSelected();\n\t\treturn true;\n\t}\n\n\t// split/join\n\n\tselectTopmostEnclosingLine() {\n\t\tlet p = (systemState.getGlobalSelectedNode()).getParent();\n\t\tif (!p) return false;\n\t\twhile(!Utils.isLine(p)) {\n\t\t\tp = p.getParent();\n\t\t\tif (!p) return false;\n\t\t}\n\t\twhile(Utils.isLine(p)) {\n\t\t\tlet p2 = p.getParent();\n\t\t\tif (p2 && Utils.isLine(p2)) {\n\t\t\t\tp = p2;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tp.setSelected();\n\t\treturn true;\n\t}\n\n\tmoveRemainingSiblingsInto(nex) {\n\t\tnex = this._conformData(nex);\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tif (p.getLastChild() == s) {\n\t\t\treturn true; // nothing to do\n\t\t}\n\t\tlet c;\n\t\twhile (c = p.getChildAfter(s)) {\n\t\t\tp.removeChild(c);\n\t\t\tnex.appendChild(c);\n\t\t}\n\t}\n\n\t// this takes all the selected node's right-hand\n\t// siblings and puts them inside nex, then\n\t// puts nex inside the selected node's grandparent\n\t// after the selected node's parent\n\t// i.e.\n\t// start:\n\t// ( ( a b c SEL d e f ) )\n\t// pass in nex\n\t// end\n\t// ( ( a b c SEL ) ( d e f ) )\n\tsplit(nex) {\n\t\tnex = this._conformData(nex);\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tif (p.getLastChild() == s) {\n\t\t\treturn true; // nothing to do\n\t\t}\n\t\tlet c;\n\t\twhile (c = p.getChildAfter(s)) {\n\t\t\tp.removeChild(c);\n\t\t\tnex.appendChild(c);\n\t\t}\n\t\tlet p2 = p.getParent();\n\t\tp2.insertChildAfter(nex, p);\n\t\treturn true;\t\t\n\t}\n\n\n\tjoinSelectedWithNextSibling() {\n\t\t// note that after joining, the thing\n\t\t// to select is the last thing in\n\t\t// the first of the two\n\t\t// things being joined.\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tlet toSelect = s.getLastChild();\n\t\tif (!toSelect) {\n\t\t\treturn false;\n\t\t}\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tlet c = p.getChildAfter(s);\n\t\tif (!c) return false;\t\t\n\t\tlet c2;\n\t\twhile (c2 = c.removeFirstChild()) {\n\t\t\ts.appendChild(c2);\n\t\t}\n\t\t// now that c is empty, delete it.\n\t\tp.removeChild(c);\n\t\ttoSelect.setSelected();\n\t\treturn true;\n\t}\n\n\tjoin(p, a, b) {\n\t\tp = this._conformData(p);\n\t\ta = this._conformData(a);\n\t\tb = this._conformData(b);\n\t\tlet c;\n\t\twhile (c = b.removeFirstChild()) {\n\t\t\ta.appendChild(c);\n\t\t}\n\t\t// now that c is empty, delete it.\n\t\tp.removeChild(b);\n\t\treturn true;\n\t}\n\n\tjoinSelectedToNextSiblingIfSameType() {\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tlet c = p.getChildAfter(s);\n\t\tif ((Utils.isLine(s) && Utils.isLine(c))\n\t\t\t\t|| (Utils.isWord(s) && Utils.isWord(c))\n\t\t\t\t|| (Utils.isDoc(s) && Utils.isDoc(c))) {\n\t\t\treturn this.joinSelectedWithNextSibling();\n\t\t}\n\t}\n\n\tjoinParentOfSelectedToNextSiblingIfSameType() {\n\t\tlet s = (systemState.getGlobalSelectedNode());\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tp.setSelected();\n\t\tthis.joinSelectedToNextSiblingIfSameType();\n\t}\n\n\tjoinToSiblingIfSame(s) {\n\t\ts = this._conformData(s);\n\t\tlet p = s.getParent();\n\t\tif (!p) return false;\n\t\tlet c = p.getChildAfter(s);\n\t\tif ((Utils.isLine(s) && Utils.isLine(c))\n\t\t\t\t|| (Utils.isWord(s) && Utils.isWord(c))\n\t\t\t\t|| (Utils.isDoc(s) && Utils.isDoc(c))) {\n\t\t\treturn this.join(p, s, c);\n\t\t} else {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\n\n    /////////// KEYDISPATCHER STUFF BELOW THIS\n\n\n\tcopyTextToSystemClipboard(txt) {\n\t\tnavigator.permissions.query({name: \"clipboard-write\"}).then(result => {\n\t\t\tif (result.state == \"granted\" || result.state == \"prompt\") {\n\t\t\t\tnavigator.clipboard.writeText(txt);\n\t\t\t}\n\t\t});\t\t\n\t}\n\n\t// used in keydispatcher.js\n\tdoCut() {\n\t\tCLIPBOARD = systemState.getGlobalSelectedNode().getNex();\n\t\tCLIPBOARD_INSERTION_MODE = systemState.getGlobalSelectedNode().getInsertionMode();\n\t\tif (!isRecordingTest()) {\n\t\t\tthis.copyTextToSystemClipboard(CLIPBOARD.prettyPrint());\n\t\t}\n\t\tlet x = systemState.getGlobalSelectedNode();\n\t\tthis.selectPreviousSibling() || this.selectParent();\t\t\n\t\tthis.removeNex(x);\n\t}\n\n\t// used in keydispatcher.js\n\tdoSave() {\n\t\tlet p = this.selected();\n\n\t\twhile(!Utils.isRoot(p)) {\n\t\t\tif (Utils.isCommand(p) && p.nex.getCommandText() == 'save') {\n\t\t\t\treturn p;\n\t\t\t}\n\t\t\tp = p.getParent();\n\t\t}\n\n\t\t// oops we need to insert one\n\n\t\tlet cmd = this.newCommandWithText('save', true /* skip editor */);\n\t\tcmd.nex.setVertical();\n\t\tlet sym = this.newESymbolWithText(systemState.getDefaultFileName());\n\t\tsym.setSelected();\n\t\tcmd.appendChild(sym);\n\n\t\tif (p.numChildren() == 1) {\n\t\t\tcmd.appendChild(p.getChildAt(0));\n\t\t\tp.removeChildAt(0);\n\t\t\tp.appendChild(cmd);\n\t\t} else {\n\t\t\tlet org = this.newOrg();\n\t\t\twhile(p.hasChildren()) {\n\t\t\t\tlet c = p.getChildAt(0);\n\t\t\t\torg.appendChild(c);\n\t\t\t\t// these are render nodes not nexes.\n\t\t\t\t// This means that each one can only have one parent...\n\t\t\t\t// so we just have to append, we don't have to remove\n\t\t\t\t// it from the previous parent.\n\t\t\t}\n\t\t\tcmd.appendChild(org);\n\t\t\tp.appendChild(cmd);\n\t\t}\n\t\treturn null;\n\t}\n\n\t// used in keydispatcher.js\n\tdoCopy() {\n\t\ttry {\n\t\t\tCLIPBOARD = systemState.getGlobalSelectedNode().getNex().makeCopy();\n\t\t\tCLIPBOARD_INSERTION_MODE = systemState.getGlobalSelectedNode().getInsertionMode();\n\t\t\tif (!isRecordingTest()) {\n\t\t\t\tthis.copyTextToSystemClipboard(CLIPBOARD.prettyPrint());\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\tUtils.beep();\n\t\t\t\tthis.insertBeforeSelectedAndSelect(e);\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif (e.message && e.message.indexOf('CONVERT TO EERROR:') == 0) {\n\t\t\t\t\tlet ee = constructFatalError(e.message.substr(18));\n\t\t\t\t\tUtils.beep();\n\t\t\t\t\tthis.insertBeforeSelectedAndSelect(ee);\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// used in keydispatcher.js\n\tdoPaste() {\n\t\tlet s = systemState.getGlobalSelectedNode();\n\t\ttry {\n\t\t\tlet newNex = CLIPBOARD.makeCopy();\n\t\t\tnewNex.setMutableRecursive(true);\n\t\t\tswitch(s.getInsertionMode()) {\n\t\t\t\tcase INSERT_AFTER:\n\t\t\t\t\tthis.insertAfterSelectedAndSelect(newNex);\n\t\t\t\t\tthis.selected().setInsertionMode(CLIPBOARD_INSERTION_MODE);\n\t\t\t\t\tbreak;\n\t\t\t\tcase INSERT_BEFORE:\n\t\t\t\tcase INSERT_AROUND:\n\t\t\t\t\tthis.insertBeforeSelectedAndSelect(newNex);\n\t\t\t\t\tthis.selected().setInsertionMode(CLIPBOARD_INSERTION_MODE);\n\t\t\t\t\tbreak;\n\t\t\t\tcase INSERT_INSIDE:\n\t\t\t\t\tthis.insertAsFirstChild(newNex);\n\t\t\t\t\tthis.selected().setInsertionMode(CLIPBOARD_INSERTION_MODE);\n\t\t\t\t\tbreak;\n\t\t\t}\t\t\t\n\t\t} catch (e) {\n\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\tUtils.beep();\n\t\t\t\tthis.insertBeforeSelectedAndSelect(e);\t\t\t\t\n\t\t\t} else {\n\t\t\t\tif (e.message && e.message.indexOf('CONVERT TO EERROR:') == 0) {\n\t\t\t\t\tlet ee = constructFatalError(e.message.substr(18));\n\t\t\t\t\tUtils.beep();\n\t\t\t\t\tthis.insertBeforeSelectedAndSelect(ee);\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// CONTEXT\n\n\tgetContextForNode(node) {\n\t\tlet context = ContextType.COMMAND;\n\t\tlet p = node.getParent();\n\t\tif (p) {\n\t\t\twhile((context = p.getNex().getContextType()) == ContextType.PASSTHROUGH) {\n\t\t\t\tp = p.getParent();\n\t\t\t}\n\t\t}\n\t\treturn context;\n\t}\n\n\n\t// CREATING STUFF DOWN HERE\n\n\tgetMostRecentInsertedRenderNode() {\n\t\treturn this.mostRecentInsertedRenderNode;\n\t}\n\n\tpossiblyMakeImmutable(nex, context) {\n\t\tif (Utils.isImmutableContext(context)) {\n\t\t\tlet n = nex;\n\t\t\tif (n instanceof RenderNode) n = n.getNex();\n\t\t\tn.setMutable(false);\n\t\t}\n\t\treturn nex;\n\t}\n\n\tnewDoc() {\n\t\tlet d = null;\n\t\ttry {\n\t\t\td = constructDoc();\n\t\t} catch (e) {\n\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\treturn new RenderNode(e);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\t\t\t\n\t\t}\n\t\td.setMutable(true);\n\t\tlet r = new RenderNode(d);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\tdoTutorial('doc');\n\t\treturn r;\n\t}\n\n\tnewWord() {\n\t\tlet w = null;\n\t\ttry {\n\t\t\tw = constructWord();\n\t\t} catch (e) {\n\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\treturn new RenderNode(e);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\t\t\t\n\t\t}\n\t\tw.setMutable(true);\n\t\tlet r = new RenderNode(w);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\treturn r;\n\t}\n\n\tnewLine() {\n\t\tlet line = null;\n\t\ttry {\n\t\t\tline = constructLine();\n\t\t} catch (e) {\n\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\treturn new RenderNode(e);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\t\t\t\n\t\t}\n\t\tline.setMutable(true);\n\t\tlet r = new RenderNode(line);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\treturn r;\n\t}\n\n\t// public\n\tnewLambda() {\n\t\tlet l = null;\n\t\ttry {\n\t\t\tl = constructLambda();\n\t\t} catch (e) {\n\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\treturn new RenderNode(e);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\t\t\t\n\t\t}\n\t\tl.setMutable(true);\n\t\tlet r = new RenderNode(l);\n\t\tthis.mostRecentInsertedRenderNode = r;\t\t\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-lambda');\n\t\treturn r;\n\t}\n\n\tnewESymbolWithText(txt) {\n\t\tlet e = null;\n\t\ttry {\n\t\t\te = constructESymbol(txt);\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\te.setMutable(true);\n\t\tlet r = new RenderNode(e);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-symbol');\n\t\treturn r;\n\t}\n\n\tnewESymbol() {\n\t\tlet e = null;\n\t\ttry {\n\t\t\te = constructESymbol();\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\te.setMutable(true);\n\t\tlet r = new RenderNode(e);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-symbol');\n\t\treturn r;\n\t}\n\n\tnewCommandWithText(txt, skipEditor) {\n\t\tlet c = null;\n\t\ttry {\n\t\t\tc = constructCommand(txt);\n\t\t} catch (e) {\n\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\treturn new RenderNode(e);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\t\t\t\n\t\t}\n\t\tc.setMutable(true);\n\t\tlet r = new RenderNode(c);\n\t\tthis.mostRecentInsertedRenderNode = r;\t\t\n\t\tif (!skipEditor) {\n\t\t\tr.possiblyStartMainEditor();\n\t\t}\n\t\tdoTutorial('make-command');\n\t\treturn r;\n\t}\n\n\t// public\n\tnewCommand() {\n\t\tlet c = null;\n\t\ttry {\n\t\t\tc = constructCommand();\n\t\t} catch (e) {\n\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\treturn new RenderNode(e);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\t\t\t\n\t\t}\n\t\tc.setMutable(true);\n\t\tlet r = new RenderNode(c);\n\t\tthis.mostRecentInsertedRenderNode = r;\t\t\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-command');\n\t\treturn r;\n\t}\n\n\tnewBool() {\n\t\tlet b = null;\n\t\ttry {\n\t\t\tb = constructBool();\n\t\t} catch (e) {\n\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\treturn e;\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\t\t\t\n\t\t}\n\t\tb.setMutable(true);\n\t\tlet r = new RenderNode(b);\n\t\tthis.mostRecentInsertedRenderNode = r;\t\t\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-boolean');\n\t\treturn r;\n\t}\n\n\tnewIntegerWithValue(v) {\n\t\tlet i = null;\n\t\ttry {\n\t\t\ti = constructInteger(Number(v));\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\ti.setMutable(true);\n\t\tlet r = new RenderNode(i);\n\t\tthis.mostRecentInsertedRenderNode = r;\t\t\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-integer');\n\t\treturn r;\n\t}\n\n\tnewInteger() {\n\t\tlet i = null;\n\t\ttry {\n\t\t\ti = constructInteger();\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\ti.setMutable(true);\n\t\tlet r = new RenderNode(i);\n\t\tthis.mostRecentInsertedRenderNode = r;\t\t\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-integer');\n\t\treturn r;\n\t}\n\n\tnewEString() {\n\t\tlet e = null;\n\t\ttry {\n\t\t\te = constructEString();\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\te.setMutable(true);\n\t\tlet r = new RenderNode(e);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-string');\n\t\treturn r;\n\t}\n\n\tnewFloat() {\n\t\tlet f = null;\n\t\ttry {\n\t\t\tf = constructFloat();\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\tf.setMutable(true);\n\t\tlet r = new RenderNode(f);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-float');\n\t\treturn r;\n\t}\n\n\tnewInstantiator() {\n\t\tlet i = null;\n\t\ttry {\n\t\t\ti = constructInstantiator();\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\ti.setMutable(true);\n\t\tlet r = new RenderNode(i);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-instantiator');\n\t\treturn r;\n\t}\n\n\tnewNil() {\n\t\tlet n = null;\n\t\ttry {\n\t\t\tn = constructNil();\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\tn.setMutable(true);\n\t\tlet r = new RenderNode(n);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\treturn r;\n\t}\n\n\tnewDeferredCommand() {\n\t\tlet e = null;\n\t\ttry {\n\t\t\te = constructDeferredCommand();\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\te.setMutable(true);\n\t\tlet r = new RenderNode(e);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\tr.possiblyStartMainEditor();\n\t\tdoTutorial('make-deferred-command');\n\t\treturn r;\n\t}\n\n\tnewOrg() {\n\t\tlet o = null;\n\t\ttry {\n\t\t\to = constructOrg();\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\to.setMutable(true);\n\t\tlet r = new RenderNode(o);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\tdoTutorial('make-org');\n\t\treturn r;\n\t}\n\n\tnewSeparator(txt) {\n\t\tlet s = null;\n\t\ttry {\n\t\t\ts = constructSeparator(txt);\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\ts.setMutable(true);\n\t\tlet r = new RenderNode(s);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\treturn r;\n\t}\n\n\tnewLetter(txt) {\n\t\tlet l = null;\n\t\ttry {\n\t\t\tl = constructLetter(txt);\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\tl.setMutable(true);\n\t\tlet r = new RenderNode(l);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\treturn r;\n\t}\n\n\tnewWavetable() {\n\t\tlet l = null;\n\t\ttry {\n\t\t\tl = constructWavetable();\n\t\t} catch (err) {\n\t\t\tif (Utils.isFatalError(err)) {\n\t\t\t\treturn new RenderNode(err);\n\t\t\t} else {\n\t\t\t\tthrow err;\n\t\t\t}\t\t\t\n\t\t}\n\t\tl.setMutable(true);\n\t\tlet r = new RenderNode(l);\n\t\tthis.mostRecentInsertedRenderNode = r;\n\t\treturn r;\n\t}\n\n\n\t// this is garbage crap\n\tnewNexForKey(key) {\n\t\tswitch(key) {\n\t\t\tcase '~': return this.newCommand();\n\t\t\tcase '!': return this.newBool();\n\t\t\tcase '@': return this.newESymbol();\n\t\t\tcase '#': return this.newInteger();\n\t\t\tcase '$': return this.newEString();\n\t\t\tcase '%': return this.newFloat();\n\t\t\tcase '^': return this.newNil();\n\t\t\tcase '&': return this.newLambda();\n\t\t\tcase '*': return this.newDeferredCommand();\n\t\t\tcase '(': return this.newOrg();\n\t\t\tcase '{': return this.newDoc();\n\t\t\tcase '[': return this.newLine();\n\t\t\tcase '<': return this.newWord();\n\t\t\tcase '_': return this.newWavetable();\n\t\t}\n\t\t// either letter or separator\n\t\tlet letterRegex = /^[a-zA-Z0-9']$/;\n\t\tlet isSeparator = !letterRegex.test(key);\n\t\tif (isSeparator) {\n\t\t\treturn this.newSeparator(key);\n\t\t} else {\n\t\t\treturn this.newLetter(key)\n\t\t}\n\t}\n}\n\nconst manipulator = new Manipulator();\n\nexport { manipulator }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { NexContainer } from './nexcontainer.js'\nimport { constructFatalError } from './eerror.js'\nimport { ContextType } from '../contexttype.js'\nimport { experiments } from '../globalappflags.js'\nimport { evaluateNexSafely } from '../evaluator.js'\nimport { RENDER_FLAG_SHALLOW, RENDER_FLAG_EXPLODED, CONSOLE_DEBUG } from '../globalconstants.js'\nimport { heap, HeapString } from '../heap.js'\n\n/**\n * Represents a document with text in it.\n */\nclass Doc extends NexContainer {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.pfstring = new HeapString();\n\t\tthis.setVertical();\n\t}\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn this.toStringV2();\n\t\t}\n\t\treturn '{' + super.childrenToString() + '}';\n\t}\n\n\trootLevelPostEvaluationStep() {\n\t\tthis.setMutable(false);\n\t}\n\n\n\ttoStringV2() {\n\t\treturn `[${this.toStringV2Literal()}doc]${this.toStringV2PrivateDataSection()}${this.listStartV2()}${this.toStringV2TagList()}${super.childrenToString('v2')}${this.listEndV2()}`;\n\t}\n\n\ttoggleDir() {} // can only be vertical\n\tsetHorizontal() {}\n\n\tprettyPrintInternal(lvl, hdir) {\n\t\treturn this.standardListPrettyPrint(lvl, '[doc]', hdir);\n\t}\n\n\tsetPfont(pfstring) {\n\t\tthis.pfstring.set(pfstring);\n\t\tthis.doForEachChild(function(c) {\n\t\t\tc.setPfont(pfstring);\n\t\t})\n\t}\n\n\tserializePrivateData(data) {\n\t\treturn `${this.getCurrentStyle()}`;\n\t}\n\n\tdeserializePrivateData(data) {\n\t\tthis.setCurrentStyle(data);\n\t}\n\n\tinsertChildAt(c, i) {\n\t\tif (this.pfstring.get()) {\n\t\t\tc.setPfont(this.pfstring.get());\n\t\t}\n\t\tsuper.insertChildAt(c, i);\n\t}\n\n\tgetTypeName() {\n\t\treturn '-doc-';\n\t}\n\n\tmakeCopy(shallow) {\n\t\tlet r = constructDoc();\n\t\tthis.copyChildrenTo(r, shallow);\n\t\tthis.copyFieldsTo(r);\n\t\treturn r;\n\t}\n\n\tgetValueAsString() {\n\t\tlet s = '';\n\t\tlet index = 0;\n\t\tthis.doForEachChild(c => {\n\t\t\tif (c.getTypeName() == '-line-') {\n\t\t\t\tif (index > 0) {\n\t\t\t\t\ts += '\\n';\n\t\t\t\t}\n\t\t\t\ts += c.getValueAsString();\n\t\t\t} else {\n\t\t\t\tthrow constructFatalError(`Cannot convert doc to string, incorrect doc format (at line ${index}, has ${c.debugString()}). Sorry!`);\n\t\t\t}\n\t\t\tindex++;\n\t\t});\n\t\treturn s;\n\t}\n\n\tgetContextType() {\n\t\tif (this.isMutable()) {\n\t\t\treturn ContextType.DOC;\n\t\t} else {\n\t\t\treturn ContextType.IMMUTABLE_DOC;\n\t\t}\n\t}\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tlet domNode = renderNode.getDomNode();\n\t\tsuper.renderInto(renderNode, renderFlags, withEditor);\n\t\tdomNode.classList.add('doc');\n\t\tdomNode.classList.add('data');\n\t\tdomNode.classList.add('newdoc');\n\t}\n\t\n\t/*\n\tshould be in the superclass (nexcontainer) but it creates a circular dependency graph somehow\n\t*/\n\tevaluate(env) {\n\t\tif (this.mutable) {\n\t\t\t// shallow copy, then evaluate children.\n\t\t\tlet listcopy = this.makeCopy(true);\n\t\t\tlet iterator = null;\n\t\t\tthis.doForEachChild(function(child) {\n\t\t\t\tlet newchild = evaluateNexSafely(child, env);\n\t\t\t\t// we don't throw exceptions, we just embed them - this isn't a function.\n\t\t\t\titerator = listcopy.fastAppendChildAfter(newchild, iterator);\n\t\t\t})\n\t\t\tlistcopy.setMutable(false);\n\t\t\treturn listcopy;\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t}\n\n\n\tsetMutable(val) {\n\t\tsuper.setMutable(val)\n\t\t// make doc-type children also have the same mutability\n\t\tthis.doForEachChild(c => {\n\t\t\tif (Utils.isDocElement(c)) {\n\t\t\t\tc.setMutable(val);\n\t\t\t}\n\t\t})\n\t}\n\n\tgetDefaultHandler() {\n\t\treturn 'docDefault';\n\t}\n\n\tgetEventTable(context) {\n\t\treturn {\n\t\t\t'ShiftSpace' : 'do-nothing',\n\t\t\t'Backspace': 'remove-selected-and-select-previous-sibling-if-empty',\n\n\t\t\t'!': 'JUST_USE_DEFAULT',\n\t\t\t'@': 'JUST_USE_DEFAULT',\n\t\t\t'#': 'JUST_USE_DEFAULT',\n\t\t\t'$': 'JUST_USE_DEFAULT',\n\t\t\t'%': 'JUST_USE_DEFAULT',\n\t\t\t'^': 'JUST_USE_DEFAULT',\n\t\t\t'&': 'JUST_USE_DEFAULT',\n\t\t\t'*': 'JUST_USE_DEFAULT',\n\t\t\t'(': 'JUST_USE_DEFAULT',\n\t\t\t'[': 'JUST_USE_DEFAULT',\n\t\t\t'{': 'JUST_USE_DEFAULT',\n\t\t\t'<': 'JUST_USE_DEFAULT',\n\t\t\t'_': 'JUST_USE_DEFAULT',\n\t\t};\n\t}\n\n\tmemUsed() {\n\t\treturn super.memUsed() + heap.sizeDoc() + this.pfstring.memUsed();\n\t}\n}\n\nfunction constructDoc() {\n\tif (!heap.requestMem(heap.sizeDoc())) {\n\t\tthrow constructFatalError(`OUT OF MEMORY: cannot allocate Doc.\nstats: ${heap.stats()}`)\n\t}\n\treturn heap.register(new Doc());\n}\n\nexport { Doc, constructDoc }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js';\n\n\nimport { NexContainer } from './nexcontainer.js'\nimport { ContextType } from '../contexttype.js'\nimport { experiments } from '../globalappflags.js'\nimport { evaluateNexSafely } from '../evaluator.js'\nimport { heap, HeapString } from '../heap.js'\n\nimport {\n\tRENDER_FLAG_INSERT_AFTER,\n\tRENDER_FLAG_INSERT_BEFORE,\n\tRENDER_FLAG_INSERT_INSIDE,\n\tRENDER_FLAG_INSERT_AROUND,\n } from '../globalconstants.js'\nimport { RENDER_FLAG_SHALLOW, RENDER_FLAG_EXPLODED } from '../globalconstants.js'\nimport { constructFatalError } from './eerror.js'\n\n\n\nclass Word extends NexContainer {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.pfstring = new HeapString();\n\t\tthis.setHorizontal();\n\t}\n\n\tgetTypeName() {\n\t\treturn '-word-';\n\t}\n\n\trootLevelPostEvaluationStep() {\n\t\tthis.setMutable(false);\n\t}\n\n\n\tmakeCopy(shallow) {\n\t\tlet r = constructWord();\n\t\tthis.copyChildrenTo(r, shallow);\n\t\tthis.copyFieldsTo(r);\n\t\treturn r;\n\t}\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn this.toStringV2();\n\t\t}\n\t\treturn '(' + super.childrenToString() + ')';\n\t}\n\n\ttoStringV2() {\n\t\treturn `[${this.toStringV2Literal()}word]${this.toStringV2PrivateDataSection()}${this.listStartV2()}${this.toStringV2TagList()}${super.childrenToString('v2')}${this.listEndV2()}`;\n\t}\n\n \tprettyPrintInternal(lvl, hdir) {\n\t\treturn this.standardListPrettyPrint(lvl, '[word]', hdir);\n\t}\n\n\tsetMutable(val) {\n\t\tsuper.setMutable(val)\n\t\t// make doc-type children also have the same mutability\n\t\tthis.doForEachChild(c => {\n\t\t\tif (Utils.isDocElement(c)) {\n\t\t\t\tc.setMutable(val);\n\t\t\t}\n\t\t})\n\t}\n\n\ttoggleDir() {} // can only be horizontal\n\tsetVertical() {}\n\n\tgetContextType() {\n\t\tif (this.isMutable()) {\n\t\t\treturn ContextType.WORD;\n\t\t} else {\n\t\t\treturn ContextType.IMMUTABLE_WORD;\n\t\t}\n\t}\n\n\tgetValueAsString() {\n\t\tlet s = '';\n\t\tthis.doForEachChild(function(c) {\n\t\t\tif (!(c.getTypeName() == '-letter-')) {\n\t\t\t\tthrow constructFatalError('cannot convert word to string, invalid format');\n\t\t\t}\n\t\t\ts += c.getText();\n\t\t})\n\t\treturn s;\n\t}\n\n\tgetKeyFunnel() {\n\t\treturn new WordKeyFunnel(this);\n\t}\n\n\tserializePrivateData(data) {\n\t\treturn `${this.getCurrentStyle()}`;\n\t}\n\n\tdeserializePrivateData(data) {\n\t\tthis.setCurrentStyle(data);\n\t}\n\n\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tlet domNode = renderNode.getDomNode();\n\n\t\tlet wordspan = null;\n\n\t\tsuper.renderInto(renderNode, renderFlags, withEditor);\n\t\tdomNode.classList.add('word');\n\t\tdomNode.classList.add('data');\n\t\tif (renderFlags & RENDER_FLAG_INSERT_AFTER) {\n\t\t\tdomNode.classList.add('rightinsert');\n\t\t} else if (renderFlags & RENDER_FLAG_INSERT_BEFORE) {\n\t\t\tdomNode.classList.add('leftinsert');\t\t\t\n\t\t} else if (renderFlags & RENDER_FLAG_INSERT_AROUND) {\n\t\t\tdomNode.classList.add('topinsert');\t\t\t\n\t\t} else if (renderFlags & RENDER_FLAG_INSERT_INSIDE) {\n\t\t\tdomNode.classList.add('bottominsert');\t\t\t\n\t\t}\n\t\tdomNode.classList.add('newword');\n\t}\n\n\tsetPfont(pfstring) {\n\t\tthis.pfstring.set(pfstring);\n\t\tthis.doForEachChild(function(c) {\n\t\t\tc.setPfont(pfstring);\n\t\t})\n\t}\n\n\tinsertChildAt(c, i) {\n\t\tif (this.pfstring.get()) {\n\t\t\tc.setPfont(this.pfstring.get());\n\t\t}\n\t\tsuper.insertChildAt(c, i);\n\t}\n\n\t/*\n\tshould be in the superclass (nexcontainer) but it creates a circular dependency graph somehow\n\t*/\n\tevaluate(env) {\n\t\tif (this.mutable) {\n\t\t\t// shallow copy, then evaluate children.\n\t\t\tlet listcopy = this.makeCopy(true);\n\t\t\tlet iterator = null;\n\t\t\tthis.doForEachChild(function(child) {\n\t\t\t\tlet newchild = evaluateNexSafely(child, env);\n\t\t\t\t// we don't throw exceptions, we just embed them - this isn't a function.\n\t\t\t\titerator = listcopy.fastAppendChildAfter(newchild, iterator);\n\t\t\t})\n\t\t\tlistcopy.setMutable(false);\n\t\t\treturn listcopy;\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t}\n\n\n\n\tgetDefaultHandler() {\n\t\treturn 'wordDefault';\n\t}\n\n\tgetEventTable(context) {\n\t\treturn {\n\t\t\t'!': 'JUST_USE_DEFAULT',\n\t\t\t'@': 'JUST_USE_DEFAULT',\n\t\t\t'#': 'JUST_USE_DEFAULT',\n\t\t\t'$': 'JUST_USE_DEFAULT',\n\t\t\t'%': 'JUST_USE_DEFAULT',\n\t\t\t'^': 'JUST_USE_DEFAULT',\n\t\t\t'&': 'JUST_USE_DEFAULT',\n\t\t\t'*': 'JUST_USE_DEFAULT',\n\t\t\t'(': 'JUST_USE_DEFAULT',\n\t\t\t'[': 'JUST_USE_DEFAULT',\n\t\t\t'{': 'JUST_USE_DEFAULT',\n\t\t\t'<': 'JUST_USE_DEFAULT',\n\t\t\t'_': 'JUST_USE_DEFAULT',\n\t\t\t\n\t\t}\n\t}\n\n\tmemUsed() {\n\t\treturn super.memUsed() + heap.sizeWord();\n\t}\n}\n\nfunction constructWord() {\n\tif (!heap.requestMem(heap.sizeWord())) {\n\t\tthrow new constructFatalError(`OUT OF MEMORY: cannot allocate Word.\nstats: ${heap.stats()}`)\n\t}\n\treturn heap.register(new Word());\n}\n\nexport { Word, constructWord }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js';\n\nimport { ContextType } from '../contexttype.js'\nimport { NexContainer } from './nexcontainer.js'\nimport { EError } from './eerror.js'\nimport { experiments } from '../globalappflags.js'\nimport { RENDER_FLAG_SHALLOW, RENDER_FLAG_EXPLODED } from '../globalconstants.js'\nimport { evaluateNexSafely } from '../evaluator.js'\nimport { heap, HeapString } from '../heap.js'\nimport {\n\tRENDER_FLAG_INSERT_AFTER,\n\tRENDER_FLAG_INSERT_BEFORE,\n\tRENDER_FLAG_INSERT_INSIDE,\n\tRENDER_FLAG_INSERT_AROUND,\n } from '../globalconstants.js'\n\n\n/**\n * Represents a line in a document.\n * @extends NexContainer\n */\nclass Line extends NexContainer {\n\n\t/**\n\t * Creates a line.\n\t */\n\tconstructor() {\n\t\tsuper();\n\t\tthis.pfstring = new HeapString();\n\t\tthis.setHorizontal();\n\t}\n\n\trootLevelPostEvaluationStep() {\n\t\tthis.setMutable(false);\n\t}\n\n\n\t/** @override */\n\tgetTypeName() {\n\t\treturn '-line-';\n\t}\n\n\tmakeCopy(shallow) {\n\t\tlet r = constructLine();\n\t\tthis.copyChildrenTo(r, shallow);\n\t\tthis.copyFieldsTo(r);\n\t\treturn r;\n\t}\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn this.toStringV2();\n\t\t}\n\t\treturn '[' + super.childrenToString() + ']';\n\t}\n\n\ttoStringV2() {\n\t\treturn `[${this.toStringV2Literal()}line]${this.toStringV2PrivateDataSection()}${this.listStartV2()}${this.toStringV2TagList()}${super.childrenToString('v2')}${this.listEndV2()}`;\n\t}\n\n\tprettyPrintInternal(lvl, hdir) {\n\t\treturn this.standardListPrettyPrint(lvl, '[line]', hdir);\n\t}\n\t\n\tserializePrivateData(data) {\n\t\treturn `${this.getCurrentStyle()}`;\n\t}\n\n\tdeserializePrivateData(data) {\n\t\tthis.setCurrentStyle(data);\n\t}\n\n\tsetMutable(val) {\n\t\tsuper.setMutable(val)\n\t\t// make doc-type children also have the same mutability\n\t\tthis.doForEachChild(c => {\n\t\t\tif (Utils.isDocElement(c)) {\n\t\t\t\tc.setMutable(val);\n\t\t\t}\n\t\t})\n\t}\n\n\ttoggleDir() {} // can only be horizontal\n\tsetVertical() {}\n\n\tgetValueAsString() {\n\t\tlet s = '';\n\t\tthis.doForEachChild(c => {\n\t\t\tif (c.getTypeName() == '-letter-') {\n\t\t\t\ts += c.getText();\n\t\t\t} else if (c.getTypeName() == '-separator-') {\n\t\t\t\ts += c.getText();\n\t\t\t} else if (c.getTypeName() == '-newline-') {\n\t\t\t\ts += '\\n';\n\t\t\t} else if (c.getTypeName() == '-word-') {\n\t\t\t\ts += c.getValueAsString();\n\t\t\t} else {\n\t\t\t\tthrow new EError('cannot convert line to string, invalid format');\n\t\t\t}\n\t\t});\n\t\treturn s;\n\t}\n\n\tgetKeyFunnelForContext(context) {\n\t\tif (context == KeyContext.DOC) {\n\t\t\treturn new LineKeyFunnel(this);\n\t\t}\n\t\treturn null;\n\t}\n\n\tsetPfont(pfstring) {\n\t\tthis.pfstring.set(pfstring);\n\t\tthis.doForEachChild(function(c) {\n\t\t\tc.setPfont(pfstring);\n\t\t})\n\t}\n\n\tinsertChildAt(c, i) {\n\t\tif (this.pfstring.get()) {\n\t\t\tc.setPfont(this.pfstring.get());\n\t\t}\n\t\tsuper.insertChildAt(c, i);\n\t}\n\n\tgetContextType() {\n\t\tif (this.isMutable()) {\n\t\t\treturn ContextType.LINE;\n\t\t} else {\n\t\t\treturn ContextType.IMMUTABLE_LINE;\n\t\t}\n\t}\n\n\t// deprecated\n\tgetKeyFunnel() {\n\t\treturn new LineKeyFunnel(this);\n\t}\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tlet domNode = renderNode.getDomNode();\n\n\t\tsuper.renderInto(renderNode, renderFlags, withEditor);\n\t\tdomNode.classList.add('line');\n\t\tdomNode.classList.add('data');\n\t\tif (renderFlags & RENDER_FLAG_INSERT_AFTER) {\n\t\t\tdomNode.classList.add('rightinsert');\n\t\t} else if (renderFlags & RENDER_FLAG_INSERT_BEFORE) {\n\t\t\tdomNode.classList.add('leftinsert');\t\t\t\n\t\t} else if (renderFlags & RENDER_FLAG_INSERT_AROUND) {\n\t\t\tdomNode.classList.add('topinsert');\t\t\t\n\t\t} else if (renderFlags & RENDER_FLAG_INSERT_INSIDE) {\n\t\t\tdomNode.classList.add('bottominsert');\t\t\t\n\t\t}\n\t\t// weird\n\t\tlet hasDocChild = false;\n\t\tfor (let i = 0; i < this.numChildren() ;i++) {\n\t\t\tlet c = this.getChildAt(i);\n\t\t\tif (Utils.isDocElement(c)) {\n\t\t\t\thasDocChild = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ((!(renderFlags & RENDER_FLAG_EXPLODED)) && !hasDocChild) {\n\t\t\tdomNode.classList.add('emptyline');\n\t\t} else {\n\t\t\tdomNode.classList.remove('emptyline');\n\t\t}\n\t\tdomNode.classList.add('newversionofline');\n\t}\n\n\t/*\n\tshould be in the superclass (nexcontainer) but it creates a circular dependency graph somehow\n\t*/\n\tevaluate(env) {\n\t\tif (this.mutable) {\n\t\t\t// shallow copy, then evaluate children.\n\t\t\tlet listcopy = this.makeCopy(true);\n\t\t\tlet iterator = null;\n\t\t\tthis.doForEachChild(function(child) {\n\t\t\t\tlet newchild = evaluateNexSafely(child, env);\n\t\t\t\t// we don't throw exceptions, we just embed them - this isn't a function.\n\t\t\t\titerator = listcopy.fastAppendChildAfter(newchild, iterator);\n\t\t\t})\n\t\t\tlistcopy.setMutable(false);\n\t\t\treturn listcopy;\n\t\t} else {\n\t\t\treturn this;\n\t\t}\n\t}\n\n\n\n\tgetDefaultHandler() {\n\t\treturn 'lineDefault';\n\t}\n\n\tgetEventTable(context) {\n\t\treturn {\n\n\t\t\t// In a doc context, lines act differently -- remember\n\t\t\t// that an empty line has no letter or separator in it\n\t\t\t// to select so we can't isolate all the weirdness\n\t\t\t// to the letter and separator nexes.\n\t\t\t'ArrowUp': 'move-up-for-line',\n\t\t\t'ArrowLeft': 'move-left-for-line',\n\t\t\t'ArrowDown': 'move-down-for-line',\n\t\t\t'ArrowRight': 'move-right-for-line',\n\n\n\t\t\t'Enter': 'do-line-break-or-eval',\n\t\t\t'Backspace': 'delete-line',\n\n\t\t\t'!': 'JUST_USE_DEFAULT',\n\t\t\t'@': 'JUST_USE_DEFAULT',\n\t\t\t'#': 'JUST_USE_DEFAULT',\n\t\t\t'$': 'JUST_USE_DEFAULT',\n\t\t\t'%': 'JUST_USE_DEFAULT',\n\t\t\t'^': 'JUST_USE_DEFAULT',\n\t\t\t'&': 'JUST_USE_DEFAULT',\n\t\t\t'*': 'JUST_USE_DEFAULT',\n\t\t\t'(': 'JUST_USE_DEFAULT',\n\t\t\t'[': 'JUST_USE_DEFAULT',\n\t\t\t'{': 'JUST_USE_DEFAULT',\n\t\t\t'<': 'JUST_USE_DEFAULT',\n\t\t\t'_': 'JUST_USE_DEFAULT',\n\n\t\t}\n\t}\n\n\n\tmemUsed() {\n\t\treturn heap.sizeLine();\n\t}\n}\n\nfunction constructLine() {\n\tif (!heap.requestMem(heap.sizeLine())) {\n\t\tthrow new EError(`OUT OF MEMORY: cannot allocate Line.\nstats: ${heap.stats()}`)\n\t}\n\treturn heap.register(new Line());\n}\n\nexport { Line, constructLine }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { constructDeferredValue } from './deferredvalue.js'\nimport { Command, CommandEditor } from './command.js'\nimport { gc } from '../gc.js'\nimport { Editor } from '../editors.js'\nimport {\n\tRENDER_FLAG_SHALLOW,\n\tRENDER_FLAG_EXPLODED,\n} from '../globalconstants.js'\nimport {\n\tDeferredCommandActivationFunctionGenerator,\n} from '../asyncfunctions.js'\nimport { executeRunInfo } from '../commandfunctions.js'\nimport { eventQueueDispatcher } from '../eventqueuedispatcher.js'\nimport { ARGRESULT_LISTENING, ARGRESULT_SETTLED, ARGRESULT_FINISHED } from '../argevaluator.js'\nimport { heap } from '../heap.js'\nimport { constructFatalError } from './eerror.js'\n\n\nclass DeferredCommand extends Command {\n\tconstructor(val) {\n\t\tsuper(val);\n\n\t\t// note, you could have code that infinitely queues up unfinished\n\t\t// deferred commands, meaning that you could run out of memory\n\t\t// with things like the runInfo -- so this needs to be looked at.\n\t\tthis._activated = false;\n\t\tthis._finished = false;\n\t\tthis._cancelled = false;\n\n\t\tthis._activationEnv = null;\n\t\tthis._returnedValue = null;\n\t\tthis._runInfo = null;\n\n\t\tgc.register(this);\n\t}\n\n\tisActivated() {\n\t\treturn this._activated;\n\t}\n\n\tisFinished() {\n\t\treturn this._finished;\n\t}\n\n\tisSet() {\n\t\treturn true;\n\t}\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn this.toStringV2();\n\t\t}\n\t\treturn `*(${super.childrenToString()}*)`;\n\t}\n\n\ttoStringV2() {\n\t\treturn `*${this.toStringV2Literal()}${this.toStringV2PrivateDataSection()}${this.listStartV2()}${this.toStringV2TagList()}${super.childrenToString('v2')}${this.listEndV2()}`;\n\t}\n\n\tdeserializePrivateData(data) {\n\t\tif (data) {\n\t\t\tthis.setCommandText(data);\n\t\t}\n\t}\n\n\tserializePrivateData() {\n\t\tlet r = this.getCommandText();\n\t\tif (!r) return '';\n\t\treturn r;\n\t}\n\n\n\tprettyPrintInternal(lvl, hdir) {\n\t\treturn this.standardListPrettyPrint(lvl, '*', hdir);\n\t}\n\n\tgetTypeName() {\n\t\treturn '-deferredcommand-';\n\t}\n\n\tmakeCopy(shallow) {\n\t\tlet r = constructDeferredCommand();\n\t\tthis.copyChildrenTo(r, shallow);\n\t\tthis.copyFieldsTo(r);\n\t\treturn r;\n\t}\n\n\tcopyFieldsTo(nex) {\n\t\tsuper.copyFieldsTo(nex);\n\t}\n\n\tevaluate(executionEnv) {\n\t\t// we have to make a copy, we can't store state with code in a lambda etc.\n\n\t\t// to copy, we follow the same algorithm as argContainer --\n\t\t// we do a shallow copy but then children are not copied.\n\t\tlet copyOfSelf = this.makeCopy(true);\n\t\tfor (let i = 0; i < this.numChildren(); i++) {\n\t\t\tcopyOfSelf.appendChild(this.getChildAt(i));\n\t\t}\n\n\t\t// it's a bit messy that runinfo is initialized when we evaluate.\n\t\t// should this happen when activated?\n\n\t\tlet dv = constructDeferredValue();\n\t\tcopyOfSelf._runInfo = copyOfSelf.createRunInfo(executionEnv);\n\n\t\t// make it so the arg container in the runinfo updates the actual\n\t\t// children of the command copy so they can be rendered to the screen.\n\t\t// this would change if I created a separate/different object whose\n\t\t// purpose is to display to the user the in-process computation of the\n\t\t// deferred command\n\t\tcopyOfSelf._runInfo.argContainer.makeUpdating(copyOfSelf);\n\n\t\tcopyOfSelf._returnedValue = dv;\n\n\t\tdv.appendChild(copyOfSelf);\n\t\tlet afg = new DeferredCommandActivationFunctionGenerator(copyOfSelf, executionEnv);\n\t\tdv.set(afg);\n\t\tdv.activate();\n\n\t\t// I'm returning dv/_returnedValue so I don't need to (and shouldn't) ref count it\n\n\t\treturn dv;\n\t}\n\n\tactivate(executionEnv) {\n\t\theap.addEnvReference(executionEnv);\n\t\tthis._activationEnv = executionEnv;\n\t\tthis._activated = true;\n\t\tthis.tryToFinish();\n\t}\n\n\ttryToFinish() {\n\t\tif (this._cancelled) {\n\t\t\treturn;\n\t\t}\n\t\tif (this._returnedValue.wasFreed) {\n\t\t\treturn;\n\t\t}\n\t\tlet evaluationResult = null;\n\t\ttry {\n\t\t\tevaluationResult = this._runInfo.argEvaluator.evaluatePotentiallyDeferredArgs(this);\n\t\t\t/*\n\t\t\tWhat should happen is the arg evaluator will try to evaluate the args, and return an enum instead of a boolean\n\t\t\tpossible values:\n\t\t\t1. finished -- evaluate the function and finish the returned dv with whatever it returns\n\t\t\t2. settling -- one of the args settled but didn't finish, evaluate the function and settle the returned dv with whatever it returns\n\t\t\t3. waiting -- don't do anything\n\n\t\t\tnote also that evaluating a settled (but not finished) dv returns the same dv,\n\t\t\tbut when evaluating the function, we do want to pass in the contents of the settled dv.\n\n\t\t\talso: open question, if an arg settles, do we evaluate the args after it? The current logic stops evaluating args\n\t\t\twhen it gets the first dv -- this is so that things like \"begin\" work intuitively if you put deferred functions\n\t\t\tin them. But if one of the deferred functions settles, do we progress?\n\t\t\t*/\n\t\t} catch (e) {\n\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\tthis.finish(e);\n\t\t\t} else {\n\t\t\t\tthrow e;\n\t\t\t}\n\t\t}\n\t\tif (evaluationResult == ARGRESULT_SETTLED || evaluationResult == ARGRESULT_FINISHED) {\n\t\t\tlet executionResult = executeRunInfo(this._runInfo, this._activationEnv);\n\t\t\tif (Utils.isFatalError(executionResult)) {\n\t\t\t\tthis.finish(executionResult);\n\t\t\t} else if (evaluationResult == ARGRESULT_SETTLED) {\n\t\t\t\tthis.settle(executionResult);\n\t\t\t} else {\n\t\t\t\tthis.finish(executionResult);\n\t\t\t}\n\t\t}\n\t\tthis.setDirtyForRendering(true);\n\t\teventQueueDispatcher.enqueueRenderOnlyDirty();\n\n\t}\n\n\tfinish(result) {\n\t\theap.removeEnvReference(this._activationEnv);\n\t\tthis._runInfo.finalize();\n\t\tthis._runInfo = null;\n\n\t\tthis._finished = true;\n\t\t// this._finished needs to be set to true before calling finish on\n\t\t// the returned value. When we call finish on the returned value,\n\t\t// this deferred command will be removed as the child of that deferred value\n\t\t// and replaced with the result of the computation. When that happens,\n\t\t// memory cleanup happens. When memory cleanup happens on a deferred command,\n\t\t// it will check this._finished and try to cancel the deferred value if it's\n\t\t// not finished. So we have to make sure this is marked as finished first\n\t\t// so we don't try to cancel something that was already finished.\n\t\tthis._returnedValue.finish(result);\n\t}\n\n\tsettle(result) {\n\t\t// don't remove ref\n\t\tthis._returnedValue.settle(result)\n\t}\n\n\tcancel() {\n\t\theap.removeEnvReference(this._activationEnv);\n\t\tthis._runInfo.finalize();\n\t\tthis._runInfo = null;\n\t\tthis._cancelled = true;\n\t}\n\n\tnotify() {\n\t\tthis.tryToFinish();\n\t}\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tlet domNode = renderNode.getDomNode();\n\t\tlet dotspan = null;\n\t\tif (!(renderFlags & RENDER_FLAG_SHALLOW)) {\n\t\t\tdotspan = document.createElement(\"span\");\n\t\t\tdotspan.classList.add('dotspan');\n\t\t\tdomNode.appendChild(dotspan);\n\t\t}\n\t\tsuper.skipRenderInto(renderNode, renderFlags, withEditor);\n\t\tdomNode.classList.add('deferredcommand');\n\t\tif (!(renderFlags & RENDER_FLAG_SHALLOW)) {\n\t\t\tif (renderFlags & RENDER_FLAG_EXPLODED) {\n\t\t\t\tdotspan.classList.add('exploded');\n\t\t\t} else {\n\t\t\t\tdotspan.classList.remove('exploded');\n\t\t\t}\n\t\t\tif (this.isEditing) {\n\t\t\t\tdotspan.classList.add('editing');\n\t\t\t} else {\n\t\t\t\tdotspan.classList.remove('editing');\n\t\t\t}\n\t\t\tdotspan.innerText = this.getCommandText(); // superclass method\n\t\t}\n\t}\n\n\trenderAfterChild() {}\n\n\tcallDeleteHandler() {\n\t\t// no op but use this if you need for cleanup\n\t}\n\n\tgetEventTable(context) {\n\t\t// most of these have no tests?\n\t\treturn {\n\t\t\t'ShiftBackspace': 'call-delete-handler-then-remove-selected-and-select-previous-sibling',\n\t\t}\n\t}\n\n\tstatic makeDeferredCommandWithArgs(cmdname, maybeargs) {\n\t\tlet cmd = constructDeferredCommand(cmdname);\n\n\t\t// this little snippet lets you do varargs or array\n\t\tlet args = [];\n\t\tif (Array.isArray(maybeargs)) {\n\t\t\targs = maybeargs;\n\t\t} else {\n\t\t\targs = Array.prototype.slice.call(arguments).splice(1);\n\t\t}\n\t\tlet appendIterator = null;\n\t\tfor (let i = 0; i < args.length; i++) {\n\t\t\tappendIterator = cmd.fastAppendChildAfter(args[i], appendIterator);\n\t\t}\n\t\treturn cmd;\n\t}\n\n\tmemUsed() {\n\t\tlet r = heap.sizeDeferredCommand();\n\t\tif (this._runInfo) {\n\t\t\tr += this._runInfo.memUsed();\n\t\t}\n\t\treturn r + super.memUsed();\n\t}\n\n\tcleanupOnMemoryFree() {\n\t\tif (this._activated && !this._finished) {\n\t\t\tthis.cancel();\n\t\t}\n\t\t// because we initialize runinfo at evaluation time not activation time,\n\t\t// there is the possibility that even after canceling there will still be runinfo\n\t\tif (this._runInfo) {\n\t\t\tthis._runInfo.finalize();\n\t\t}\n\t}\n}\n\nfunction constructDeferredCommand(val) {\n\tif (!heap.requestMem(heap.sizeDeferredCommand())) {\n\t\tthrow constructFatalError(`OUT OF MEMORY: cannot allocate DeferredCommand.\nstats: ${heap.stats()}`)\n\t}\n\treturn heap.register(new DeferredCommand(val));\n}\n\nexport { DeferredCommand, constructDeferredCommand}\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n\n// DeferredValue acts like an atomic value but it's actually a container.\n\nimport * as Utils from '../utils.js'\n\nimport { eventQueueDispatcher } from '../eventqueuedispatcher.js'\nimport { NexContainer } from './nexcontainer.js'\nimport { Nil } from './nil.js'\nimport { RENDER_FLAG_SHALLOW, RENDER_FLAG_EXPLODED } from '../globalconstants.js'\nimport { getFFGen } from '../gc.js'\nimport { experiments } from '../globalappflags.js'\nimport { heap } from '../heap.js'\nimport { constructFatalError } from './eerror.js'\n\nconst DVSTATE_CANCELLED = 0;\nconst DVSTATE_NEW = 1;\nconst DVSTATE_ACTIVATED = 2;\nconst DVSTATE_SETTLED = 3;\nconst DVSTATE_FINISHED = 4;\n\n\nclass DeferredValue extends NexContainer {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.privateData = '';\n\t\tthis.mutable = false;\n\t\tthis.activationFunctionGenerator = null;\n\t\tthis.listeners = [];\n\n\t\tthis.state = DVSTATE_NEW;\n\t}\n\n\taddListener(obj) {\n\t\tif (this.hasListener(obj)) {\n\t\t\treturn;\n\t\t}\n\t\tthis.listeners.push(obj);\n\t\tif (this._finished) {\n\t\t\teventQueueDispatcher.enqueueRenotifyDeferredListeners(this);\n\t\t}\n\t}\n\n\thasListener(obj) {\n\t\tfor (let i = 0; i < this.listeners.length; i++) {\n\t\t\tif (this.listeners[i] == obj) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}\n\n\tnotifyAllListeners() {\n\t\tthis.listeners.forEach(function(listener) {\n\t\t\tlistener.notify();\n\t\t}.bind(this));\n\t}\n\n\tcancel() {\n\t\tthis.ffgen--;\n\t\tthis.state = DVSTATE_CANCELLED;\n\t}\n\n\tisActivated() {\n\t\treturn this.state >= DVSTATE_ACTIVATED;\n\t}\n\n\tisSettled() {\n\t\treturn this.state >= DVSTATE_SETTLED;\n\t}\n\n\tisFinished() {\n\t\treturn this.state >= DVSTATE_FINISHED;\n\t}\n\n\tisCancelled() {\n\t\treturn this.state == DVSTATE_CANCELLED;\n\t}\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn this.toStringV2();\n\t\t}\n\t}\n\n\ttoStringV2() {\n\t\t// I think deferred values should just save as not a container but rather save as the string of its\n\t\t// contained value, whatever that is. We can't, for example, save the state of a file read operation that is in progress.\n\t\treturn this.getChildAt(0).toStringV2();\n\t}\n\n\t// deferred values are containers but we don't let you insert things in the editor\n\tcanDoInsertInside() {\n\t\treturn false;\n\t}\n\n\t// rename this\n\tset(activationFunctionGenerator) {\n\t\tthis.activationFunctionGenerator = activationFunctionGenerator;\n\t\tthis.ffgen = getFFGen();\n\t}\n\n\tfinish(value) {\n\t\tthis.finishOrSettle(value, false);\n\t}\n\n\tsettle(value) {\n\t\tthis.finishOrSettle(value, true);\n\t}\n\n\tfinishOrSettle(value, justSettling) {\n\t\tif (this.isFinished()) {\n\t\t\t// can't finish twice, can't settle after finishing.\n\t\t\treturn;\n\t\t}\n\t\tif (this.ffgen < getFFGen()) {\n\t\t\t// either this was cancelled or all pending deferreds were cancelled.\n\t\t\tthis._cancelled = true;\n\t\t\treturn;\n\t\t}\n\t\tthis.setDirtyForRendering(true);\n\t\teventQueueDispatcher.enqueueRenderOnlyDirty();\n\t\tif (value) {\n\t\t\tif (this.numChildren() == 0) {\n\t\t\t\tthis.appendChild(value);\n\t\t\t} else {\n\t\t\t\tthis.replaceChildAt(value, 0);\n\t\t\t}\n\t\t}\n\t\tthis.state = justSettling ? DVSTATE_SETTLED : DVSTATE_FINISHED;\n\t\tif (!experiments.DISABLE_ALERT_ANIMATIONS) {\n\t\t\tthis.doAlertAnimation();\n\t\t}\n\t\tthis.notifyAllListeners();\n\t}\n\n\tfinishWithRepeat(value) {\n\t\tthis.finish(value, true /* do repeat */)\n\t}\n\n\tstartSettle(value) {\n\t\teventQueueDispatcher.enqueueDeferredSettle(this, value);\n\t}\n\n\tstartFinish(value) {\n\t\teventQueueDispatcher.enqueueDeferredFinish(this, value);\n\t}\n\n\tactivate() {\n\t\tlet finishCallback = ((value) => this.startFinish(value));\n\t\tlet settleCallback = ((value) => this.startSettle(value));\n\t\tthis.activationFunctionGenerator.getFunction(finishCallback, settleCallback, this)();\n\t\tthis.state = DVSTATE_ACTIVATED;\n\t}\n\n\tprettyPrintInternal(lvl, hdir) {\n\t\treturn this.standardListPrettyPrint(lvl, ',', hdir);\n\t}\n\n\tdeserializePrivateData(data) {\n\t\tthis.privateData = data;\n\t}\n\n\tserializePrivateData() {\n\t\treturn this.privateData;\n\t}\n\n\tgetTypeName() {\n\t\treturn '-deferredvalue-';\n\t}\n\n\tmakeCopy(shallow) {\n\t\t// A copy of a deferred value should ACTUALLY just be a copy of the contents,\n\t\t// since you can't really copy a waiting file handle or something.\n\t\t// Since this defaults to immutable and can't be made mutable, the only time\n\t\t// makeCopy should be called is for a copy and paste operation.\n\t\treturn this.getChildAt(0).makeCopy();\n\t}\n\n\tdoAlertAnimation() {\n\t\tlet rn = this.getRenderNodes();\n\t\tfor (let i = 0; i < rn.length; i++) {\n\t\t\teventQueueDispatcher.enqueueAlertAnimation(rn[i]);\n\t\t}\n\t}\n\n\tcopyFieldsTo(nex) {\n\t\tsuper.copyFieldsTo(nex);\n\t}\n\n\tgetSettledValue() {\n\t\tif (this.numChildren() > 0) {\n\t\t\treturn this.getChildAt(0);\n\t\t} else {\n\t\t\treturn new Nil();\n\t\t}\n\t}\n\n\tevaluate(env) {\n\t\tif (!this.isActivated()) {\n\t\t\tthis.activate();\n\t\t\treturn this;\n\t\t}\n\t\tif (this.isFinished()) {\n\t\t\tif (this.numChildren() > 0) {\n\t\t\t\tlet c = this.getChildAt(0);\n\t\t\t\tif (Utils.isDeferredValue(c) && c.isFinished()) {\n\t\t\t\t\treturn c.evaluate(env);\n\t\t\t\t} else {\n\t\t\t\t\treturn c;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn new Nil();\n\t\t\t}\n\t\t}\n\t\t// if just settled, but not finished, return this.\n\t\treturn this;\n\t}\n\n\tsetMutable(v) {\n\t\tif (v) {\n\t\t\tthrow constructFatalError('cannot make deferred values mutable.');\n\t\t}\n\t}\n\n\tgetDefaultHandler() {\n\t\treturn 'standardDefault';\n\t}\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tlet domNode = renderNode.getDomNode();\n\t\tlet dotspan = null;\n\t\tif (!(renderFlags & RENDER_FLAG_SHALLOW)) {\n\t\t\tdotspan = document.createElement(\"span\");\n\t\t\tdotspan.classList.add('dotspan');\n\t\t\tdomNode.appendChild(dotspan);\n\t\t}\n\t\tsuper.renderInto(renderNode, renderFlags, withEditor);\n\t\tdotspan.classList.add('dotspan');\n\t\tdomNode.appendChild(dotspan);\n\t\tdomNode.classList.add('deferredvalue');\n\t\tif (!(renderFlags & RENDER_FLAG_SHALLOW)) {\n\t\t\tif (renderFlags & RENDER_FLAG_EXPLODED) {\n\t\t\t\tdotspan.classList.add('exploded');\n\t\t\t} else {\n\t\t\t\tdotspan.classList.remove('exploded');\n\t\t\t}\n\t\t\tif (this.isEditing) {\n\t\t\t\tdotspan.classList.add('editing');\n\t\t\t} else {\n\t\t\t\tdotspan.classList.remove('editing');\n\t\t\t}\n\n\n\t\t\tswitch(this.state) {\n\t\t\t\tcase DVSTATE_CANCELLED:\n\t\t\t\t\tdotspan.innerHTML = '<span class=\"dvglyph cancelledglyph\">⤬</span>'\n\t\t\t\t\tbreak;\n\t\t\t\tcase DVSTATE_ACTIVATED:\n\t\t\t\t\tif (experiments.STATIC_PIPS) {\n\t\t\t\t\t\tdotspan.innerHTML = '<span class=\"dvglyph waitingglyph\">↻</span>'\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdotspan.innerHTML = '<span class=\"dvglyph waitingglyph dvspin\">↻</span>'\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase DVSTATE_SETTLED:\n\t\t\t\t\tdotspan.innerHTML = '<span class=\"dvglyph settledglyph\">⬿</span>'\n\t\t\t\t\tbreak;\n\t\t\t\tcase DVSTATE_FINISHED:\n\t\t\t\t\tdotspan.innerHTML = '<span class=\"dvglyph finishedglyph\">⤓</span>'\n\t\t\t\t\tbreak;\n\t\t\t\tcase DVSTATE_NEW:\n\t\t\t\tdefault:\n\t\t\t\t\t// shouldn't happen\n\t\t\t\t\tdotspan.innerHTML = '<span class=\"dvglyph newglyph\">?</span>'\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tmemUsed() {\n\t\treturn super.memUsed() + heap.sizeDeferredValue();\n\t}\n}\n\nfunction constructDeferredValue() {\n\tif (!heap.requestMem(heap.sizeDeferredValue())) {\n\t\tthrow constructFatalError(`OUT OF MEMORY: cannot allocate DeferredValue.\nstats: ${heap.stats()}`)\n\t}\n\treturn heap.register(new DeferredValue());\n}\n\nexport { DeferredValue, constructDeferredValue }","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { ValueNex } from './valuenex.js'\nimport { experiments } from '../globalappflags.js'\nimport { heap } from '../heap.js'\nimport { constructFatalError } from './eerror.js'\n\nclass Nil extends ValueNex {\n\tconstructor() {\n\t\tsuper('', '&#8709;', 'nil')\n\t}\n\n\tgetTypeName() {\n\t\treturn '-nil-';\n\t}\n\n\tmakeCopy() {\n\t\tlet r = constructNil();\n\t\tthis.copyFieldsTo(r);\n\t\treturn r;\n\t}\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn this.toStringV2();\n\t\t}\n\t\treturn super.toString(version);\n\t}\n\n\ttoStringV2() {\n\t\treturn '[nil]' + this.toStringV2TagList();\n\t}\n\n\tisEmpty() {\n\t\treturn true;\n\t}\n\n\tdeleteLastLetter() {\n\t\treturn;\n\t}\n\n\tappendText(txt) {\n\t\treturn;\n\t}\n\n\tgetDefaultHandler() {\n\t\treturn 'standardDefault';\n\t}\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tsuper.renderInto(renderNode, renderFlags, withEditor);\n\t\tlet domNode = renderNode.getDomNode();\n\t\tdomNode.classList.add('nil');\n\t}\n\n\tgetEventTable(context) {\n\t\treturn {\n\t\t}\n\t}\n\n\tmemUsed() {\n\t\treturn super.memUsed() + heap.sizeNil();\n\t}\n}\n\nfunction constructNil() {\n\tif (!heap.requestMem(heap.sizeNil())) {\n\t\tthrow constructFatalError(`OUT OF MEMORY: cannot allocate Nil.\nstats: ${heap.stats()}`)\n\t}\n\treturn heap.register(new Nil());\n}\n\n\nexport { Nil, constructNil }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// change \"set\" to \"prime\"\n\nimport { addMidiListener } from './midifunctions.js'\nimport { convertJSMapToOrg } from './nex/org.js'\n\nclass ActivationFunctionGenerator {\n\n\tconstructor() {\n\t}\n\n\tgetFunction(cb, exp) {}\n\n\tgetAFGName() {}\n}\n\nclass DeferredCommandActivationFunctionGenerator extends ActivationFunctionGenerator {\n\tconstructor(deferredCommand, env) {\n\t\tsuper();\n\t\tthis.deferredCommand = deferredCommand;\n\t\tthis.env = env;\n\t}\n\n\tgetFunction(finishCallback, settleCallback, exp) {\n\t\treturn function() {\n\t\t\tthis.deferredCommand.activate(this.env);\n\t\t}.bind(this);\n\t}\n\n\tgetAFGName() {\n\t\treturn 'deferredcommand';\n\t}\n}\n\n\nclass GenericActivationFunctionGenerator extends ActivationFunctionGenerator {\n\tconstructor(name, asyncFunction) {\n\t\tsuper();\n\t\tthis.name = name;\n\t\tthis.asyncFunction = asyncFunction;\n\t}\n\n\tgetFunction(finishCallback, settleCallback, exp) {\n\t\treturn function() {\n\t\t\tthis.asyncFunction(finishCallback, exp);\n\t\t}.bind(this);\n\t}\n\n\tgetAFGName() {\n\t\treturn this.name;\n\t}\n}\n\n\nclass ImmediateActivationFunctionGenerator extends ActivationFunctionGenerator {\n\tgetFunction(finishCallback, settleCallback, exp) {\n\t\treturn function() {\n\t\t\tfinishCallback(null);\n\t\t}\n\t}\n\n\tgetAFGName() {\n\t\treturn 'nothing';\n\t}\n}\n\nclass DelayActivationFunctionGenerator extends ActivationFunctionGenerator {\n\tconstructor(timeout) {\n\t\tsuper();\n\t\tthis.timeout = timeout;\n\t}\n\n\tgetFunction(finishCallback, settleCallback, exp) {\n\t\treturn function() {\n\t\t\tsetTimeout(function() {\n\t\t\t\tfinishCallback(null /* do not set a value, the default is whatever the child is of the exp */);\n\t\t\t}, this.timeout)\n\t\t}.bind(this);\n\t}\n\n\tgetAFGName() {\n\t\treturn 'delay';\n\t}\n}\n\nclass OnNextRenderActivationFunctionGenerator extends ActivationFunctionGenerator {\n\tconstructor(nex) {\n\t\tsuper();\n\t\tthis.nex = nex;\n\t}\n\n\tgetFunction(finishCallback, settleCallback, exp) {\n\t\treturn function() {\n\t\t\tthis.nex.setOnNextRenderCallback(function() {\n\t\t\t\tfinishCallback(this.nex);\n\t\t\t}.bind(this));\n\t\t}.bind(this);\n\t}\n\n\tgetAFGName() {\n\t\treturn 'delay';\n\t}\n}\n\nclass CallbackActivationFunctionGenerator extends ActivationFunctionGenerator {\n\tconstructor(closure) {\n\t\tsuper();\n\t\tthis.closure = closure;\n\t}\n\n\tgetFunction(finishCallback, settleCallback, exp) {\n\t\treturn function() {\n\t\t\t// no op, the dv has to be manually resolved.\n\t\t}.bind(this);\n\t}\n\n\tgetAFGName() {\n\t\treturn 'callback';\n\t}\n}\n\n\nclass ClickActivationFunctionGenerator extends ActivationFunctionGenerator {\n\tconstructor(nex) {\n\t\tsuper();\n\t\tthis.nex = nex;\n\t}\n\n\tgetFunction(finishCallback, settleCallback, exp) {\n\t\treturn function() {\n\t\t\tthis.nex.extraClickHandler = function(x, y) {\n\t\t\t\tlet org = convertJSMapToOrg({'x':x, 'y':y});\n\t\t\t\tsettleCallback(org);\n\t\t\t}\n\t\t}.bind(this);\n\t}\n\n\tgetAFGName() {\n\t\treturn 'click';\n\t}\n}\n\nclass MidiActivationFunctionGenerator extends ActivationFunctionGenerator {\n\tconstructor(id) {\n\t\tsuper();\n\t\tthis.id = id;\n\t\tthis.listening = false;\n\t\tthis.expListeners = [];\n\t}\n\n\tgetFunction(finishCallback, settleCallback, exp) {\n\t\tthis.expListeners.push(settleCallback);\n\t\treturn function() {\n\t\t\tif (!this.listening) {\n\t\t\t\tthis.listening = true;\n\t\t\t\taddMidiListener(this.id, function(midinote) {\n\t\t\t\t\tfor (let i = 0; i < this.expListeners.length; i++) {\n\t\t\t\t\t\tthis.expListeners[i](midinote);\n\t\t\t\t\t}\n\t\t\t\t}.bind(this));\n\t\t\t}\n\t\t}.bind(this);\n\t}\n\n\tgetAFGName() {\n\t\treturn 'midi';\n\t}\n}\n\nclass OnContentsChangedActivationFunctionGenerator extends ActivationFunctionGenerator {\n\tconstructor(nex) {\n\t\tsuper();\n\t\tthis.nex = nex;\n\t}\n\n\tgetFunction(finishCallback, settleCallback, exp) {\n\t\treturn function() {\n\t\t\tthis.nex.onContentsChangedCallback = function() {\n\t\t\t\tsettleCallback();\n\t\t\t}\n\t\t}.bind(this);\n\t}\n\n\tgetAFGName() {\n\t\treturn 'on-contents-changed';\n\t}\n}\n\n\nexport {\n\tImmediateActivationFunctionGenerator,\n\tDelayActivationFunctionGenerator,\n\tClickActivationFunctionGenerator,\n\tGenericActivationFunctionGenerator,\n\tMidiActivationFunctionGenerator,\n\tDeferredCommandActivationFunctionGenerator,\n\tOnContentsChangedActivationFunctionGenerator,\n\tCallbackActivationFunctionGenerator,\n\tOnNextRenderActivationFunctionGenerator\n}\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Tag } from './tag.js'\nimport { constructOrg, convertJSMapToOrg } from './nex/org.js'\n\n\nvar midi = null;\nvar setupcb = null;\n\nconst inputListeners = {};\nconst inputsBeingListenedTo = {};\n\n// need to start using async function around here!\n\n\nfunction playWavetableOnMidiInput(wt, midiInput) {\n\t\n}\n\nfunction onMIDISuccess(midiAccess) {\n\tconsole.log('MIDI ready');\n\tconsole.log(midiAccess);\n\tmidi = midiAccess;\n\tif (setupcb) {\n\t\tsetupcb();\n\t}\n}\n\nfunction onMIDIFailure(msg) {\n\tconsole.log(\"failed to do midi \" + msg);\n\tmidi = \"i failed\";\n}\n\nfunction maybeSetupMidi(cb) {\n\tif (!midi) {\n\t\tsetupcb = cb;\n\t\tnavigator.requestMIDIAccess().then( onMIDISuccess, onMIDIFailure );\n\t} else {\n\t\tcb();\n\t}\n}\n\nfunction addToMap(m, from, name) {\n\tm[name] = from[name];\n}\n\nfunction addMidiListener(id, f) {\n\tif (inputListeners[id]) {\n\t\tinputListeners[id].push(f);\n\t} else {\n\t\tsetupFirstInputListener(id, f);\n\t}\n}\n\nfunction setupFirstInputListener(id, f) {\n\tinputListeners[id] = [ f ];\n\tfor (let entry of midi.inputs) {\n\t\tlet input = entry[1];\n\t\tif (id == input.id) {\n\t\t\tinputsBeingListenedTo[id] = input;\n\t\t\tinput.onmidimessage = (msg) => {\n\t\t\t\trespondToMidiMessage(id, msg);\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction doNote(msg, type) {\n\tlet channel = msg.data[0] & 0x0F;\n\tlet nn = msg.data[1] & 0x7F;\n\tlet vel = msg.data[2] & 0x7F;\n\treturn convertJSMapToOrg({\n\t\t'note': nn,\n\t\t'vel': vel,\n\t\t'type': type\n\t})\n}\n\nfunction parseMidiMessage(msg) {\n\tlet status = msg.data[0];\n\t// channel voice messages\n\tstatus = status & 0xF0;\n\tswitch(status) {\n\t\tcase 0x80:\n\t\t\treturn doNote(msg, 'note off');\n\t\tcase 0x90:\n\t\t\treturn doNote(msg, 'note on');\n\t}\n\treturn constructOrg();\n\n}\n\nfunction respondToMidiMessage(id, msg) {\n\tconsole.log('sending message to midi listeners');\n\tconsole.log(msg);\n\tfor (let i = 0; i < inputListeners[id].length; i++) {\n\t\tinputListeners[id][i](parseMidiMessage(msg));\n\t}\n}\n\nfunction getMidiDevices(incb) {\n\tlet cb = function() {\n\t\tlet r = [];\n\t\tfor (let entry of midi.inputs) {\n\t\t\tvar input = entry[1];\n\t\t\tlet m = {};\n\t\t\taddToMap(m, input, 'id');\n\t\t\taddToMap(m, input, 'manufacturer');\n\t\t\taddToMap(m, input, 'name');\n\t\t\taddToMap(m, input, 'type');\n\t\t\taddToMap(m, input, 'version');\n\t\t\taddToMap(m, input, 'state');\n\t\t\taddToMap(m, input, 'connection');\n\n\t\t\tr.push(m);\n\t\t}\n\t\tincb(r);\n\t}\n\tmaybeSetupMidi(cb);\n}\n\n\nexport { getMidiDevices, addMidiListener }","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { ContextType, ContextMapBuilder } from '../contexttype.js'\nimport { Nex } from './nex.js'\nimport { otherflags } from '../globalappflags.js'\nimport { RENDER_FLAG_INSERT_AFTER } from '../globalconstants.js'\nimport { parametricFontManager } from '../pfonts/pfontmanager.js'\nimport { experiments } from '../globalappflags.js'\nimport { heap } from '../heap.js'\nimport { constructFatalError } from './eerror.js'\n\nclass Letter extends Nex {\n\tconstructor(letter) {\n\t\tsuper();\n\t\tthis.letterValue = letter;\n\t\tif (otherflags.DEFAULT_TO_PARAMETRIC_FONTS) {\n\t\t\tthis.pfont = parametricFontManager.getFont('Basic', {}, {});\t\n\t\t\tthis.pfont.setLetter(this.letterValue);\t\t\n\t\t} else {\n\t\t\tthis.pfont = null;\n\t\t}\n\t\tif (letter == '') {\n\t\t\tthrow new Error('cannot have an empty letter');\n\t\t}\n\t}\n\n\tgetTypeName() {\n\t\treturn '-letter-';\n\t}\n\n\tmakeCopy() {\n\t\tlet r = constructLetter(this.letterValue);\n\t\tthis.copyFieldsTo(r);\n\t\treturn r;\n\t}\n\n\tcopyFieldsTo(nex) {\n\t\tsuper.copyFieldsTo(nex);\n\t\tif (this.pfont) {\n\t\t\tnex.pfont = this.pfont.copy();\n\t\t}\n\t}\n\n\tsetPfont(pfstring) {\n\t\tif (this.pfont && parametricFontManager.isSameFont(this.pfont, pfstring)) {\n\t\t\tparametricFontManager.redrawFontStringInFont(this.pfont, pfstring);\n\t\t} else {\n\t\t\tthis.pfont = parametricFontManager.getFontForString(pfstring);\n\t\t\tthis.pfont.setLetter(this.letterValue);\t\t\n\t\t}\n\t\tthis.setDirtyForRendering(true);\n\t}\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn this.toStringV2();\n\t\t}\n\t\treturn '|(' + this.letterValue + ')|';\n\t}\n\n\ttoStringV2() {\n\t\treturn `[${this.toStringV2Literal()}letter]${this.toStringV2PrivateDataSection()}${this.toStringV2TagList()}`\n\t}\n\n\tserializePrivateData(data) {\n\t\tlet style = this.getCurrentStyle();\n\t\tif (style) {\n\t\t\treturn `${this.letterValue}|${this.getCurrentStyle()}`;\n\t\t} else {\n\t\t\treturn `${this.letterValue}`;\n\t\t}\n\t}\n\n\tdeserializePrivateData(data) {\n\t\tlet a = data.split('|');\n\t\tthis.letterValue = a[0];\n\t\tif (a.length > 1) {\n\t\t\tthis.setCurrentStyle(a[1]);\n\t\t}\n\t}\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tlet domNode = renderNode.getDomNode();\n\t\tsuper.renderInto(renderNode, renderFlags, withEditor);\n\t\tdomNode.classList.add('letter');\n\t\tdomNode.classList.add('data');\n\t\tif (renderFlags & RENDER_FLAG_INSERT_AFTER) {\n\t\t\tdomNode.classList.add('rightinsert');\n\t\t} else {\n\t\t\tdomNode.classList.add('leftinsert');\t\t\t\n\t\t}\n\t\tif (this.pfont) {\n\t\t\tdomNode.appendChild(this.pfont.drawIntoDomNode(this.letterValue));\n\t\t} else {\n\t\t\tlet contents = (this.letterValue == \" \" || this.letterValue == \"&nbsp;\") ? \"\\xa0\" : this.letterValue;\n\t\t\tdomNode.appendChild(document.createTextNode(contents));\n\t\t}\n\t}\n\n\tgetText() {\n\t\treturn this.letterValue;\n\t}\n\n\tgetDefaultHandler() {\n\t\treturn 'letterDefault';\n\t}\n\n\tgetEventTable(context) {\n\t\treturn {\n\t\t\t'Tab': 'move-to-next-leaf',\n\t\t\t'ArrowUp': 'move-to-corresponding-letter-in-previous-line',\n\t\t\t'ArrowDown': 'move-to-corresponding-letter-in-next-line',\n\t\t\t'ArrowLeft': 'move-to-previous-leaf',\n\t\t\t'ArrowRight': 'move-to-next-leaf',\n\t\t\t'Backspace' : 'delete-letter',\n\t\t\t'ShiftBackspace' : 'delete-letter',\n\t\t\t'Enter': 'do-line-break-for-letter',\n\n\t\t\t'!': 'insert-actual-!-at-insertion-point-from-letter',\n\t\t\t'@': 'insert-actual-@-at-insertion-point-from-letter',\n\t\t\t'#': 'insert-actual-#-at-insertion-point-from-letter',\n\t\t\t'$': 'insert-actual-$-at-insertion-point-from-letter',\n\t\t\t'%': 'insert-actual-%-at-insertion-point-from-letter',\n\t\t\t'^': 'insert-actual-^-at-insertion-point-from-letter',\n\t\t\t'&': 'insert-actual-&-at-insertion-point-from-letter',\n\t\t\t'*': 'insert-actual-*-at-insertion-point-from-letter',\n\t\t\t'(': 'insert-actual-(-at-insertion-point-from-letter',\n\t\t\t')': 'insert-actual-)-at-insertion-point-from-letter',\n\t\t\t'[': 'insert-actual-[-at-insertion-point-from-letter',\n\t\t\t'{': 'insert-actual-{-at-insertion-point-from-letter',\n\t\t\t'<': 'insert-actual-<-at-insertion-point-from-letter',\n\t\t}\n\t}\n\n\n\tmemUsed() {\n\t\treturn super.memUsed() + heap.sizeLetter();\n\t}\n}\n\nfunction constructLetter(letter) {\n\tif (!heap.requestMem(heap.sizeLetter())) {\n\t\tthrow constructFatalError(`OUT OF MEMORY: cannot allocate Letter.\nstats: ${heap.stats()}`)\n\t}\n\treturn heap.register(new Letter(letter));\n}\n\n\nexport { Letter, constructLetter }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Basic } from './basic.js'\nimport { WeirdHelvetica } from './weirdhelvetica.js'\n\nclass ParametricFontManager {\n\tconstructor() {\n\t\tthis.fonts = {\n\t\t\t'basic': new Basic({}, {}),\n\t\t\t'weirdhelvetica': new WeirdHelvetica({}, {}),\n\t\t};\n\t}\n\n\tgetFont(fontname, pxparams, params) {\n\t\tif (this.fonts[fontname]) {\n\t\t\treturn this.fonts[fontname].createWithParams(pxparams, params);\n\t\t}\n\t\treturn this.fonts['basic'].createWithParams(pxparams, params);\n\t}\n\n\t// font string should be something like this\n\t// first the pxparams, then the relative params\n\t/*\n\n\tbasic##\n\tbasic#fontsize:20#\n\tbasic#fontsize:20,tracking:8#curve:.23\n\n\t*/\n\n\tparseFontString(fontstring) {\n\t\tlet params = {};\n\n\t\tlet sections = fontstring.split('#');\n\t\tparams.fontname = sections[0];\n\t\tlet pxparams1 = sections[1];\n\t\tlet relparams1 = sections[2];\n\n\t\tparams.pxparams = {};\n\t\tlet pxparams2 = pxparams1.split(',');\n\t\tfor (let i = 0; i < pxparams2.length; i++) {\n\t\t\tlet pxparams3 = pxparams2[i].split(':');\n\t\t\tparams.pxparams[pxparams3[0]] = Number(pxparams3[1]);\n\t\t}\n\n\t\tparams.relparams = {};\n\t\tlet relparams2 = relparams1.split(',');\n\t\tfor (let i = 0; i < relparams2.length; i++) {\n\t\t\tlet relparams3 = relparams2[i].split(':');\n\t\t\tparams.relparams[relparams3[0]] = Number(relparams3[1]);\n\t\t}\n\t\treturn params;\n\t}\n\n\tgetFontForString(fontstring) {\n\t\tlet params = this.parseFontString(fontstring);\n\t\treturn this.getFont(params.fontname, params.pxparams, params.relparams);\n\t}\n\n\tisSameFont(font, fontstring) {\n\t\tlet params = this.parseFontString(fontstring);\n\t\treturn (font.getFontName() == params.fontname);\n\t}\n\n\tredrawFontStringInFont(font, fontstring) {\n\t\tlet params = this.parseFontString(fontstring);\n\t\tfont.setParams(params.pxparams, params.relparams);\n\t}\n}\n\nconst parametricFontManager = new ParametricFontManager();\n\nexport { parametricFontManager }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// useful tool: https://www.metaflop.com/modulator\n\nimport { MoveOp, OP_MOVE,\n\t\t BezierOp, OP_BEZIER,\n\t\t LineOp, OP_LINE,\n\t\t BezierPlotOp, OP_BEZIERPLOT } from \"./drawingops.js\"\n\nimport { Glyph } from \"./glyph.js\"\nimport { Font } from \"./font.js\"\n\n\nconst GLYPHS = {\n\t' ': new Glyph(.4, []),\n\t'a': new Glyph(.7, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus * .75) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus * .75 + (p.curve * .75)) },\n\t\t\t{ x:p => (p.mid - (p.curve * .75)), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + (p.curve * .75)), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .75 + (p.curve * .75)) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .75) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .75 - (p.curve * .75)) },\n\t\t\t{ x:p => (p.mid + (p.curve * .75)), y:p => (p.corpus / 2) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - (p.curve * .75)), y:p => (p.corpus / 2) },\n\t\t\t{ x:p => (p.left), y:p => ((p.corpus * .25) + (p.curve * .75)) },\n\t\t\t{ x:p => (p.left), y:p => ((p.corpus * .25)) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => ((p.corpus * .25) - (p.curve * .75)) },\n\t\t\t{ x:p => (p.mid - (p.curve * .75)), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + (p.curve * .75)), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.right), y:p => ((p.corpus * .25) - (p.curve * .75)) },\n\t\t\t{ x:p => (p.right), y:p => ((p.corpus * .25)) },\n\t\t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .75) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.baseline - .02) },\n\t\t]},\n\t]),\n\n\t'b': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.asc) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 - p.curve) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t\t { x:p => (p.left), y:p => (p.corpus / 2 - p.curve) },\n\t  \t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t  \t]},\n\t]),\n\n\t'c': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.corpus) },\n\t\t \t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t \t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t ]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 - p.curve) },\n\t\t \t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t ]},\n\t\t{ op: OP_BEZIERPLOT, d: [\n\t\t\t{ val:p => (p.aperture) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIERPLOT, d: [\n\t\t\t{ val:p => (p.aperture) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 - p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\t]),\n\n\t'd': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 - p.curve) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 - p.curve) },\n\t  \t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t  \t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.asc) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\n\t]),\n\t'e': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t \t{ x:p => (p.mid + p.curve), y:p => (p.corpus) },\n\t\t \t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t ]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.corpus) },\n\t\t \t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t \t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t ]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 - p.curve) },\n\t\t \t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t ]},\n\t\t{ op: OP_BEZIERPLOT, d: [\n\t\t\t{ val:p => (p.aperture) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 - p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\t]),\n\t'f': new Glyph(.6, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.asc) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right - .1), y:p => (p.asc) },\n\t\t \t{ x:p => (p.mid), y:p => (p.asc * .8 + .1) },\n\t\t \t{ x:p => (p.mid), y:p => (p.asc * .8) },\n\t\t ]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t]),\n\n\t'g': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 - p.curve) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t\t { x:p => (p.left), y:p => (p.corpus / 2 - p.curve) },\n\t  \t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t  \t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.desc * .4) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.desc * .4 - p.curve) },\n\t\t\t { x:p => (p.mid + p.curve), y:p => (p.desc) },\n\t  \t\t{ x:p => (p.mid), y:p => (p.desc) },\n\t  \t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.desc) },\n\t\t\t { x:p => (p.left), y:p => (p.desc * .4 - p.curve) },\n\t  \t\t{ x:p => (p.left), y:p => (p.desc * .4) },\n\t  \t]},\n\t]),\n\t'h': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.asc) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2) }, // overdraw\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'i': new Glyph(.15, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus + .1) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus + .2) },\n\t\t]},\n\t]),\n\t'j': new Glyph(.15, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => ((p.desc + .1)) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid), y:p => ((p.desc + .1) - .1) },\n\t\t\t{ x:p => ((p.left - .2) + .1), y:p => (p.desc) },\n\t\t\t{ x:p => ((p.left - .2)), y:p => (p.desc) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus + .1) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus + .2) },\n\t\t]},\n\t]),\n\t'k': new Glyph(.7, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.asc) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus * .4) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left + p.width * .4), y:p => (p.corpus * .6) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'l': new Glyph(.1, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.asc) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'm': new Glyph(1.4, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid * .5 - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid * .5 ), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid * .5 + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid * 1.5 - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid * 1.5 ), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid * 1.5 + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'n': new Glyph(0.7, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid ), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'o': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 - p.curve) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t\t { x:p => (p.left), y:p => (p.corpus / 2 - p.curve) },\n\t  \t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t  \t]},\n\t]),\n\t'p': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.desc) },\n\t\t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 - p.curve) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t\t { x:p => (p.left), y:p => (p.corpus / 2 - p.curve) },\n\t  \t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t  \t]},\n\t]),\n\t'q': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 - p.curve) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t\t { x:p => (p.left), y:p => (p.corpus / 2 - p.curve) },\n\t  \t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t  \t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.desc) },\n\t\t]},\n\t]),\n\t'r': new Glyph(.4, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 + p.curve) },\n\t\t\t{ x:p => (p.right - p.curve), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t]),\n\t's': new Glyph(.65, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.corpus * .8) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right - (p.curve * .3)), y:p => (p.corpus * .8 + (p.curve * .7)) },\n\t\t\t{ x:p => (p.mid + (p.curve * .2)), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - (p.curve * .7)), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.left), y:p => (p.corpus * .8 + (p.curve * .4)) },\n\t\t\t{ x:p => (p.left), y:p => (p.corpus * .8) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus * .8 - (p.curve * .7)) },\n\t\t\t{ x:p => (p.mid - (p.curve * .7)), y:p => (p.corpus * .55) },\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus * .5) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + (p.curve * .7)), y:p => (p.corpus * .45) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .2 + (p.curve * .7)) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .2 - (p.curve * .4)) },\n\t\t\t{ x:p => (p.mid + (p.curve * .7)), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - (p.curve * .2)), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.left + (p.curve * .3)), y:p => (p.corpus * .2 - (p.curve * .7)) },\n\t\t\t{ x:p => (p.left), y:p => (p.corpus * .2) },\n\t\t]},\n\t]),\n\t't': new Glyph(.65, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.width * .4), y:p => (p.asc * .8) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.width * .4), y:p => (p.corpus * .2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.width * .4), y:p => (p.corpus * .2 - (p.curve * .3)) },\n\t\t\t{ x:p => (p.width * .7 - (p.curve * .3)), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.width * .7), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.width * .7 + (p.curve * .3)), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .2 - (p.curve * .3)) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .2) },\n\t\t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t]),\n\t'u': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus * .5) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus * .5 - p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .5 - p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus * .5) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'v': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.mid - (p.curve * .1)), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.mid + (p.curve * .1)), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t]),\n\t'w': new Glyph(1.6, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => ((p.width * .25) - (p.curve * .1)), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => ((p.width * .25) + (p.curve * .1)), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => ((p.width * .5) - (p.curve * .1)), y:p => (p.corpus * .95) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => ((p.width * .5) + (p.curve * .1)), y:p => (p.corpus * .95) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => ((p.width * .75) - (p.curve * .1)), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => ((p.width * .75) + (p.curve * .1)), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.width), y:p => (p.corpus) },\n\t\t]},\n\t]),\n\t'x': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\n\t]),\n\t'y': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.desc) },\n\t\t]},\n\n\t]),\n\t'z': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\n\t]),\n\n\n\t'A': new Glyph(1.2, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.mid - (p.curve * .1)), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.mid + (p.curve * .1)), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.width * .2), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.width * .8), y:p => (p.corpus / 2) },\n\t\t]},\n\t]),\n\n\t'B': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.cap) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .75 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .75) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .75 - p.curve) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.cap * .5) },\n\t\t\t{ x:p => (p.mid), y:p => (p.cap * .5) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.cap * .5) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.mid), y:p => (p.cap * .5) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.cap * .5) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .25 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .25) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .25 - p.curve) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'C': new Glyph(1.2, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - (p.curve * 1.3)), y:p => (p.cap) },\n\t\t \t{ x:p => (p.left), y:p => (p.cap / 2 + (p.curve * 1.3)) },\n\t\t \t{ x:p => (p.left), y:p => (p.cap / 2) },\n\t\t ]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.cap / 2 - (p.curve * 1.3)) },\n\t\t \t{ x:p => (p.mid - (p.curve * 1.3)), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t ]},\n\t\t{ op: OP_BEZIERPLOT, d: [\n\t\t\t{ val:p => (p.aperture) },\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t\t{ x:p => (p.mid + (p.curve * 1.3)), y:p => (p.cap) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap / 2 + (p.curve * 1.3)) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIERPLOT, d: [\n\t\t\t{ val:p => (p.aperture) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid + (p.curve * 1.3)), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap / 2 - (p.curve * 1.3)) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap / 2) },\n\t\t]},\n\t]),\n\t'D': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + (p.curve * 1.2)), y:p => (p.cap) },\n\t\t \t{ x:p => (p.right), y:p => (p.cap / 2 + (p.curve * 1.2)) },\n\t\t \t{ x:p => (p.right), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.cap / 2 - (p.curve * 1.2)) },\n\t\t \t{ x:p => (p.mid + (p.curve * 1.2)), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'E': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right - (p.curve * 1.1)), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'F': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right - (p.curve * 1.1)), y:p => (p.cap / 2) },\n\t\t]},\n\t]),\n\t'G': new Glyph(1.2, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - (p.curve * 1.3)), y:p => (p.cap) },\n\t\t \t{ x:p => (p.left), y:p => (p.cap / 2 + (p.curve * 1.3)) },\n\t\t \t{ x:p => (p.left), y:p => (p.cap / 2) },\n\t\t ]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.cap / 2 - (p.curve * 1.3)) },\n\t\t \t{ x:p => (p.mid - (p.curve * 1.3)), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t ]},\n\t\t{ op: OP_BEZIERPLOT, d: [\n\t\t\t{ val:p => (p.aperture) },\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t\t{ x:p => (p.mid + (p.curve * 1.3)), y:p => (p.cap) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap / 2 + (p.curve * 1.3)) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIERPLOT, d: [\n\t\t\t{ val:p => (p.aperture) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid + (p.curve * 1.3)), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap / 2 - (p.curve * 1.3)) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right - .02), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right - .02), y:p => (p.corpus * .75) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.corpus * .75) },\n\t\t]},\n\t]),\n\t'H': new Glyph(.9, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'I': new Glyph(.3, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'J': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 - p.curve) },\n\t\t \t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.left), y:p => (p.corpus / 2 - p.curve) },\n\t\t \t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t]),\n\t'K': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap / 2 - (p.curve)) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left + .1), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'L': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'M': new Glyph(1.2, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'N': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'O': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - (p.curve * 1.2)), y:p => (p.cap) },\n\t\t \t{ x:p => (p.left), y:p => (p.cap / 2 + (p.curve * 1.2)) },\n\t\t \t{ x:p => (p.left), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.cap / 2 - (p.curve * 1.2)) },\n\t\t \t{ x:p => (p.mid - (p.curve * 1.2)), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t \t{ x:p => (p.mid + (p.curve * 1.2)), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.right), y:p => (p.cap / 2 - (p.curve * 1.2)) },\n\t\t \t{ x:p => (p.right), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t \t{ x:p => (p.right), y:p => (p.cap / 2 + (p.curve * 1.2)) },\n\t\t \t{ x:p => (p.mid + (p.curve * 1.2)), y:p => (p.cap) },\n\t\t \t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t]),\n\n\t'P': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.cap) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .75 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .75) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .75 - p.curve) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.cap * .5) },\n\t\t\t{ x:p => (p.mid), y:p => (p.cap * .5) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.cap * .5) },\n\t\t]},\n\t]),\n\n\t'Q': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - (p.curve * 1.2)), y:p => (p.cap) },\n\t\t \t{ x:p => (p.left), y:p => (p.cap / 2 + (p.curve * 1.2)) },\n\t\t \t{ x:p => (p.left), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.cap / 2 - (p.curve * 1.2)) },\n\t\t \t{ x:p => (p.mid - (p.curve * 1.2)), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t \t{ x:p => (p.mid + (p.curve * 1.2)), y:p => (p.baseline) },\n\t\t \t{ x:p => (p.right), y:p => (p.cap / 2 - (p.curve * 1.2)) },\n\t\t \t{ x:p => (p.right), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t \t{ x:p => (p.right), y:p => (p.cap / 2 + (p.curve * 1.2)) },\n\t\t \t{ x:p => (p.mid + (p.curve * 1.2)), y:p => (p.cap) },\n\t\t \t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid + (p.curve / 2)), y:p => (p.baseline) },\n\t\t]},\t\t\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline - p.curve) },\n\t\t]},\t\t\n\t]),\n\n\t'R': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.cap) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .75 + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .75) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .75 - p.curve) },\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.cap * .5) },\n\t\t\t{ x:p => (p.mid), y:p => (p.cap * .5) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.left), y:p => (p.cap * .5) },\n\t\t]},\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.mid), y:p => (p.cap * .5) },\n\t\t]},\n\t\t{ op: OP_LINE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\n\t'S': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d: [\n\t\t\t{x:p => (p.right), y:p => (p.cap * .8) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right - (p.curve * .3)), y:p => (p.cap * .8 + (p.curve * .7)) },\n\t\t\t{ x:p => (p.mid + (p.curve * .2)), y:p => (p.cap) },\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - (p.curve * .7)), y:p => (p.cap) },\n\t\t\t{ x:p => (p.left), y:p => (p.cap * .8 + (p.curve * .4)) },\n\t\t\t{ x:p => (p.left), y:p => (p.cap * .8) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.cap * .8 - (p.curve * .7)) },\n\t\t\t{ x:p => (p.mid - (p.curve * .7)), y:p => (p.cap * .55) },\n\t\t\t{ x:p => (p.mid), y:p => (p.cap * .5) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + (p.curve * .7)), y:p => (p.cap * .45) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .2 + (p.curve * .7)) },\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => (p.cap * .2 - (p.curve * .4)) },\n\t\t\t{ x:p => (p.mid + (p.curve * .7)), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid - (p.curve * .2)), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.left + (p.curve * .3)), y:p => (p.cap * .2 - (p.curve * .7)) },\n\t\t\t{ x:p => (p.left), y:p => (p.cap * .2) },\n\t\t]},\n\t]),\n\n\t'T': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t]),\n\n\t'U': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2 - p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.baseline) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2 - p.curve) },\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t]),\n\t'V': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t]),\n\t'W': new Glyph(1.4, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.width * .25), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.width * .25), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.width * .75), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.width * .75), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t]),\n\t'X': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'Y': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.cap / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'Z': new Glyph(1.0, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.cap) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'.': new Glyph(0.1, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline + .1) },\n\t\t]},\n\t]),\n\t',': new Glyph(0.1, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline + .1) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline - (p.curve * .5)) },\n\t\t\t{ x:p => (p.left - .03 + (p.curve * .5)), y:p => (p.baseline - .05) },\n\t\t\t{ x:p => (p.left - .03), y:p => (p.baseline - .1) },\n\t\t]},\n\t]),\n\t';': new Glyph(0.1, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus - .1) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline + .1) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline - (p.curve * .5)) },\n\t\t\t{ x:p => (p.left - .03 + (p.curve * .5)), y:p => (p.baseline - .05) },\n\t\t\t{ x:p => (p.left - .03), y:p => (p.baseline - .1) },\n\t\t]},\n\t]),\n\t':': new Glyph(0.1, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus - .1) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline + .1) },\n\t\t]},\n\t]),\n\t'-': new Glyph(0.4, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus / 2) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.corpus / 2) },\n\t\t]},\n\t]),\n\t'?': new Glyph(.8, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => ((p.corpus + .1)) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.left), y:p => ((p.corpus + .1) + p.curve) },\n\t\t\t{ x:p => (p.mid - p.curve), y:p => (p.asc) },\n\t\t\t{ x:p => (p.mid), y:p => (p.asc) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.mid + p.curve), y:p => (p.asc) },\n\t\t\t{ x:p => (p.right), y:p => ((p.corpus + .1) + p.curve) },\n\t\t\t{ x:p => (p.right), y:p => ((p.corpus + .1)) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => (p.right), y:p => ((p.corpus + .1) - (p.curve * .4)) },\n\t\t\t{ x:p => ((p.mid * 1.5) + (p.curve * .4)), y:p => (p.corpus) },\n\t\t\t{ x:p => ((p.mid * 1.5)), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_BEZIER, d: [\n\t\t\t{ x:p => ((p.mid * 1.5) - (p.curve * .5)), y:p => (p.corpus) },\n\t\t\t{ x:p => (p.mid), y:p => ((p.corpus * .75) + (p.curve * .5)) },\n\t\t\t{ x:p => (p.mid), y:p => ((p.corpus * .75)) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline + .2) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline + .1) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.baseline) },\n\t\t]},\n\t]),\n\t'\\'': new Glyph(.3, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.asc * .9) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.mid), y:p => (p.corpus) },\n\t\t]},\n\t]),\n\t'\"': new Glyph(.3, [\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.asc * .9) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.left), y:p => (p.corpus) },\n\t\t]},\n\t\t{ op: OP_MOVE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.asc * .9) },\n\t\t]},\n\t\t{ op: OP_LINE, d:[\n\t\t\t{ x:p => (p.right), y:p => (p.corpus) },\n\t\t]},\n\n\t]),\n\n}\n\nconst DEFAULT_PARAMS = {\n\t'baseline_from_top': 0.7, // measured from the top\n\t'cap': 0.6, // a capital letter (like M)\n\t'asc': 0.7, // ascender (lowercase l)\n\t'desc': -0.3, // descender (bottom of a lowercase g or y)\n\t'corpus': 0.3, // aka x-height, height of a lowercase x\n\t'bar': 0.1, // middle bar in a lowercase e\n\t'linethickness': .05, // thickness of drawing pen\n\t'curve': 0.10, // governs curve control points\n\t'aperture': 0.7, // gaps in lowercase c, bottom of lowercase e\n\t'leading': .1,\n\t'tracking': .1,\n\n\t'nominalwidth': .4,\n\n\t// maybe don't let people override these two?\n\t// they are here for convenience\n\t'baseline': 0,\n\t'left': 0,\n\n}\n\nconst DEFAULT_PXPARAMS = {\n\t'fontsize': 90,\n\t'left_kerning': 0,\n\t'right_kerning': 0,\n\t'slop': 0,\n}\n\nlet defaultParamsHaveBeenSet = false;\nlet defaultParams = {};\n\nclass Basic extends Font {\n\tconstructor(pxparams, inparams) {\n\t\tsuper(pxparams, inparams);\n\t\tif (!defaultParamsHaveBeenSet) {\n\t\t\tdefaultParams = this.setDerivedParams(DEFAULT_PARAMS, {});\n\t\t\tdefaultParamsHaveBeenSet = true;\n\t\t}\n\t}\n\n\tgetDefaultParams() {\n\t\treturn defaultParams;\n\t}\n\n\tgetDefaultPxparams() {\n\t\treturn DEFAULT_PXPARAMS;\n\t}\n\n\tcreateWithParams(pxparams, inparams) {\n\t\treturn new Basic(pxparams, inparams);\n\t}\n\n\tcopy() {\n\t\tlet r = new Basic(this.copyParams(this.pxparams), this.copyParams(this.params));\n\t\tr.setLetter(this.letter);\n\t\treturn r;\n\t}\n\n\tgetFontName() {\n\t\treturn 'basic';\n\t}\n\n\tsetDerivedParams(params, inparams) {\n\t\tif (!inparams.bar) {\n\t\t\tparams.bar = params.corpus / 2;\n\t\t}\n\t\tif (!inparams.curve) {\n\t\t\tparams.curve = params.corpus * 0.28;\n\t\t}\n\t\treturn params; // no additional params or changes to defaults\n\t}\n\n\tgetGlyphs() {\n\t\treturn GLYPHS;\n\t}\n}\n\nexport { Basic }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Bezier } from './bezier.js'\n\nconst OP_MOVE = 0;\nconst OP_BEZIER = 1;\nconst OP_LINE = 2;\nconst OP_BEZIERPLOT = 3;\n\n\nclass MoveOp {\n\tconstructor(x, y) {\n\t\tthis.type = OP_MOVE;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tsetParams(params) {\n\t\t// should just be one\n\t\tthis.x = params[0].x;\n\t\tthis.y = params[0].y;\n\t}\n\n\tdraw(ctx) {\n\t\tctx.moveTo(this.x, this.y);\n\t}\n}\n\nclass BezierOp {\n\tconstructor(cp1x, cp1y, cp2x, cp2y, endx, endy) {\n\t\tthis.type = OP_BEZIER;\n\t\tthis.cp1x = cp1x;\n\t\tthis.cp1y = cp1y;\n\t\tthis.cp2x = cp2x;\n\t\tthis.cp2y = cp2y;\n\t\tthis.endx = endx;\n\t\tthis.endy = endy;\n\t}\n\n\tsetParams(params) {\n\t\t// should just be one\n\t\tthis.cp1x = params[0].x;\n\t\tthis.cp1y = params[0].y;\n\t\tthis.cp2x = params[1].x;\n\t\tthis.cp2y = params[1].y;\n\t\tthis.endx = params[2].x;\n\t\tthis.endy = params[2].y;\n\t}\n\n\tdraw(ctx) {\n\t\tctx.bezierCurveTo(this.cp1x,\n\t\t\t\t\t\t  this.cp1y,\n\t\t\t\t\t\t  this.cp2x,\n\t\t\t\t\t\t  this.cp2y,\n\t\t\t\t\t\t  this.endx,\n\t\t\t\t\t\t  this.endy);\n\t}\n\n}\n\nclass LineOp {\n\tconstructor(x, y) {\n\t\tthis.type = OP_LINE;\n\t\tthis.x = x;\n\t\tthis.y = y;\n\t}\n\n\tsetParams(params) {\n\t\t// should just be one\n\t\tthis.x = params[0].x;\n\t\tthis.y = params[0].y;\n\t}\n\n\tdraw(ctx) {\n\t\tctx.lineTo(this.x, this.y);\n\t}\n}\n\nclass BezierPlotOp {\n\tconstructor(p1x, p1y, cp1x, cp1y, cp2x, cp2y, p2x, p2y, stopat) {\n\t\tthis.type = OP_BEZIERPLOT;\n\t\tthis.p1x = p1x;\n\t\tthis.p1y = p1y;\n\t\tthis.cp1x = cp1x;\n\t\tthis.cp1y = cp1y;\n\t\tthis.cp2x = cp2x;\n\t\tthis.cp2y = cp2y;\n\t\tthis.p2x = p2x;\n\t\tthis.p2y = p2y;\n\t}\n\n\tsetParams(params) {\n\t\t// should just be one\n\t\tthis.aperture = params[0].val;\n\t\tthis.p1x = params[1].x;\n\t\tthis.p1y = params[1].y;\n\t\tthis.cp1x = params[2].x;\n\t\tthis.cp1y = params[2].y;\n\t\tthis.cp2x = params[3].x;\n\t\tthis.cp2y = params[3].y;\n\t\tthis.p2x = params[4].x;\n\t\tthis.p2y = params[4].y;\n\t}\n\n\tdraw(ctx) {\n\t\tnew Bezier(this.p1x,\n\t\t\t\t   this.p1y,\n\t\t\t\t   this.cp1x,\n\t\t\t\t   this.cp1y,\n\t\t\t\t   this.cp2x,\n\t\t\t\t   this.cp2y,\n\t\t\t\t   this.p2x,\n\t\t\t\t   this.p2y).plot(ctx, this.aperture);\n\n\t}\n}\n\nexport { MoveOp, OP_MOVE,\n\t\t BezierOp, OP_BEZIER,\n\t\t LineOp, OP_LINE,\n\t\t BezierPlotOp, OP_BEZIERPLOT } \n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// defaults to cubic\nclass Bezier {\n\tconstructor(p1x,\n\t\t\t\tp1y,\n\t\t\t\tcp1x,\n\t\t\t\tcp1y,\n\t\t\t\tcp2x,\n\t\t\t\tcp2y,\n\t\t\t\tp2x,\n\t\t\t\tp2y) {\n\t\tthis.p1x = p1x;\n\t\tthis.p1y = p1y;\n\t\tthis.cp1x = cp1x;\n\t\tthis.cp1y = cp1y;\n\t\tthis.cp2x = cp2x;\n\t\tthis.cp2y = cp2y;\n\t\tthis.p2x = p2x;\n\t\tthis.p2y = p2y;\n\t}\n\t// general form of the cubic bezier: the exponents for 1-t decrease while the\n\t// exponent for 1 increases, we use binomial coefficients 1/3/3/1\n\t//\n\t// B(t) =     1 * (1 - t)^3 * t^0 *  p1\n\t// \t\t\t+ 3 * (1 - t)^2 * t^1 * cp1\n\t//\t\t\t+ 3 * (1 - t)^1 * t^2 * cp2\n\t//\t\t\t+ 1 * (1 - t)^0 * t^3 *  p2\n\tplot(ctx, stopat) {\n\t\tif (!stopat) stopat = 1.0;\n\t\t// how many iterations? Let's plan on one per pixel.\n\t\t// But we could be rendering at different font sizes.\n\t\t// So we use the pythagorean theorem to get the pixel\n\t\t// distance between the start and end pixel.\n\t\t// The actual glyph will cover a longer distance, since\n\t\t// it's a curve, but it shouldn't be THAT much longer.\n\t\tlet dist = Math.sqrt(Math.pow((this.p1x - this.p2x), 2) + Math.pow((this.p1y - this.p2y), 2));\n\t\tlet inc = 1.0 / dist;\n\t\tctx.moveTo(this.p1x, this.p1y);\n\t\tfor (let t = 0.0; t < stopat; t += inc) {\n\t\t\t// suck it indentation nerds, this is a work of art\n\t\t\tlet x =       Math.pow((1 - t), 3) *                  this.p1x\n\t\t\t\t\t+ 3 * Math.pow((1 - t), 2) *          t     * this.cp1x\n\t\t\t\t\t+ 3 *          (1 - t)     * Math.pow(t, 2) * this.cp2x\n\t\t\t\t\t+                            Math.pow(t, 3) * this.p2x  ;\n\t\t\tlet y =       Math.pow((1 - t), 3) *                  this.p1y\n\t\t\t\t\t+ 3 * Math.pow((1 - t), 2) *          t     * this.cp1y\n\t\t\t\t\t+ 3 *          (1 - t)     * Math.pow(t, 2) * this.cp2y\n\t\t\t\t\t+                            Math.pow(t, 3) * this.p2y  ;\n\t\t\tctx.lineTo(x, y);\n\t\t}\n\t}\n}\n\nexport { Bezier }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nclass Glyph {\n\tconstructor(unitwidth, drawinstructions) {\n\t\t// a unitwidth of 1.0 would mean that the\n\t\t// glyph was perfectly square, assuming its height\n\t\t// is the same as the nominal font height.\n\t\tthis.unitwidth = unitwidth;\n\t\tthis.drawinstructions = drawinstructions;\n\t}\n\n\tgetWidth() {\n\t\treturn this.unitwidth;\n\t}\n\n\tgetInstructions() {\n\t\treturn this.drawinstructions;\n\t}\n}\n\nexport { Glyph }","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n// useful tool: https://www.metaflop.com/modulator\n\nimport { Pen } from \"./pen.js\"\n\nimport { MoveOp, OP_MOVE,\n\t\t BezierOp, OP_BEZIER,\n\t\t LineOp, OP_LINE,\n\t\t BezierPlotOp, OP_BEZIERPLOT } from \"./drawingops.js\"\n\n\n// Here's how these params work.\n// 1.0 = the font height\n//\n// \"baseline\" is a vector from the top of the nominal glyph\n// (the flow element) to the baseline.\n//\n// All other values are vectors from the baseline, with\n// positive values pointing up.\n//\n// For example, if a glyph exactly matches the nominal font\n// size, i.e. zero leading, then if baseline\n// is 0.7, then ascender is also 0.7, and\n// descender is -0.3.\n//\n// for some metrics, this is \"distance along the bezier\"\n// so in some cases rather than drawing the entire curve,\n// we draw some of it, and the parameter governs how much of\n// it we draw (how far along the bezier we go). Example:\n// bottom of lowercase e, bottom and top of lowercase c, etc.\n\n\nconst FONT_DEBUG = false;\n\nclass Font {\n\tconstructor(pxparams, inparams) {\n\t\tthis.setParams(pxparams, inparams);\n\t\tthis.flowElement = null;\n\t\tthis.previousSlop = -1;\n\t\tthis.previousFontSize = -1;\n\t\tthis.letter = null;\n\t\tthis.glyph = null;\n\t\tthis.needsRedraw = false;\n\t}\n\n\tsetParams(inpxparams, inparams) {\n\t\t// A user might want to override something like corpus,\n\t\t// and this particular font might have logic such that\n\t\t// curve is dependent on corpus.\n\t\t// Also, the user might want to separately override curve.\n\t\t// That's why we override twice. The first time we override,\n\t\t// all the values the user specified get put in. Then\n\t\t// the font has a chance to set values based on its own\n\t\t// internal logic, and anything the user set previously\n\t\t// would be factored in. Finally, the user has a final\n\t\t// chance to override those values again.\n\n\t\tlet pxparams = this.copyParams(this.getDefaultPxparams());\n\t\tthis.overrideParams(pxparams, inpxparams);\n\t\tthis.pxparams = pxparams;\n\n\t\tlet params = this.copyParams(this.getDefaultParams());\n\t\tthis.overrideParams(params, inparams);\n\t\tthis.setDerivedParams(params, inparams);\n\t\tthis.params = params;\n\t\tif (this.glyph) {\n\t\t\tthis.setParamsDerivedFromGlyph();\n\t\t}\n\t\tthis.needsRedraw = true;\n\t}\n\n\tgetDefaultPxparams() {\n\t\treturn {};\n\t}\n\n\tgetDefaultParams() {\n\t\treturn {};\n\t}\n\n\tcopyParams(copyFrom) {\n\t\tlet r = {};\n\t\tfor (let p in copyFrom) {\n\t\t\tr[p] = copyFrom[p];\n\t\t}\n\t\treturn r;\n\t}\n\n\toverrideParams(params, inparams) {\n\t\tfor (let p in inparams) {\n\t\t\tif (params[p]) {\n\t\t\t\tparams[p] = inparams[p];\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Some params might be related to others. For example, \"bar\" might be some\n\t * multiple of corpus height. If someone tweaking the font overrides/sets\n\t * corpus height but doesn't set bar, we want bar to adjust. Each font should\n\t * override this method to perform these tweaks.\n\t */\n\tsetDerivedParams(params, inparams) {\n\t\t// no op, should override\n\t}\n\n\tsetupCanvas(\n\t\t\tflowelement,\n\t\t\tlineheight_px,\n\t\t\tfontsize_px, // aka nominal height\n\t\t\tbaselineFromTop_px, // aka \"nominal\" ascender\n\t\t\tglyphwidth_px,\n\t\t\tkerningleft_px,\n\t\t\tkerningright_px,\n\t\t\ttracking_px,\n\t\t\tslop_px) {\n\n\t\t// see http://www.vodka.church/fonts/ for more info on\n\t\t// how I derived these formulas.\n\n\t\t// height\n\t\tlet canvasheight_px = fontsize_px + slop_px;\n\t\tlet leading_px = lineheight_px - fontsize_px;\n\t\tlet flowelementheight_px = fontsize_px + leading_px;\n\t\tlet canvastop_px = (leading_px / 2) - (slop_px / 2);\n\n\t\t// width\n\t\tlet canvaswidth_px = glyphwidth_px + slop_px;\n\t\tlet leftSpacing_px = (tracking_px + kerningleft_px) / 2;\n\t\tlet canvasleft_px = leftSpacing_px - (slop_px / 2);\n\t\tlet rightSpacing_px = (tracking_px + kerningright_px) / 2;\n\t\tlet flowElementWidth_px = glyphwidth_px + leftSpacing_px + rightSpacing_px;\n\n\t\tlet canvas = document.createElement('canvas');\n\t\tcanvas.setAttribute('height', `${canvasheight_px}px;`);\n\t\tcanvas.setAttribute('width', `${canvaswidth_px}px;`);\n\t\tlet canvasStyle = 'position:absolute;';\n\t\tcanvasStyle += `top:${canvastop_px}px;`;\n\t\tcanvasStyle += `left:${canvasleft_px}px;`;\n\n\t\tflowelement.appendChild(canvas);\n\t\tlet flowElementStyle = 'position:relative;'\n\t\tflowElementStyle += `width:${flowElementWidth_px}px;`;\n\t\tflowElementStyle += `height:${fontsize_px}px;`;\n\n\t\tif (FONT_DEBUG) {\n\t\t\tlet r1 = Math.round(Math.random() * 7);\n\t\t\tlet r2 = Math.round(Math.random() * 7);\n\t\t\tlet r3 = Math.round(Math.random() * 7);\n\t\t\tflowElementStyle += `background-color:#${r1}0b${r2}${r3}0;`\n\t\t}\n\n\t\tcanvas.setAttribute('style', canvasStyle);\n\t\tflowelement.setAttribute('style', flowElementStyle);\n\t\treturn canvas;\n\t}\n\n\tgetFontName() {\n\t\treturn '';\n\t}\n\n\tcalculateSlop(asc, desc, pt_px) {\n\t\tlet requestedSlop = this.pxparams.slop;\n\t\t// hard-coded slop, ignore required slop and previous slop.\n\t\tif (requestedSlop != 0) {\n\t\t\treturn requestedSlop;\n\t\t}\n\t\t// ok we will calculate slop.\n\n\t\tlet requiredSlop = 0;\n\t\tlet totalheight = asc + (- desc);\n\t\tlet extraheight = totalheight - 1.0;\n\t\tif (extraheight > 0) {\n\t\t\trequiredSlop = pt_px * extraheight * 1.1;\n\t\t} else {\n\t\t\trequiredSlop = pt_px * .2; // idk\n\t\t}\n\n\t\t// now that we have required slop, we look to see\n\t\t// whether we've already exceeded that slop.\n\t\tif (this.previousSlop >= requiredSlop) {\n\t\t\treturn this.previousSlop;\n\t\t} else {\n\t\t\t// don't change previous slop yet.\n\t\t\treturn requiredSlop + 20; // change in increments of 20\n\t\t}\n\t}\n\n\trebuildCanvas(pt_px,\n\t\t\t\t  baseline_from_top,\n\t\t\t\t  slop_px,\n\t\t\t\t  lineheight_px,\n\t\t\t\t  left_kerning_px,\n\t\t\t\t  right_kerning_px,\n\t\t\t\t  tracking_px) {\n\n\t\tthis.pen = new Pen(pt_px, baseline_from_top, slop_px);\n\n\t\tthis.flowElement = document.createElement('div');\n\n\t\tthis.canvas = this.setupCanvas(\n\t\t\tthis.flowElement,\n\t\t\tlineheight_px,\n\t\t\tpt_px,           /* fontsize_px */\n\t\t\tbaseline_from_top * pt_px,  /* baselineFromTop_px */\n\t\t\tthis.params.width * pt_px,    /* glyphwidth_px */\n\t\t\tleft_kerning_px,\n\t\t\tright_kerning_px,\n\t\t\ttracking_px,\n\t\t\tslop_px);\t\t\n\t}\n\n\tmaybeEval(x) {\n\t\tlet cap = this.params.cap; // capital letter (like M)\n\t\tlet asc = this.params.asc; // ascender (lowercase l)\n\t\tlet desc = this.params.desc; // desc (bottom of y)\n\t\tlet corpus = this.params.corpus; // aka x-height\n\t\tlet bar = this.params.bar; // middle bar in lowercase e\n\t\tlet curve = this.params.curve; // used for control points\n\t\tlet aperture = this.params.aperture; // opening in c, e\n\n\t\tlet left = this.params.left;\n\t\tlet right = this.params.right;\n\t\tlet baseline = this.params.baseline;\n\t\tlet mid = this.params.mid;\n\n\t\tlet width = this.params.width;\n\n\t\tif (typeof x == 'string') {\n\t\t\treturn eval(x);\n\t\t} else {\n\t\t\treturn x(this.params);\n\t\t}\n\t}\n\n\t// this will at some point be expanded to also set the context,\n\t// i.e. letter before or after\n\tsetLetter(letter) {\n\t\tif (this.letter == letter) {\n\t\t\treturn;\n\t\t}\n\t\tthis.needsRedraw = true;\n\t\tthis.letter = letter;\n\t\tthis.glyph = this.getGlyphs()[letter];\n\t\tif (!this.glyph) {\n\t\t\tthis.glyph = this.getGlyphs()['a'];\n\t\t}\n\t\tthis.setParamsDerivedFromGlyph();\n\t}\n\n\tsetParamsDerivedFromGlyph() {\n\t\tthis.params.width = this.glyph.getWidth() * this.params.nominalwidth;\n\t\tthis.params.right = this.params.width;\n\t\tthis.params.mid = this.params.width / 2;\n\t}\n\n\tdrawIntoDomNode() {\n\t\tlet pt_px = this.pxparams.fontsize; // font height in pixels\n\t\tlet left_kerning_px = this.pxparams.left_kerning;\n\t\tlet right_kerning_px = this.pxparams.right_kerning;\n\t\tlet lineheight_px = pt_px + pt_px * this.params.leading;\n\t\tlet tracking_px = pt_px * this.params.tracking;\n\t\tlet linethickness = this.params.linethickness;\n\t\tlet baseline_from_top = this.params.baseline_from_top;\n\t\tlet cap = this.params.cap;\n\t\tlet asc = this.params.asc;\n\t\tlet desc = this.params.desc;\n\t\tlet corpus = this.params.corpus;\n\t\tlet bar = this.params.bar;\n\t\tlet curve = this.params.curve;\n\t\tlet aperture = this.params.aperture;\n\n\t\tlet slop_px = this.calculateSlop(asc, desc, pt_px);\n\n\t\tlet shouldRebuildCanvas = false;\n\n\t\tif (this.flowElement == null) {\n\t\t\tshouldRebuildCanvas = true;\n\t\t}\n\n\t\tif (slop_px != this.previousSlop) {\n\t\t\tshouldRebuildCanvas = true;\n\t\t\tthis.previousSlop = slop_px;\n\t\t}\n\n\t\tif (pt_px != this.previousFontSize) {\n\t\t\tshouldRebuildCanvas = true;\n\t\t\tthis.previousFontSize = pt_px;\n\t\t}\n\n\t\tif (shouldRebuildCanvas) {\n\t\t\tthis.needsRedraw = true;\n\t\t\tthis.rebuildCanvas(pt_px,\n\t\t\t\t\t\t\t   baseline_from_top,\n\t\t\t\t\t\t\t   slop_px,\n\t\t\t\t\t\t\t   lineheight_px,\n\t\t\t\t\t\t\t   left_kerning_px,\n\t\t\t\t\t\t\t   right_kerning_px,\n\t\t\t\t\t\t\t   tracking_px);\n\n\t\t}\n\n\t\tif (this.needsRedraw) {\n\t\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\t\tctx.lineWidth = linethickness * pt_px;\n\t\t\tctx.beginPath();\n\t\t\tctx.clearRect(0, 0, this.canvas.width, this.canvas.height)\n\t\t\tlet instructions = this.glyph.getInstructions();\n\n\t\t\tfor (let i = 0; i < instructions.length; i++) {\n\t\t\t\tlet oprecord = instructions[i];\n\t\t\t\tlet opobj = this.createOp(oprecord.op);\n\t\t\t\tlet params = [];\n\t\t\t\tfor (let i = 0; i < oprecord.d.length; i++) {\n\t\t\t\t\tlet p = oprecord.d[i];\n\t\t\t\t\tparams[i] = {};\n\t\t\t\t\tif (p.x) params[i].x = this.pen.xToPx(this.maybeEval(p.x));\n\t\t\t\t\tif (p.y) params[i].y = this.pen.yToPx(this.maybeEval(p.y));\n\t\t\t\t\tif (p.val) params[i].val = this.maybeEval(p.val);\n\t\t\t\t}\n\t\t\t\topobj.setParams(params);\n\t\t\t\topobj.draw(ctx);\n\t\t\t}\n\t\t\tctx.stroke();\n\t\t\tthis.needsRedraw = false;\n\t\t}\n\t\treturn this.flowElement;\n\t}\n\n\tcreateOp(opstr) {\n\t\tswitch(opstr) {\n\t\t\tcase OP_MOVE:\n\t\t\t\treturn new MoveOp();\n\t\t\tcase OP_BEZIER:\n\t\t\t\treturn new BezierOp();\n\t\t\tcase OP_BEZIERPLOT:\n\t\t\t\treturn new BezierPlotOp();\n\t\t\tcase OP_LINE:\n\t\t\t\treturn new LineOp();\n\t\t}\n\t}\n}\n\nexport { Font }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n/**\n * This class converts relative values (floats) to actual pixel values.\n */\nclass Pen {\n\tconstructor(fontSizeInPixels, defaultBaselineFloat, slopInPixels) {\n\t\tthis.fontSizeInPixels = fontSizeInPixels;\n\t\tthis.defaultBaselineFloat = defaultBaselineFloat;\n\t\tthis.slopInPixels = slopInPixels;\n\t}\n\n\txToPx(val) {\n\t\treturn this.fontSizeInPixels * val + (this.slopInPixels / 2);\n\t}\n\n\tyToPx(val) {\n\t\treturn this.fontSizeInPixels * ((-val) + this.defaultBaselineFloat) + (this.slopInPixels / 2); \n\t}\n}\n\nexport { Pen }","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { MoveOp, BezierOp, LineOp, BezierPlotOp } from './drawingops.js'\nimport { Glyph } from \"./glyph.js\"\nimport { Font } from \"./font.js\"\n\nconst GLYPHS = {\n\t' ': new Glyph(1.0, []),\n\t'a': new Glyph(0.8, [\n\t\tnew MoveOp( 'left', 'p.corpmidtop'),\n\t\tnew BezierOp('left', 'p.corpmidtop + curve',\n\t\t\t\t\t 'mid - curve', 'corpus',\n\t\t\t\t\t 'mid', 'corpus'),\n\t\tnew BezierOp('mid + curve', 'corpus',\n\t\t\t\t\t 'right', 'p.corpmidtop + curve',\n\t\t\t\t\t 'right', 'p.corpmidtop'),\n\t\tnew BezierOp('right', 'p.corpmidtop - curve',\n\t\t\t\t\t 'mid + curve', 'p.corpmid',\n\t\t\t\t\t 'mid', 'p.corpmid'),\n\t\tnew BezierOp('mid - curve', 'p.corpmid',\n\t\t\t\t\t 'left', 'p.corpmidbottom + curve',\n\t\t\t\t\t 'left', 'p.corpmidbottom'),\n\t\tnew BezierOp('left', 'p.corpmidbottom - curve',\n\t\t\t\t\t 'mid - curve', 'baseline',\n\t\t\t\t\t 'mid', 'baseline'),\n\t\tnew BezierOp('mid + curve', 'baseline',\n\t\t\t\t\t 'right', 'p.corpmidbottom - curve',\n\t\t\t\t\t 'right', 'p.corpmidbottom'),\n\t\tnew MoveOp('right', 'p.corpmidtop'),\n\t\tnew LineOp('right', 'p.corpmidbottom'),\n\t\tnew BezierOp('right', 'p.corpmidbottom - curve',\n\t\t\t\t\t 'right * 1.2 - curve', 'baseline',\n\t\t\t\t\t 'right * 1.2', 'baseline'),\n\t]),\n}\n\n\nconst DEFAULT_PARAMS = {\n\t'baseline': 0.7, // measured from the top\n\t'cap': 0.6, // a capital letter (like M)\n\t'asc': 0.7, // ascender (lowercase l)\n\t'desc': -0.3, // descender (bottom of a lowercase g or y)\n\t'corpus': 0.3, // aka x-height, height of a lowercase x\n\t'bar': 0.1, // middle bar in a lowercase e\n\t'linethickness': .05, // thickness of drawing pen\n\t'curve': 0.08, // governs curve control points\n\t'aperture': 0.7, // gaps in lowercase c, bottom of lowercase e\n\t'leading': .1,\n\t'tracking': .1,\n\t'corpmidtop': 0.3 * .75,\n\t'corpmid': 0.3 * .5,\n\t'corpmidbottom': 0.3 * .25,\n}\n\nconst DEFAULT_PXPARAMS = {\n\t'fontsize': 90,\n\t'left_kerning': 0,\n\t'right_kerning': 0,\n\t'slop': 0,\n}\n\nlet defaultParamsHaveBeenSet = false;\nlet defaultParams = {};\n\nclass WeirdHelvetica extends Font {\n\tconstructor(pxparams, inparams) {\n\t\tsuper(pxparams, inparams);\n\t\tif (!defaultParamsHaveBeenSet) {\n\t\t\tdefaultParams = this.setDerivedParams(DEFAULT_PARAMS, {});\n\t\t\tdefaultParamsHaveBeenSet = true;\n\t\t}\n\t}\n\n\tgetDefaultParams() {\n\t\treturn defaultParams;\n\t}\n\n\tgetDefaultPxparams() {\n\t\treturn DEFAULT_PXPARAMS;\n\t}\n\n\tcreateWithParams(pxparams, inparams) {\n\t\treturn new WeirdHelvetica(pxparams, inparams);\n\t}\n\n\tgetFontName() {\n\t\treturn 'weirdhelvetica';\n\t}\n\n\tsetDerivedParams(params, inparams) {\n\t\tif (!inparams.corpmidtop) {\n\t\t\tparams.corpmidtop = params.corpus * .75\n\t\t}\n\t\tif (!inparams.corpmid) {\n\t\t\tparams.corpmid = params.corpus * .5\n\t\t}\n\t\tif (!inparams.corpmidbottom) {\n\t\t\tparams.corpmidbottom = params.corpus * .25\n\t\t}\n\t\treturn params; // no additional params or changes to defaults\n\t}\n\n\tgetGlyphs() {\n\t\treturn GLYPHS;\n\t}\n}\n\nexport { WeirdHelvetica }","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Letter } from './letter.js'\nimport { experiments } from '../globalappflags.js'\nimport { RENDER_FLAG_INSERT_AFTER } from '../globalconstants.js'\nimport { heap } from '../heap.js'\nimport { constructFatalError } from './eerror.js'\n\nclass Separator extends Letter {\n\tconstructor(letter) {\n\t\tsuper(letter);\n\t}\n\n\tmakeCopy() {\n\t\tlet r = constructSeparator(this.getText());\n\t\tthis.copyFieldsTo(r);\n\t\treturn r;\n\t}\n\n\tgetTypeName() {\n\t\treturn '-separator-';\n\t}\n\n\t// makeCopy is same as superclass\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn this.toStringV2();\n\t\t}\n\t\treturn '|[' + this.getText() + ']|';\n\t}\n\n\ttoStringV2() {\n\t\treturn `[${this.toStringV2Literal()}separator]${this.toStringV2PrivateDataSection(this.getText())}${this.toStringV2TagList()}`\n\t}\n\n\tgetKeyFunnel() {\n\t\treturn new SeparatorKeyFunnel(this);\n\t}\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tlet domNode = renderNode.getDomNode();\n\t\tsuper.renderInto(renderNode, renderFlags, withEditor);\n\t\tdomNode.classList.add('separator');\n\t\tdomNode.classList.add('data');\n\t\tif (renderFlags & RENDER_FLAG_INSERT_AFTER) {\n\t\t\tdomNode.classList.add('rightinsert');\n\t\t} else {\n\t\t\tdomNode.classList.add('leftinsert');\t\t\t\n\t\t}\n\t}\n\n\tgetEventTable(context) {\n\t\treturn null;\n\t}\n\n\tgetDefaultHandler() {\n\t\treturn 'separatorDefault';\n\t}\n\n\tgetEventTable() {\n\t\treturn {\n\t\t\t'Tab': 'move-to-next-leaf',\n\t\t\t'ArrowUp': 'move-to-corresponding-letter-in-previous-line',\n\t\t\t'ArrowDown': 'move-to-corresponding-letter-in-next-line',\n\t\t\t'ArrowLeft': 'move-to-previous-leaf',\n\t\t\t'ArrowRight': 'move-to-next-leaf',\n\t\t\t'ShiftBackspace': 'delete-separator',\n\t\t\t'Backspace': 'delete-separator',\n\t\t\t'Enter': 'do-line-break-for-separator',\n\n\t\t\t'!': 'insert-actual-!-at-insertion-point-from-separator',\n\t\t\t'@': 'insert-actual-@-at-insertion-point-from-separator',\n\t\t\t'#': 'insert-actual-#-at-insertion-point-from-separator',\n\t\t\t'$': 'insert-actual-$-at-insertion-point-from-separator',\n\t\t\t'%': 'insert-actual-%-at-insertion-point-from-separator',\n\t\t\t'^': 'insert-actual-^-at-insertion-point-from-separator',\n\t\t\t'&': 'insert-actual-&-at-insertion-point-from-separator',\n\t\t\t'*': 'insert-actual-*-at-insertion-point-from-separator',\n\t\t\t'(': 'insert-actual-(-at-insertion-point-from-separator',\n\t\t\t')': 'insert-actual-)-at-insertion-point-from-separator',\n\t\t\t'[': 'insert-actual-[-at-insertion-point-from-separator',\n\t\t\t'{': 'insert-actual-{-at-insertion-point-from-separator',\n\t\t\t'<': 'insert-actual-<-at-insertion-point-from-separator',\n\t\t}\n\t}\n\n\tmemUsed() {\n\t\treturn super.memUsed() + heap.sizeSeparator();\n\t}\n}\n\nfunction constructSeparator(letter) {\n\tif (!heap.requestMem(heap.sizeSeparator())) {\n\t\tthrow constructFatalError(`OUT OF MEMORY: cannot allocate Separator.\nstats: ${heap.stats()}`)\n\t}\n\treturn heap.register(new Separator(letter));\n}\n\nexport { Separator, constructSeparator }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from './utils.js'\n\nimport { UNHANDLED_KEY } from './globalconstants.js';\nimport { systemState } from './systemstate.js';\nimport { BINDINGS } from './environment.js';\nimport { manipulator } from './manipulator.js';\nimport { actionFactory, enqueueAndPerformAction, undo, redo } from './actions.js'\nimport { evaluateAndKeep } from './evaluatorinterface.js';\nimport { experiments } from './globalappflags.js'\n\nclass KeyDispatcher {\n\tconstructor() {\n\t\tthis.nqmarks = 0;\n\t\tthis.uiCallbackObject = null;\n\t}\n\n\tsetUiCallbackObject(obj) {\n\t\tthis.uiCallbackObject = obj;\n\t}\n\n\tshouldBubble(keycode, whichkey, hasShift, hasCtrl, hasMeta, hasAlt) {\n\t\tlet eventName = this.getEventName(keycode, hasShift, hasCtrl, hasMeta, hasAlt, whichkey);\t\t\n\t\tif (eventName == 'Meta-+' || eventName == 'Meta--') {\n\t\t\treturn true;\n\t\t}\n\t\tif (hasMeta && (keycode == '2')) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\tdispatch(keycode, whichkey, hasShift, hasCtrl, hasMeta, hasAlt) {\n\t\t// don't need to do anything with modifier key presses directly, and having them go through the pipline\n\t\t// makes it hard to debug key presses.\n\t\t//\n\t\t// returning true means \"don't cancel browser event\" - this weirdly only affects the tests\n\t\tif (keycode == 'CapsLock') return;\n\t\tif (keycode == 'Shift') return;\n\t\tif (keycode == 'Alt') return;\n\t\tif (keycode == 'Meta') return;\n\t\tif (keycode == 'Control') return;\n\n\t\tif (hasMeta && (keycode == '2')) {\n\t\t\treturn;\n\t\t}\n\t\tlet eventName = this.getEventName(keycode, hasShift, hasCtrl, hasMeta, hasAlt, whichkey);\n\n\t\tif (systemState.getGlobalSelectedNode().usingEditor()) {\n\t\t\t// Will either return a keycode, or null.\n\t\t\t// if a keycode, we reroute that keycode (handle it below), else we exit.\n\t\t\t// if it returns null it means that the editor handled the key\n\t\t\t// usually it won't change the keycode, but it can.\n\n\t\t\teventName = this.doEditorEvent(eventName);\n\t\t\tif (eventName === null) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\n\t\t// there are a few special cases\n\t\tif (eventName == '|') {\n\t\t\t// vertical bar is unusable - 'internal use only'\n\t\t} else if (eventName == 'Meta-z') {\n\t\t\tundo();\n\t\t} else if (eventName == 'Meta-y') {\n\t\t\tredo();\n\t\t} else if (eventName == 'Meta-s') {\n\t\t\tlet rn = manipulator.doSave();\n\t\t\tif (rn) {\n\t\t\t\tevaluateAndKeep(rn)\n\t\t\t}\n\t\t} else if (eventName == 'Meta-x') {\n\t\t\tmanipulator.doCut();\n\t\t} else if (eventName == 'Meta-c') {\n\t\t\tmanipulator.doCopy();\n\t\t} else if (eventName == 'Meta-v') {\n\t\t\tmanipulator.doPaste();\n\t\t} else if (eventName == 'Escape' && !systemState.getGlobalSelectedNode().usingEditor()) {\n\t\t\tthis.toggleGlobalExplodedMode();\n\t\t} else {\n\t\t\t// 1. look in override table\n\t\t\t// 2. look in regular table\n\t\t\t// 3. call defaultHandle\n\t\t\t// otherwise try the table first, then the keyfunnel\n\t\t\tif (window.legacyEnterBehaviorForTests\n\t\t\t\t\t&& eventName == 'ShiftEnter'\n\t\t\t\t\t&& (\n\t\t\t\t\t\tsystemState.getGlobalSelectedNode().getNex().getTypeName() == '-command-'\n\t\t\t\t\t\t|| systemState.getGlobalSelectedNode().getNex().getTypeName() == '-symbol-'\n\t\t\t\t\t)) {\n\t\t\t\teventName = 'Enter';\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tlet sourceNode = systemState.getGlobalSelectedNode();\n\n\t\t\t\tlet actionName = this.getActionNameFromRegularTable(sourceNode, eventName);\n\t\t\t\tif (!actionName) {\n\t\t\t\t\tactionName = this.getActionNameFromGenericTable(sourceNode, eventName);\n\t\t\t\t}\n\t\t\t\tif (!actionName || actionName == 'JUST_USE_DEFAULT') {\n\t\t\t\t\tactionName = this.getDefaultHandleActionName(sourceNode, eventName);\n\t\t\t\t}\n\t\t\t\tif (actionName) {\n\t\t\t\t\t// we don't save the source node because it becomes irrelevant\n\t\t\t\t\t// if we undo and then redo\n\t\t\t\t\tlet action = actionFactory(actionName, eventName);\n\t\t\t\t\tenqueueAndPerformAction(action);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tif (e == UNHANDLED_KEY) {\n\t\t\t\t\tconsole.log(\"UNHANDLED KEY \" +\n\t\t\t\t\t\t\t\t\t':' + 'keycode=' + keycode +\n\t\t\t\t\t\t\t\t\t',' + 'whichkey=' + whichkey +\n\t\t\t\t\t\t\t\t\t',' + 'hasShift=' + hasShift +\n\t\t\t\t\t\t\t\t\t',' + 'hasCtrl=' + hasCtrl +\n\t\t\t\t\t\t\t\t\t',' + 'hasMeta=' + hasMeta);\n\t\t\t\t} else throw e;\n\t\t\t}\n\t\t}\n\t}\n\n\tgetActionNameFromRegularTable(sourceNode, eventName) {\n\t\tlet table = sourceNode.nex.getEventTable();\n\t\tif (!table) {\n\t\t\treturn '';\n\t\t}\n\t\tlet f = table[eventName];\n\t\tif (f) {\n\t\t\treturn f;\n\t\t}\n\t\treturn '';\n\t}\n\n\tgetActionNameFromGenericTable(sourceNode, eventName) {\n\t\tlet table = null;\n\t\tif (sourceNode.nex.isNexContainer()) {\n\t\t\ttable = this.getNexContainerGenericTable();\n\t\t} else {\n\t\t\ttable = this.getNexGenericTable();\n\t\t}\n\t\tlet f = table[eventName];\n\t\tif (f) {\n\t\t\treturn f;\n\t\t}\n\t\treturn '';\n\t}\n\n\tgetDefaultHandleActionName(sourceNode, eventName) {\n\t\tlet fname = 'standardDefault';\n\t\tif (sourceNode.nex.getDefaultHandler) {\n\t\t\tlet f = sourceNode.nex.getDefaultHandler();\n\t\t\tif (f) {\n\t\t\t\treturn f;\n\t\t\t}\n\t\t}\n\t\treturn '';\n\t}\n\n\tdoEditorEvent(eventName) {\n\t\t// events are handled differently when an editor is being used\n\t\t// all events are routed to the editor instead of the nex, until the editor\n\t\t// is finished.\n\t\t// right now we just have an editor for tags but we will need editors for\n\t\t// strings, symbols, commands/lambdas.\n\t\treturn systemState.getGlobalSelectedNode().routeKeyToCurrentEditor(eventName);\n\t}\n\n\tgetEventName(keycode, hasShift, hasCtrl, hasMeta, hasAlt, whichKey) {\n\t\tlet eventName = this.getEventNameImpl(keycode, hasShift, hasCtrl, hasMeta, hasAlt, whichKey);\n\t\teventName = eventName.replace(/^Ctrl/, 'Alt');\n\t\treturn eventName;\n\t}\n\n\n\tgetEventNameImpl(keycode, hasShift, hasCtrl, hasMeta, hasAlt, whichKey) {\n\t\t// maybe I should rewrite this to do something like this:\n\t\t// return `${shiftPrefix}${MetaPrefix}${keycode}`\n\t\t// the only thing is I don't want it to return 'Shift!' or 'Shift$'\n\t\tif (keycode == 'Enter' && hasMeta && hasShift) {\n\t\t\treturn 'ShiftMetaEnter';\n\t\t} else if (keycode == 'Enter' && hasMeta) {\n\t\t\treturn 'MetaEnter';\n\t\t} else if (keycode == 'Enter' && hasCtrl) {\n\t\t\treturn 'CtrlEnter';\n\t\t} else if (keycode == 'Enter' && hasShift) {\n\t\t\treturn 'ShiftEnter';\n\n\t\t} else if (keycode == 'ArrowDown' && hasAlt) {\n\t\t\treturn 'AltArrowDown';\n\t\t} else if (keycode == 'ArrowUp' && hasAlt) {\n\t\t\treturn 'AltArrowUp';\n\t\t} else if (keycode == 'ArrowRight' && hasAlt) {\n\t\t\treturn 'AltArrowRight';\n\t\t} else if (keycode == 'ArrowLeft' && hasAlt) {\n\t\t\treturn 'AltArrowLeft';\n\n\t\t} else if (keycode == 'ArrowDown' && hasCtrl) {\n\t\t\treturn 'CtrlArrowDown';\n\t\t} else if (keycode == 'ArrowUp' && hasCtrl) {\n\t\t\treturn 'CtrlArrowUp';\n\t\t} else if (keycode == 'ArrowRight' && hasCtrl) {\n\t\t\treturn 'CtrlArrowRight';\n\t\t} else if (keycode == 'ArrowLeft' && hasCtrl) {\n\t\t\treturn 'CtrlArrowLeft';\n\n\t\t} else if (keycode == 'ArrowDown' && hasShift) {\n\t\t\treturn 'ShiftArrowDown';\n\t\t} else if (keycode == 'ArrowUp' && hasShift) {\n\t\t\treturn 'ShiftArrowUp';\n\t\t} else if (keycode == 'ArrowRight' && hasShift) {\n\t\t\treturn 'ShiftArrowRight';\n\t\t} else if (keycode == 'ArrowLeft' && hasShift) {\n\t\t\treturn 'ShiftArrowLeft';\n\n\n\t\t} else if (keycode == 'Escape' && hasAlt && hasShift) {\n\t\t\treturn 'ShiftAltEscape';\n\t\t} else if (keycode == 'Escape' && hasAlt) {\n\t\t\treturn 'AltEscape';\n\t\t} else if (keycode == 'Escape' && hasShift) {\n\t\t\treturn 'ShiftEscape';\n\n\t\t} else if (keycode == 'Tab' && hasShift && hasAlt) {\n\t\t\treturn 'ShiftAltTab';\n\t\t} else if (keycode == 'Tab' && hasShift && hasCtrl) {\n\t\t\treturn 'ShiftCtrlTab';\n\t\t} else if (keycode == 'Tab' && hasAlt) {\n\t\t\treturn 'AltTab';\n\t\t} else if (keycode == 'Tab' && hasCtrl) {\n\t\t\treturn 'CtrlTab';\n\t\t} else if (keycode == 'Tab' && hasShift) {\n\t\t\treturn 'ShiftTab';\n\n\t\t} else if (keycode == ' ' && hasShift) {\n\t\t\treturn 'ShiftSpace';\n\t\t} else if (keycode == ' ' && hasCtrl) {\n\t\t\treturn 'CtrlSpace';\n\t\t} else if ((keycode == ' ' || whichKey == 'Space') && hasAlt) { // on a mac, option-space inserts ascii 160, non-breaking space\n\t\t\treturn 'AltSpace';\n\t\t} else if (keycode == ' ' && hasMeta) {\n\t\t\treturn 'MetaSpace';\n\n\t\t} else if (keycode == '`' && hasAlt && hasShift) {\n\t\t\treturn 'Alt~';\n\t\t} else if (keycode == 'Dead' && whichKey == 'Backquote' && hasAlt && !hasShift) {\n\t\t\treturn 'Alt`';\n\t\t} else if (whichKey == 'Digit6' && hasAlt && hasShift) {\n\t\t\treturn 'Alt^';\n\t\t} else if (whichKey == 'Digit7' && hasAlt && hasShift) {\n\t\t\treturn 'Alt&';\n\t\t} else if (whichKey == 'Digit8' && hasAlt && hasShift) {\n\t\t\treturn 'Alt*';\n\t\t} else if (whichKey == 'Digit9' && hasAlt && hasShift) {\n\t\t\treturn 'Alt(';\n\t\t} else if (whichKey == 'Comma' && hasAlt && hasShift) {\n\t\t\treturn 'Alt<';\n\t\t} else if (whichKey == 'BracketLeft' && hasAlt && !hasShift) {\n\t\t\treturn 'Alt[';\n\t\t} else if (whichKey == 'BracketLeft' && hasAlt && hasShift) {\n\t\t\treturn 'Alt{';\n\t\t} else if (keycode == '`' && hasCtrl && hasShift) {\n\t\t\treturn 'Ctrl~';\n\t\t} else if (keycode == 'Dead' && whichKey == 'Backquote' && hasCtrl && !hasShift) {\n\t\t\treturn 'Ctrl`';\n\t\t} else if (whichKey == 'Digit7' && hasCtrl && hasShift) {\n\t\t\treturn 'Ctrl&';\n\t\t} else if (whichKey == 'Digit8' && hasCtrl && hasShift) {\n\t\t\treturn 'Ctrl*';\n\t\t} else if (whichKey == 'Digit9' && hasCtrl && hasShift) {\n\t\t\treturn 'Ctrl(';\n\t\t} else if (whichKey == 'Digit0' && hasCtrl && hasShift) {\n\t\t\treturn 'Ctrl)';\n\t\t} else if (whichKey == 'BracketLeft' && hasCtrl && !hasShift) {\n\t\t\treturn 'Ctrl[';\n\t\t} else if (whichKey == 'BracketLeft' && hasCtrl && hasShift) {\n\t\t\treturn 'Ctrl{';\n\n\t\t} else if (keycode == 'Backspace' && hasShift && hasAlt) {\n\t\t\treturn 'AltShiftBackspace';\n\t\t} else if (keycode == 'Backspace' && hasShift && hasCtrl) {\n\t\t\treturn 'CtrlShiftBackspace';\n\t\t} else if (keycode == 'Backspace' && hasShift) {\n\t\t\treturn 'ShiftBackspace';\n\t\t} else if (keycode == 'Backspace' && hasCtrl) {\n\t\t\treturn 'CtrlBackspace';\n\t\t} else if (keycode == 'Backspace' && hasAlt) {\n\t\t\treturn 'AltBackspace';\n\n\t\t} else if (keycode == 'z' && hasCtrl) {\n\t\t\treturn 'Meta-z';\n\t\t} else if (keycode == 'x' && hasCtrl) {\n\t\t\treturn 'Meta-x';\n\t\t} else if (keycode == 'c' && hasCtrl) {\n\t\t\treturn 'Meta-c';\n\t\t} else if (keycode == 'v' && hasCtrl) {\n\t\t\treturn 'Meta-v';\n\t\t} else if (keycode == 's' && hasCtrl) {\n\t\t\treturn 'Meta-s';\n\n\t\t} else if (keycode == 'z' && hasMeta) {\n\t\t\treturn 'Meta-z';\n\t\t} else if (keycode == 'x' && hasMeta) {\n\t\t\treturn 'Meta-x';\n\t\t} else if (keycode == 'c' && hasMeta) {\n\t\t\treturn 'Meta-c';\n\t\t} else if (keycode == 'v' && hasMeta) {\n\t\t\treturn 'Meta-v';\n\t\t} else if (keycode == 'y' && hasMeta) {\n\t\t\treturn 'Meta-y';\n\t\t} else if (keycode == 's' && hasMeta) {\n\t\t\treturn 'Meta-s';\n\t\t} else if (keycode == '=' && hasMeta) {\n\t\t\treturn 'Meta-+';\n\t\t} else if (keycode == '-' && hasMeta) {\n\t\t\treturn 'Meta--';\n\t\t} else {\n\t\t\treturn keycode;\n\t\t}\n\t}\n\n\ttoggleGlobalExplodedMode() {\n\t\tlet root = systemState.getRoot();\n\t\tthis.uiCallbackObject.setExplodedState(root.isExploded())\n\t\troot.toggleRenderMode();\n\t}\n\n\tgetNexContainerGenericTable() {\n\t\treturn {\n\t\t\t'ShiftTab': 'select-parent',\n\t\t\t'Tab': 'select-first-child-or-force-insert-inside-insertion-mode',\n\n\t\t\t'ArrowUp': 'move-left-up',\n\t\t\t'ArrowLeft': 'move-left-up',\n\t\t\t'ArrowDown': 'move-right-down',\n\t\t\t'ArrowRight': 'move-right-down',\n\n\t\t\t'AltArrowUp': 'force-insert-before',\n\t\t\t'AltArrowDown': 'force-insert-after',\n\t\t\t'AltArrowLeft': 'force-insert-before',\n\t\t\t'AltArrowRight': 'force-insert-after',\n\n\t\t\t'AltTab': 'force-insert-inside',\n\t\t\t'ShiftAltTab': 'force-insert-around',\n\n\t\t\t'ShiftEnter': 'evaluate-nex-and-keep',\n\t\t\t'Enter': 'evaluate-nex',\n\n\t\t\t'ShiftSpace': 'toggle-dir',\n\n\t\t\t'ShiftBackspace': 'remove-selected-and-select-previous-sibling',\n\t\t\t'AltShiftBackspace': 'unroll',\n\n\n\t\t\t'LastBackspace': 'remove-selected-and-select-previous-sibling-if-empty',\n\n\t\t\t'Backspace': 'start-main-editor',\n\n\t\t\t'AltBackspace': 'start-main-editor',\n\n\t\t\t'ShiftEscape': 'toggle-exploded',\n\n\t\t\t'AltEnter': 'start-main-editor',\n\n\t\t\t'~': 'insert-command-at-insertion-point',\n\t\t\t'!': 'insert-bool-at-insertion-point',\n\t\t\t'@': 'insert-symbol-at-insertion-point',\n\t\t\t'#': 'insert-integer-at-insertion-point',\n\t\t\t'$': 'insert-string-at-insertion-point',\n\t\t\t'%': 'insert-float-at-insertion-point',\n\t\t\t'^': 'insert-instantiator-at-insertion-point',\n\t\t\t'&': 'insert-lambda-at-insertion-point',\n\t\t\t'*': 'insert-deferredcommand-at-insertion-point',\n\t\t\t'(': 'insert-org-at-insertion-point',\n\t\t\t'[': 'insert-line-at-insertion-point',\n\t\t\t'{': 'insert-doc-at-insertion-point',\n\t\t\t'<': 'insert-word-at-insertion-point',\n\t\t\t'_': 'insert-wavetable-at-insertion-point',\n\n\t\t\t')': 'close-off-org',\n\t\t\t']': 'close-off-line',\n\t\t\t'}': 'close-off-doc',\n\t\t\t'>': 'close-off-word',\n\t\t\t'`': 'add-tag',\n\n\t\t\t'\\\\': 'toggle-collapsed',\n\n\n\t\t\t'Alt~': 'wrap-in-command',\n\t\t\t'Alt&': 'wrap-in-lambda',\n\t\t\t'Alt*': 'wrap-in-deferredcommand',\n\t\t\t'Alt<': 'wrap-in-word',\n\t\t\t'Alt(': 'wrap-in-org',\n\t\t\t'Alt[': 'wrap-in-line',\n\t\t\t'Alt{': 'wrap-in-doc',\n\t\t\t'Alt^': 'wrap-in-instantiator',\n\t\t};\t\t\t\n\t}\n\n\tgetNexGenericTable() {\n\t\treturn {\n\t\t\t'ShiftTab': 'select-parent',\n\t\t\t'Tab': 'move-right-down',\n\n\t\t\t'ArrowUp': 'move-left-up',\n\t\t\t'ArrowDown': 'move-right-down',\n\t\t\t'ArrowLeft': 'move-left-up',\n\t\t\t'ArrowRight': 'move-right-down',\n\n\t\t\t'AltArrowUp': 'force-insert-before' ,\n\t\t\t'AltArrowDown': 'force-insert-after',\n\t\t\t'AltArrowLeft': 'force-insert-before',\n\t\t\t'AltArrowRight': 'force-insert-after',\n\n\t\t\t'ShiftAltTab': 'force-insert-around' ,\n\n\t\t\t'ShiftBackspace': 'remove-selected-and-select-previous-sibling',\n\t\t\t'LastBackspace': 'remove-selected-and-select-previous-sibling',\n\n\t\t\t'Backspace': 'start-main-editor',\n\n\t\t\t'AltBackspace': 'start-main-editor',\n\n\t\t\t'ShiftEscape': 'toggle-exploded',\n\n\t\t\t'AltEnter': 'start-main-editor',\n\n\t\t\t'ShiftEscape': 'toggle-exploded',\n\t\t\t'Enter': 'evaluate-nex',\n\t\t\t'~': 'insert-command-at-insertion-point',\n\t\t\t'!': 'insert-bool-at-insertion-point',\n\t\t\t'@': 'insert-symbol-at-insertion-point',\n\t\t\t'#': 'insert-integer-at-insertion-point',\n\t\t\t'$': 'insert-string-at-insertion-point',\n\t\t\t'%': 'insert-float-at-insertion-point',\n\t\t\t'^': 'insert-instantiator-at-insertion-point',\n\t\t\t'&': 'insert-lambda-at-insertion-point',\n\t\t\t'*': 'insert-deferredcommand-at-insertion-point',\n\n\t\t\t'(': 'insert-org-at-insertion-point',\n\t\t\t')': 'close-off-org',\n\t\t\t'[': 'insert-line-at-insertion-point',\n\t\t\t']': 'close-off-line',\n\t\t\t'{': 'insert-doc-at-insertion-point',\n\t\t\t'}': 'close-off-doc',\n\t\t\t'<': 'insert-word-at-insertion-point',\n\t\t\t'>': 'close-off-word',\n\n\t\t\t'_': 'insert-wavetable-at-insertion-point',\n\n\t\t\t'`': 'add-tag',\n\t\t\t'Alt~': 'wrap-in-command',\n\t\t\t'Alt&': 'wrap-in-lambda',\n\t\t\t'Alt*': 'wrap-in-deferredcommand',\n\t\t\t'Alt<': 'wrap-in-word',\n\t\t\t'Alt(': 'wrap-in-org',\n\t\t\t'Alt[': 'wrap-in-line',\n\t\t\t'Alt{': 'wrap-in-doc',\n\t\t\t'Alt^': 'wrap-in-instantiator'\n\t\t};\n\t}\n}\n\nconst keyDispatcher = new KeyDispatcher();\n\nexport {\n\tkeyDispatcher\n}\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { systemState } from './systemstate.js';\nimport { KeyResponseFunctions, DefaultHandlers } from './keyresponsefunctions.js';\nimport { manipulator } from './manipulator.js';\nimport { constructWarning } from './nex/eerror.js';\n\nconst levelsOfUndo = 100;\n\nconst actionStack = [];\n\nlet nextPosition = 0;\nlet queueBottom = 0;\nlet queueTop = 0;\nlet numItemsInQueue = 0;\n\nfunction advance(queuePos) {\n\treturn (queuePos + 1) % levelsOfUndo;\n}\n\nfunction retreat(queuePos) {\n\tlet p = queuePos - 1;\n\tif (p < 0) {\n\t\treturn p + levelsOfUndo;\n\t} else {\n\t\treturn p;\n\t}\n}\n\nfunction enqueueAndPerformAction(action) {\n\tactionStack[nextPosition] = action;\n\tif (nextPosition == queueTop) {\n\t\tqueueTop = advance(queueTop);\n\t\tnextPosition = advance(nextPosition);\n\t\tif (numItemsInQueue == levelsOfUndo) {\n\t\t\tqueueBottom = advance(queueBottom);\n\t\t} else {\n\t\t\tnumItemsInQueue++;\n\t\t}\n\t} else {\n\t\tnextPosition = advance(nextPosition);\n\t}\n\taction.doAction();\n}\n\n\nfunction redo() {\n\tif (nextPosition != queueTop) {\n\t\tactionStack[nextPosition].doAction();\n\t\tnextPosition = advance(nextPosition);\n\t} else {\n\t\tconsole.log('cannot redo');\n\t}\n}\n\nfunction undo() {\n\tlet pos = retreat(nextPosition);\n\tif (actionStack[pos].canUndo()) {\n\t\tnextPosition = pos;\n\t\tactionStack[nextPosition].undoAction();\n\t} else {\n\t\tconsole.log('cannot undo');\n\t}\n}\n\nclass Action {\n\tconstructor(actionName) {\n\t\tthis.actionName = actionName;\n\t}\n\n\tcanUndo() {};\n\tdoAction() {};\n\tundoAction() {};\n}\n\n\n// it doesn't matter what node was selected when the action was created,\n// what matters is what is the currently selected node.\n// If you want to undo and then redo, by the time you are redoing something,\n// the selected node will be different - so we don't save the source node\n// that generated the action.\n\nclass NoOpAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t}\n\n\tundoAction() {\n\t}\n}\n\n\nclass TagEditorContentChangeAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tlet selectedNode = systemState.getGlobalSelectedNode();\n\t\tlet fakeEditor = selectedNode.getTagEditorForType(selectedNode.nex);\n\t\tthis.savedEditorData = fakeEditor.getStateForUndo();\n\t\tKeyResponseFunctions[this.actionName](selectedNode);\n\t}\n\n\tundoAction() {\n\t\tlet selectedNode = systemState.getGlobalSelectedNode();\n\t\tlet fakeEditor = selectedNode.getTagEditorForType(selectedNode.nex);\n\t\tfakeEditor.setStateForUndo(this.savedEditorData);\n\t}\n}\n\nclass EditorContentChangeAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tlet selectedNode = systemState.getGlobalSelectedNode();\n\t\tlet fakeEditor = selectedNode.getEditorForType(selectedNode.nex);\n\t\tthis.savedEditorData = fakeEditor.getStateForUndo();\n\t\tKeyResponseFunctions[this.actionName](selectedNode);\n\t}\n\n\tundoAction() {\n\t\t// if you don't save the node, here's how this can break:\n\t\t// exiting the editor changes what node is selected\n\t\t// then you try to undo, and the correct thing isn't selected.\n\t\tlet selectedNode = systemState.getGlobalSelectedNode();\n\t\tlet fakeEditor = selectedNode.getEditorForType(selectedNode.nex);\n\t\tfakeEditor.setStateForUndo(this.savedEditorData);\n\t}\n}\n\nclass UnrollAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tthis.savedContainer = systemState.getGlobalSelectedNode();\n\t\tthis.allSavedChildren = [];\n\t\tfor (let i = 0; i < this.savedContainer.numChildren(); i++) {\n\t\t\tthis.allSavedChildren.push(this.savedContainer.getChildAt(i));\n\t\t}\n\t\tthis.parentOfContainer = this.savedContainer.getParent();\n\t\tthis.index = this.parentOfContainer.getIndexOfChild(this.savedContainer);\n\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t}\n\n\tundoAction() {\n\t\tthis.parentOfContainer.removeChildAt(this.index);\n\t\tfor (let i = 0; i < this.allSavedChildren.length; i++) {\n\t\t\tthis.savedContainer.appendChild(this.allSavedChildren[i]);\n\t\t}\n\t\tthis.parentOfContainer.insertChildAt(this.savedContainer, this.index);\n\t\tthis.savedContainer.setSelected();\n\t}\n}\n\nclass WrapInNewParentNodeAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tthis.savedChildNode = systemState.getGlobalSelectedNode();\n\t\tthis.savedInsertionMode = this.savedChildNode.getInsertionMode();\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t\tthis.newNode = manipulator.getMostRecentInsertedRenderNode();\n\n\t\tif (this.editorDataSavedForRedo) {\n\t\t\tlet fakeEditor = this.newNode.getEditorForType(this.newNode.nex);\n\t\t\tfakeEditor.setStateForUndo(this.editorDataSavedForRedo);\n\t\t}\n\t}\n\n\tundoAction() {\n\n\t\tlet fakeEditor = this.newNode.getEditorForType(this.newNode.nex);\n\t\tif (fakeEditor) {\n\t\t\tthis.editorDataSavedForRedo = fakeEditor.getStateForUndo();\n\t\t} else {\n\t\t\tthis.editorDataSavedForRedo = null;\n\t\t}\n\n\t\tlet p = this.newNode.getParent();\n\t\tlet index = p.getIndexOfChild(this.newNode);\n\t\tmanipulator.removeNex(this.newNode);\n\t\tp.insertChildAt(this.savedChildNode, index);\n\t\tthis.savedChildNode.setInsertionMode(this.savedInsertionMode);\n\t\tthis.savedChildNode.setSelected();\n\t}\n}\n\n\nclass InsertNewChildNodeAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tthis.savedSelectedNode = systemState.getGlobalSelectedNode();\n\t\tthis.savedInsertionMode = systemState.getGlobalSelectedNode().getInsertionMode();\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t\tthis.newNode = manipulator.getMostRecentInsertedRenderNode();\n\n\t\tif (this.editorDataSavedForRedo) {\n\t\t\tlet fakeEditor = this.newNode.getEditorForType(this.newNode.nex);\n\t\t\tfakeEditor.setStateForUndo(this.editorDataSavedForRedo);\n\t\t}\n\t}\n\n\tundoAction() {\n\t\t// okay so someone inserted a node and could have also edited it in the same step.\n\t\t// so when we undo we need to potentially save the state\n\t\t// so if we redo, we can restore it\n\n\t\tlet fakeEditor = this.newNode.getEditorForType(this.newNode.nex);\n\t\tif (fakeEditor) {\n\t\t\tthis.editorDataSavedForRedo = fakeEditor.getStateForUndo();\n\t\t} else {\n\t\t\tthis.editorDataSavedForRedo = null;\n\t\t}\n\n\t\tmanipulator.removeNex(this.newNode);\n\t\tthis.savedSelectedNode.setSelected();\n\t\tthis.savedSelectedNode.setInsertionMode(this.savedInsertionMode);\n\t}\n}\n\n\nclass ChangeDirectionAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tthis.savedSelectedNode = systemState.getGlobalSelectedNode();\n\t\tthis.savedDir = this.savedSelectedNode.nex.getDir();\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t}\n\n\tundoAction() {\n\t\tthis.savedSelectedNode.nex.setDir(this.savedDir);\n\t}\n}\n\nclass ChangeSelectedNodeAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tthis.savedSelectedNode = systemState.getGlobalSelectedNode();\n\t\tthis.savedInsertionMode = systemState.getGlobalSelectedNode().getInsertionMode();\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t}\n\n\tundoAction() {\n\t\tthis.savedSelectedNode.setSelected();\n\t\tthis.savedSelectedNode.setInsertionMode(this.savedInsertionMode);\n\t}\n}\n\nclass LegacyKeyResponseFunctionAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\tconsole.log('attempting to undo ' + this.actionName);\n\t\treturn false;\n\t}\n\n\tdoAction() {\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t}\n\n\tundoAction() {\n\t\tconsole.log('cannot undo this action');\n\t}\n}\n\n// For things that can be performed but not undone or redone\n// example: auditioning a wavetable\nclass TriviallyUndoableKeyResponseFunctionAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t\tthis.hasBeenDone = false;\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tif (!this.hasBeenDone) {\n\t\t\tthis.hasBeenDone = true;\n\t\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t\t}\n\t}\n\n\tundoAction() {\n\t\t// no op\n\t}\n}\n\n\nclass DeleteNexAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tthis.savedNodeToRestore = systemState.getGlobalSelectedNode();\n\t\tthis.parentOfNodeWeAreDeleting = this.savedNodeToRestore.getParent();\n\t\tthis.index = this.parentOfNodeWeAreDeleting.getIndexOfChild(this.savedNodeToRestore);\n\t\tthis.savedInsertionMode = this.savedNodeToRestore.getInsertionMode();\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t}\n\n\tundoAction() {\n\t\tthis.parentOfNodeWeAreDeleting.insertChildAt(this.savedNodeToRestore, this.index);\n\t\tthis.savedNodeToRestore.setSelected();\n\t\tthis.savedNodeToRestore.setInsertionMode(this.savedInsertionMode);\n\t}\n}\n\nclass EvaluateAndReplaceAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tthis.nodeBeingEvaluated = systemState.getGlobalSelectedNode();\n\t\tthis.parentOfNodeBeingEvaluated = this.nodeBeingEvaluated.getParent();\n\t\tthis.index = this.parentOfNodeBeingEvaluated.getIndexOfChild(this.nodeBeingEvaluated);\n\t\tthis.savedInsertionMode = this.nodeBeingEvaluated.getInsertionMode();\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t}\n\n\tundoAction() {\n\t\tlet evaluationResult = systemState.getGlobalSelectedNode();\n\t\tmanipulator.removeAndSelectPreviousSibling(evaluationResult);\n\n\t\tthis.parentOfNodeBeingEvaluated.insertChildAt(this.nodeBeingEvaluated, this.index);\n\t\tthis.nodeBeingEvaluated.setSelected();\n\t\tthis.nodeBeingEvaluated.setInsertionMode(this.savedInsertionMode);\n\n\t\tlet ee = constructWarning(\"Warning: undoing code evaluation does not undo side effects.\");\n\t\tthis.parentOfNodeBeingEvaluated.insertChildBefore(ee, this.nodeBeingEvaluated);\n\t}\n}\n\n\nclass EvaluateInPlaceAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tthis.nodeBeingEvaluated = systemState.getGlobalSelectedNode();\n\t\tthis.parentOfNodeBeingEvaluated = this.nodeBeingEvaluated.getParent();\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t}\n\n\tundoAction() {\n\t\tlet ee = constructWarning(\"Warning: undoing code evaluation does not undo side effects.\")\n\t\tthis.parentOfNodeBeingEvaluated.insertChildBefore(ee, this.nodeBeingEvaluated);\n\t}\n}\n\n\nclass ChangeRenderModeAction extends Action {\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tthis.savedRenderMode = systemState.getGlobalSelectedNode().getRenderMode();\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t}\n\n\tundoAction() {\n\t\tsystemState.getGlobalSelectedNode().setRenderMode(this.savedRenderMode);\n\t}\n}\n\nclass LineBreakAction extends Action {\n\t// basically to delete a line break.\n\t// If the line break was \"do-line-break-for-letter\"\n\t// then we do one of these three to undo:\n\t//   delete-letter, delete-separator, or delete-line\n\t// if it was \"do-line-break-for-separator\"\n\t//   delete-separator or delete-line\n\t// otherwise if it was do-line-break-for-line\n\t//.  delete-line\n\t// and you can just look at what is selected now basically\n\tconstructor(actionName) {\n\t\tsuper(actionName);\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tKeyResponseFunctions[this.actionName](systemState.getGlobalSelectedNode());\n\t}\n\n\tundoAction() {\n\t\tmanipulator.deleteAnyLineBreak();\n\t}\n}\n\nclass DefaultHandlerAction extends Action {\n\tconstructor(actionName, eventName) {\n\t\tsuper(actionName);\n\t\tthis.eventName = eventName;\n\t}\n\n\tcanUndo() {\n\t\treturn true;\n\t}\n\n\tdoAction() {\n\t\tthis.savedSelectedNode = systemState.getGlobalSelectedNode();\n\t\tthis.savedInsertionMode = systemState.getGlobalSelectedNode().getInsertionMode();\n\n\t\tlet handler = DefaultHandlers[this.actionName];\n\t\tlet result = handler(systemState.getGlobalSelectedNode(), this.eventName);\n\n\t\tif (result.inserted) {\n\t\t\tthis.newNode = result.inserted;\n\n\t\t\tif (this.editorDataSavedForRedo) {\n\t\t\t\tlet fakeEditor = this.newNode.getEditorForType(this.newNode.nex);\n\t\t\t\tfakeEditor.setStateForUndo(this.editorDataSavedForRedo);\n\t\t\t}\n\t\t}\n\t}\n\n\tundoAction() {\n\t\t// okay so someone inserted a node and could have also edited it in the same step.\n\t\t// so when we undo we need to potentially save the state\n\t\t// so if we redo, we can restore it\n\n\t\tif (this.newNode) {\n\t\t\t// then it was successful\n\t\t\tlet fakeEditor = this.newNode.getEditorForType(this.newNode.nex);\n\t\t\tif (fakeEditor) {\n\t\t\t\tthis.editorDataSavedForRedo = fakeEditor.getStateForUndo();\n\t\t\t} else {\n\t\t\t\tthis.editorDataSavedForRedo = null;\n\t\t\t}\n\n\t\t\tmanipulator.removeNex(this.newNode);\n\t\t\tthis.savedSelectedNode.setSelected();\n\t\t\tthis.savedSelectedNode.setInsertionMode(this.savedInsertionMode);\n\t\t}\n\t}\n}\n\n\nclass LegacyDefaultHandlerAction extends Action {\n\tconstructor(actionName, eventName) {\n\t\tsuper(actionName);\n\t\tthis.eventName = eventName;\n\t}\n\n\tcanUndo() {\n\t\tconsole.log('attempting to undo ' + this.actionName);\n\t\tconsole.log('eventName ' + this.eventName);\n\t\treturn false;\n\t}\n\n\tdoAction() {\n\t\tlet handler = DefaultHandlers[this.actionName];\n\t\treturn handler(systemState.getGlobalSelectedNode(), this.eventName);\n\t}\n\n\tundoAction() {\n\t\tconsole.log('cannot undo this action');\n\t}\n}\n\n\nfunction actionFactory(actionName, eventName) {\n\tswitch(actionName) {\n\t\tcase 'do-nothing':\n\t\t\treturn new NoOpAction(actionName);\n \t\tcase 'audition-wave':\n\t\t\treturn new TriviallyUndoableKeyResponseFunctionAction(actionName);\n\t\tcase 'move-left-up':\n\t\tcase 'move-right-down':\n\t\tcase 'select-parent':\n\t\tcase 'select-first-child-or-force-insert-inside-insertion-mode':\n\t\tcase 'close-off-doc':\n\t\tcase 'close-off-line':\n\t\tcase 'close-off-org':\n\t\tcase 'close-off-word':\n\t\tcase 'force-insert-after':\n\t\tcase 'force-insert-around':\n\t\tcase 'force-insert-before':\n\t\tcase 'force-insert-inside':\n\t\tcase 'move-to-corresponding-letter-in-next-line':\n\t\tcase 'move-to-corresponding-letter-in-previous-line':\n\t\tcase 'move-to-next-leaf':\n\t\tcase 'move-to-previous-leaf':\n\t\tcase 'move-right-for-line':\n\t\tcase 'move-left-for-line':\n\t\tcase 'move-up-for-line':\n\t\tcase 'move-down-for-line':\n\t\t\treturn new ChangeSelectedNodeAction(actionName);\n\t\tcase 'toggle-dir':\n\t\t\treturn new ChangeDirectionAction(actionName);\n\n\t\tcase 'insert-command-at-insertion-point':\n\t\tcase 'insert-bool-at-insertion-point':\n\t\tcase 'insert-symbol-at-insertion-point':\n\t\tcase 'insert-integer-at-insertion-point':\n\t\tcase 'insert-string-at-insertion-point':\n\t\tcase 'insert-float-at-insertion-point':\n\t\tcase 'insert-instantiator-at-insertion-point':\n\t\tcase 'insert-lambda-at-insertion-point':\n\t\tcase 'insert-deferredcommand-at-insertion-point':\n\t\tcase 'insert-org-at-insertion-point':\n\t\tcase 'insert-line-at-insertion-point':\n\t\tcase 'insert-doc-at-insertion-point':\n\t\tcase 'insert-word-at-insertion-point':\n\t\tcase 'insert-wavetable-at-insertion-point':\n\t\t\treturn new InsertNewChildNodeAction(actionName);\n\n\t\tcase 'remove-selected-and-select-previous-sibling':\n\t\tcase 'delete-letter':\n\t\tcase 'delete-line':\n\t\tcase 'delete-separator':\n\t\tcase 'remove-selected-and-select-previous-sibling-if-empty':\n\t\tcase 'call-delete-handler-then-remove-selected-and-select-previous-sibling':\n\t\t\treturn new DeleteNexAction(actionName);\n\n\t\tcase 'evaluate-nex':\n\t\t\treturn new EvaluateAndReplaceAction(actionName);\n\n\t\tcase 'start-main-editor':\n\t\tcase 'autocomplete':\n\t\t\treturn new EditorContentChangeAction(actionName);\n\n\t\tcase 'add-tag':\n\t\t\treturn new TagEditorContentChangeAction(actionName);\n\n\t\tcase 'evaluate-nex-and-keep':\n\t\t\treturn new EvaluateInPlaceAction(actionName);\n\n\t\tcase 'wrap-in-command':\n\t\tcase 'wrap-in-doc':\n\t\tcase 'wrap-in-deferredcommand':\n\t\tcase 'wrap-in-instantiator':\n\t\tcase 'wrap-in-lambda':\n\t\tcase 'wrap-in-line':\n\t\tcase 'wrap-in-org':\n\t\tcase 'wrap-in-word':\n\t\t\treturn new WrapInNewParentNodeAction(actionName);\n\n \t\tcase 'standardDefault':\n\t\tcase 'letterDefault':\n\t\tcase 'separatorDefault':\n\t\tcase 'wordDefault':\n\t\tcase 'lineDefault':\n\t\tcase 'docDefault':\n \t\t\treturn new DefaultHandlerAction(actionName, eventName);\n\n \t\tcase 'toggle-exploded':\n \t\t\treturn new ChangeRenderModeAction(actionName);\n\n\t\tcase 'do-line-break-for-letter':\n\t\tcase 'do-line-break-for-separator':\n\t\tcase 'do-line-break-or-eval':\n\t\t\treturn new LineBreakAction(actionName);\n\n\t\t// Legacy ones below, these can't be undone\n\n\t\tcase 'unroll':\n\t\t\treturn new UnrollAction(actionName);\n\n\t\t// in case I missed any?\n\n\t\tdefault:\n\t\t\treturn new LegacyKeyResponseFunctionAction(actionName);\n\t}\n\n}\n\n\n\nexport { actionFactory, enqueueAndPerformAction, undo, redo }","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from './utils.js';\n\nimport { systemState } from './systemstate.js'\nimport { Nex } from './nex/nex.js'; \nimport { NexContainer } from './nex/nexcontainer.js'; \nimport { ValueNex } from './nex/valuenex.js'; \nimport { Bool } from './nex/bool.js'; \nimport { Builtin } from './nex/builtin.js'; \nimport { Closure } from './nex/closure.js'; \nimport { Wavetable } from './nex/wavetable.js'; \nimport { Command } from './nex/command.js'; \nimport { Doc } from './nex/doc.js'; \nimport { EError } from './nex/eerror.js'; \nimport { EString } from './nex/estring.js'; \nimport { ESymbol } from './nex/esymbol.js'; \nimport { Float } from './nex/float.js'; \nimport { Integer } from './nex/integer.js'; \nimport { Lambda } from './nex/lambda.js'; \nimport { Letter } from './nex/letter.js'; \nimport { Line } from './nex/line.js'; \nimport { Nil } from './nex/nil.js'; \nimport { Org } from './nex/org.js'; \nimport { Root } from './nex/root.js'; \nimport { Separator } from './nex/separator.js'; \nimport { Word } from './nex/word.js'; \nimport { ContextType } from './contexttype.js'\nimport { manipulator } from './manipulator.js'\nimport { RenderNode } from './rendernode.js'; \nimport { evaluateAndReplace, evaluateAndKeep, evaluateAndCopy } from './evaluatorinterface.js';\nimport { UNHANDLED_KEY } from './globalconstants.js'\nimport { experiments } from './globalappflags.js'\n\nimport {\n\tINSERT_UNSPECIFIED,\n\tINSERT_AFTER,\n\tINSERT_BEFORE,\n\tINSERT_INSIDE,\n\tINSERT_AROUND\n} from './rendernode.js'\n\n\n\n// All of these are to some extent deprecated:\n// to be replaced with editors or more generic handlers.\n// Return the string of the function you want from getDefaultHandler.\n// Part of my motive for collecting this here is so I can see\n// the similarities and differences and try to refactor this better:\n// there is too much similarity across all the different nexes\n// w/r/t how these work.\n\n// 8/8/2020 another good reason to have these here is to get rid of\n// circular dependencies arising from Nex modules depending directly\n// on Manipulator\n\n\n\nconst DefaultHandlers = {\n\n\t'standardDefault': function(node, txt) {\n\t\tlet nex = node.nex;\n\t\tlet canBe = Utils.figureOutWhatItCanBe(txt);\n\n\t\tif (canBe.integer) {\n\t\t\tlet newNode = manipulator.newIntegerWithValue(txt);\n\t\t\tmanipulator.insertAtSelectedObjInsertionPoint(newNode);\n\t\t\treturn {\n\t\t\t\tinserted: newNode\n\t\t\t};\n\t\t} else if (canBe.command) {\n\t\t\tlet newNode = manipulator.newCommandWithText(txt);\n\t\t\tmanipulator.insertAtSelectedObjInsertionPoint(newNode);\n\t\t\treturn {\n\t\t\t\tinserted: newNode\n\t\t\t};\n\t\t} else {\n\t\t\treturn {\n\t\t\t};\n\t\t}\n\t},\n\n\t'letterDefault': function(node, txt) {\n\t\tlet nex = node.nex;\n\t\tlet context = manipulator.getContextForNode(node);\n\t\tlet inWord = (context == ContextType.WORD || context == ContextType.IMMUTABLE_WORD);\n\t\tif (!(/^.$/.test(txt))) {\n\t\t\tthrow UNHANDLED_KEY;\n\t\t};\n\t\tlet letterRegex = /^[a-zA-Z0-9']$/;\n\t\tlet isSeparator = !letterRegex.test(txt);\n\t\tlet newNode = null;\n\t\tif (isSeparator) {\n\t\t\tnewNode = manipulator.newSeparator(txt);\n\t\t\tif (inWord) {\n\t\t\t\tmanipulator.insertSeparatorBeforeOrAfterSelectedLetter(newNode);\n\t\t\t} else {\n\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode);\t\t\t\t\n\t\t\t}\n\t\t} else {\n\t\t\tnewNode = manipulator.newLetter(txt);\n\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode);\n\t\t}\n\t\treturn {\n\t\t\tinserted: newNode \n\t\t};\n\t},\n\n\t'separatorDefault': function(node, txt) {\n\t\tlet nex = node.nex;\n\t\tlet context = manipulator.getContextForNode(node);\n\t\tlet isLine = (context == ContextType.LINE || context == ContextType.IMMUTABLE_LINE)\n\t\tif (!(/^.$/.test(txt))) {\n\t\t\tthrow UNHANDLED_KEY;\n\t\t};\n\t\tlet letterRegex = /^[a-zA-Z0-9']$/;\n\t\tlet isSeparator = !letterRegex.test(txt);\n\n\t\tlet newNode = null;\n\n\t\tif (isSeparator) {\n\t\t\tnewNode = manipulator.newSeparator(txt);\n\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode);\n\t\t} else {\n\t\t\tif (isLine) {\n\t\t\t\t// special case - when user is typing into a doc, we want to preserve the general\n\t\t\t\t// mutability of the surroundings even if we are inserting new things.\n\t\t\t\t\n\t\t\t\tlet newword = manipulator.newWord();\n\t\t\t\tif (context == ContextType.IMMUTABLE_LINE) {\n\t\t\t\t\tnewword.getNex().setMutable(false);\n\t\t\t\t}\n\t\t\t\tlet newletter = manipulator.newLetter(txt);\n\t\t\t\tnewword.appendChild(newletter);\n\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newword);\n\t\t\t\tlet didJoin = manipulator.joinToSiblingIfSame(newword);\n\t\t\t\t// if we performed a join, then when undoing this action, we want to\n\t\t\t\t// delete the letter that was joined in, not the whole word.\n\t\t\t\t// otherwise, we do want to delete the whole word\n\t\t\t\tif (didJoin) {\n\t\t\t\t\tnewNode = newletter;\n\t\t\t\t} else {\n\t\t\t\t\tnewNode = newword;\n\t\t\t\t}\n\t\t\t\tnewletter.setSelected();\n\t\t\t} else {\n\t\t\t\tnewNode = manipulator.newLetter(txt);\n\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode);\n\t\t\t}\n\t\t}\n\t\treturn {\n\t\t\tinserted: newNode \n\t\t};\n\t},\n\n\t'wordDefault' : function(node, txt) {\n\t\tlet nex = node.nex;\n\t\tlet context = manipulator.getContextForNode(node);\n\t\tif (!(/^.$/.test(txt))) {\n\t\t\tthrow UNHANDLED_KEY;\n\t\t};\n\n\t\tlet letterRegex = /^[a-zA-Z0-9']$/;\n\t\tlet isSeparator = !letterRegex.test(txt);\n\n\t\tlet newNode = null;\n\n\t\tif (!manipulator.isInsertInside(manipulator.selected())) {\n\t\t\tlet isInDoc = Utils.isInDocContext(manipulator.selected());\n\t\t\tif (isInDoc) {\n\t\t\t\tnewNode = isSeparator ? manipulator.newSeparator(txt) : manipulator.newLetter(txt);\n\t\t\t} else {\n\t\t\t\tlet canBe = Utils.figureOutWhatItCanBe(txt);\n\t\t\t\tif (canBe.integer) {\n\t\t\t\t\tnewNode = manipulator.newIntegerWithValue(txt);\n\t\t\t\t} else if (canBe.command) {\n\t\t\t\t\tnewNode = manipulator.newCommandWithText(txt);\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tnewNode = manipulator.newNexForKey(txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode);\t\t\t\n\t\t} else {\n\t\t\tif (isSeparator) {\n\t\t\t\tnewNode = manipulator.newSeparator(txt);\n\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode);\n\t\t\t} else {\n\t\t\t\tnewNode = manipulator.newLetter(txt);\n\t\t\t\tif (manipulator.selectLastChild()) {\n\t\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode);\n\t\t\t\t} else {\n\t\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode)\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn {\n\t\t\tinserted: newNode \n\t\t};\n\t},\n\n\t'lineDefault': function(node, txt) {\n\t\tlet nex = node.nex;\n\t\tlet context = manipulator.getContextForNode(node);\n\t\tif (!(/^.$/.test(txt))) {\n\t\t\tthrow UNHANDLED_KEY;\n\t\t};\n\n\t\tlet letterRegex = /^[a-zA-Z0-9']$/;\n\t\tlet isSeparator = !letterRegex.test(txt);\n\n\t\tlet newNode = null;\n\n\t\tif (!manipulator.isInsertInside(manipulator.selected())) {\n\t\t\tlet isInDoc = Utils.isInDocContext(manipulator.selected());\n\t\t\tif (isInDoc) {\n\t\t\t\tnewNode = isSeparator ? manipulator.newSeparator(txt) : manipulator.newLetter(txt);\n\t\t\t} else {\n\t\t\t\tlet canBe = Utils.figureOutWhatItCanBe(txt);\n\t\t\t\tif (canBe.integer) {\n\t\t\t\t\tnewNode = manipulator.newIntegerWithValue(txt);\n\t\t\t\t} else if (canBe.command) {\n\t\t\t\t\tnewNode = manipulator.newCommandWithText(txt);\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tnewNode = manipulator.newNexForKey(txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode);\t\t\t\n\t\t} else {\n\t\t\tif (isSeparator) {\n\t\t\t\tnewNode = manipulator.newSeparator(txt);\n\t\t\t\tif (manipulator.selectLastChild()) {\n\t\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode);\n\t\t\t\t} else {\n\t\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode)\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet newLetter = manipulator.newLetter(txt);\n\t\t\t\tlet newWord = manipulator.newWord();\n\t\t\t\t// pathological cases like empty word at end of line aren't handled\n\t\t\t\tif (manipulator.selectLastChild()) {\n\t\t\t\t\t// there were children, the last child is either a separator or a word\n\t\t\t\t\tif (manipulator.selectLastChild()) {\n\t\t\t\t\t\t// it's a word, just append the letter to the last word in the line\n\t\t\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newLetter);\n\t\t\t\t\t\tnewNode = newLetter;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// last child was a separator, add a new word\n\t\t\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), manipulator.possiblyMakeImmutable(newWord, context));\n\t\t\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newLetter);\n\t\t\t\t\t\tnewNode = newWord;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// this is the case where there is an empty line, add a word\n\t\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), manipulator.possiblyMakeImmutable(newWord, context));\n\t\t\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newLetter);\n\t\t\t\t\tnewNode = newWord;\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn {\n\t\t\tinserted: newNode \n\t\t};\n\t},\n\n\t'docDefault' : function(node, txt) {\n\t\tlet nex = node.nex;\n\t\tlet context = manipulator.getContextForNode(node);\n\t\tif (!(/^.$/.test(txt))) {\n\t\t\tthrow UNHANDLED_KEY;\n\t\t};\n\n\t\tlet letterRegex = /^[a-zA-Z0-9']$/;\n\t\tlet isSeparator = !letterRegex.test(txt);\n\t\t// if we are inserting a letter inside an empty doc, we decide whether to make the line and word\n\t\t// immutable based on the mutability of the doc itself, not its context.\n\t\tlet fakeContext = (nex.isMutable() ? ContextType.DOC : ContextType.IMMUTABLE_DOC);\n\n\t\tlet newNode = null;\n\n\t\tif (!manipulator.isInsertInside(manipulator.selected())) {\n\t\t\tlet isInDoc = Utils.isInDocContext(manipulator.selected());\n\t\t\tif (isInDoc) {\n\t\t\t\tnewNode = isSeparator ? manipulator.newSeparator(txt) : manipulator.newLetter(txt);\n\t\t\t} else {\n\t\t\t\tlet canBe = Utils.figureOutWhatItCanBe(txt);\n\t\t\t\tif (canBe.integer) {\n\t\t\t\t\tnewNode = manipulator.newIntegerWithValue(txt);\n\t\t\t\t} else if (canBe.command) {\n\t\t\t\t\tnewNode = manipulator.newCommandWithText(txt);\t\t\t\t\t\n\t\t\t\t} else {\n\t\t\t\t\tnewNode = manipulator.newNexForKey(txt);\n\t\t\t\t}\n\t\t\t}\n\t\t\tmanipulator.defaultInsertFor(manipulator.selected(), newNode);\t\t\t\n\t\t} else {\n\t\t\tif (isSeparator) {\n\t\t\t\tlet newLine = manipulator.newLine();\n\t\t\t\tlet newSeparator = manipulator.newSeparator(txt);\n\t\t\t\tnewNode = newSeparator;\n\t\t\t\tif (!manipulator.selectLastChild()) {\n\t\t\t\t\tmanipulator.appendAndSelect(manipulator.possiblyMakeImmutable(newLine, fakeContext));\n\t\t\t\t\tnewNode = newLine;\n\t\t\t\t}\n\t\t\t\tmanipulator.appendAndSelect(newSeparator);\n\t\t\t} else {\n\t\t\t\tlet newLine = manipulator.newLine();\n\t\t\t\tlet newWord = manipulator.newWord();\n\t\t\t\tlet newLetter = manipulator.newLetter(txt);\n\t\t\t\tnewNode = null;\n\t\t\t\tif (!manipulator.selectLastChild()) {\n\t\t\t\t\tmanipulator.appendAndSelect(manipulator.possiblyMakeImmutable(newLine, fakeContext));\n\t\t\t\t\tnewNode = newLine;\n\t\t\t\t}\n\t\t\t\tif (!manipulator.selectLastChild()) {\n\t\t\t\t\tmanipulator.appendAndSelect(manipulator.possiblyMakeImmutable(newWord, fakeContext));\n\t\t\t\t\tif (!newNode) newNode = newWord;\n\t\t\t\t}\n\t\t\t\tif (!newNode) newNode = newLetter;\n\t\t\t\tif (manipulator.selectLastChild()) {\n\t\t\t\t\tmanipulator.insertAfterSelectedAndSelect(newLetter);\n\t\t\t\t} else {\n\t\t\t\t\tmanipulator.appendAndSelect(newLetter)\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t\treturn {\n\t\t\tinserted: newNode \n\t\t};\n\t}\n}\n\nconst KeyResponseFunctions = {\n\t// if we make generator functions, like insert-or-append(thing) instead of\n\t// insert-or-append-command, we have to make it so that we don't accidentally\n\t// end up constructing the object once and trying to reinsert it.\n\t// Currently the nexes recreate their key funnel vector every time a key is pressed,\n\t// but that's obviously inefficient and user created nexes might not do that.\n\n\t'do-nothing' : function(s) {},\n\n\t'evaluate-nex': function(s) {\n\t\tevaluateAndReplace(s);\n\t},\n\n\t'evaluate-nex-and-keep': function(s) {\n\t\tevaluateAndKeep(s);\n\t},\n\n\t'toggle-dir': function(s) {\n\t\ts.getNex().toggleDir();\n\t},\n\n\t'toggle-exploded': function(s) {\n\t\ts.toggleRenderMode();\n\t},\n\n\t'select-parent': function(s) { manipulator.selectParent(); },\n\n\t'activate-or-return-exp-child': function(s) {\n\t\tlet exp = s.getNex();\n\t\tif (!exp.isActivated()) {\n\t\t\tevaluateAndReplace(s); // this will activate plus do all the other junk I want\n\t\t} else if (exp.isFinished()) {\n\t\t\tmanipulator.replaceSelectedWithFirstChildOfSelected();\n\t\t}\n\t\t// else no-op, it's still thinking.\n\t},\n\n\t'autocomplete': function(s) {\n\t\ts.getNex().autocomplete();\n\t},\n\n\t'start-main-editor': function(s) { s.possiblyStartMainEditor(); },\n\n\t'delete-letter': function(s) {\n\t\tmanipulator.deleteLeaf(s);\n\t},\n\n\t'delete-separator': function(s) {\n\t\tmanipulator.deleteLeaf(s);\n\t},\n\n\t'delete-line': function(s) {\n\t\tmanipulator.maybeDeleteEmptyLine(s);\n\t},\n\n\t'remove-selected-and-select-previous-sibling': function(s) {\n\t\tmanipulator.removeAndSelectPreviousSibling(s);\n\t},\n\n\t'remove-selected-and-select-previous-sibling-if-empty': function(s) {\n\t\tmanipulator.removeAndSelectPreviousSiblingIfEmpty(s);\n\t},\n\n\t'move-left-up': function(s) {\n\t\tmanipulator.moveLeftUp(s);\n\t},\n\n\t'move-right-down': function(s) {\n\t\tmanipulator.moveRightDown(s);\n\t},\n\n\t'move-left-for-line': function(s) {\n\t\tmanipulator.moveLeftForLine(s);\n\t},\n\n\t'move-up-for-line': function(s) {\n\t\tmanipulator.moveUpForLine(s);\n\t},\n\n\t'move-right-for-line': function(s) {\n\t\tmanipulator.moveRightForLine(s);\n\t},\n\n\t'move-down-for-line': function(s) {\n\t\tmanipulator.moveDownForLine(s);\n\t},\n\n\t'move-to-previous-leaf': function(s) {\n\t\tmanipulator.selectPreviousLeaf(s);\n\t},\n\n\t'move-to-next-leaf': function(s) {\t\t\n\t\tmanipulator.selectNextLeaf(s);\n\t},\n\n\t'select-first-child-or-force-insert-inside-insertion-mode': function(s) {\n\t\tmanipulator.selectFirstChildOrMoveInsertionPoint(s);\n\t},\n\n\t'do-line-break-or-eval': function(s) {\n\t\tlet context = manipulator.getContextForNode(s);\n\t\tif (context == ContextType.DOC || context == ContextType.IMMUTABLE_DOC) {\n\t\t\tmanipulator.doLineBreakForLine(s, context);\n\t\t} else {\n\t\t\tevaluateAndReplace(s);\n\t\t}\n\t},\n\n\t'do-line-break-for-letter': function(s) {\n\t\tlet context = manipulator.getContextForNode(s);\n\t\tmanipulator.doLineBreakForLetter(s, context);\n\t},\n\n\t'do-line-break-for-separator': function(s) {\n\t\tlet context = manipulator.getContextForNode(s);\n\t\tmanipulator.doLineBreakForSeparator(s, context);\n\t},\n\n\t'move-to-corresponding-letter-in-previous-line': function(s) {\n\t\tmanipulator.selectCorrespondingLetterInPreviousLine(s);\n\t},\n\n\t'move-to-corresponding-letter-in-next-line': function(s) {\n\t\tmanipulator.selectCorrespondingLetterInNextLine(s);\n\t},\n\n\t'insert-actual-!-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('!')); },\n\t'insert-actual-@-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('@')); },\n\t'insert-actual-#-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('#')); },\n\t'insert-actual-$-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('$')); },\n\t'insert-actual-%-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('%')); },\n\t'insert-actual-^-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('^')); },\n\t'insert-actual-&-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('&')); },\n\t'insert-actual-*-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('*')); },\n\t'insert-actual-(-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('(')); },\n\t'insert-actual-)-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator(')')); },\n\t'insert-actual-[-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('[')); },\n\t'insert-actual-{-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('{')); },\n\t'insert-actual-<-at-insertion-point-from-separator': function(s) { manipulator.defaultInsertFor(manipulator.selected(), manipulator.newSeparator('<')); },\n\n\t'insert-actual-!-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('!')); },\n\t'insert-actual-@-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('@')); },\n\t'insert-actual-#-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('#')); },\n\t'insert-actual-$-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('$')); },\n\t'insert-actual-%-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('%')); },\n\t'insert-actual-^-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('^')); },\n\t'insert-actual-&-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('&')); },\n\t'insert-actual-*-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('*')); },\n\t'insert-actual-(-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('(')); },\n\t'insert-actual-)-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator(')')); },\n\t'insert-actual-[-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('[')); },\n\t'insert-actual-{-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('{')); },\n\t'insert-actual-<-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('<')); },\n\t'insert-actual-_-at-insertion-point-from-letter': function(s) { manipulator.insertSeparatorBeforeOrAfterSelectedLetter(manipulator.newSeparator('_')); },\n\n\t'insert-command-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newCommand()); },\n\t'insert-bool-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newBool()); },\n\t'insert-symbol-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newESymbol()); },\n\t'insert-integer-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newInteger()); },\n\t'insert-string-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newEString()); },\n\t'insert-float-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newFloat()); },\n\t'insert-nil-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newNil()); },\n\t'insert-instantiator-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newInstantiator()); },\n\t'insert-lambda-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newLambda()); },\n\t'insert-deferredcommand-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newDeferredCommand()); },\n\t'insert-word-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newWord()); },\n\t'insert-line-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newLine()); },\n\t'insert-doc-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newDoc()); },\n\t'insert-org-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newOrg()); },\n\t'insert-wavetable-at-insertion-point': function(s) { manipulator.defaultInsertFor(s, manipulator.newWavetable()); },\n\n\t'close-off-org': function(s) { manipulator.closeOffOrg(s); },\n\t'close-off-line': function(s) { manipulator.closeOffLine(s); },\n\t'close-off-word': function(s) { manipulator.closeOffWord(s); },\n\t'close-off-doc': function(s) { manipulator.closeOffDoc(s); },\n\n\t'add-tag': function(s) { s.startTagEditor(); },\n\n\t'unroll': function(s) { manipulator.unroll(s); },\n\n\t'wrap-in-command': function(s) { manipulator.wrapSelectedInAndSelect(manipulator.newCommand()); },\n\t'wrap-in-lambda': function(s) { manipulator.wrapSelectedInAndSelect(manipulator.newLambda()); },\n\t'wrap-in-deferredcommand': function(s) { manipulator.wrapSelectedInAndSelect(manipulator.newDeferredCommand()); },\n\t'wrap-in-word': function(s) { manipulator.wrapSelectedInAndSelect(manipulator.newWord()); },\n\t'wrap-in-line': function(s) { manipulator.wrapSelectedInAndSelect(manipulator.newLine()); },\n\t'wrap-in-doc': function(s) { manipulator.wrapSelectedInAndSelect(manipulator.newDoc()); },\n\t'wrap-in-instantiator': function(s) { manipulator.wrapSelectedInAndSelect(manipulator.newInstantiator()); },\n\t'wrap-in-org': function(s) { manipulator.wrapSelectedInAndSelect(manipulator.newOrg()); },\n\n\t'force-insert-inside': function(s) { manipulator.forceInsertInside(); },\n\t'force-insert-around': function(s) { manipulator.forceInsertAround(); },\n\t'force-insert-after': function(s) { manipulator.forceInsertAfter(); },\n\t'force-insert-before': function(s) { manipulator.forceInsertBefore(); },\n\n\t'call-delete-handler-then-remove-selected-and-select-previous-sibling': function(s) {\n\t\ts.getNex().callDeleteHandler();\n\t\tmanipulator.removeSelectedAndSelectPreviousSibling();\n\t},\n\n\t'audition-wave': function(s) {\n\t\ts.getNex().auditionWave();\n\t},\n\n\t'toggle-collapsed': function(s) {\n\t\ts.toggleCollapsed();\n\t},\n\n\t// I hate commas\n\t'':''\n}\n\nexport {\n\tKeyResponseFunctions,\n\tDefaultHandlers\n}","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Lambda } from './lambda.js'\nimport { ParamParser } from '../paramparser.js'\nimport { BUILTINS } from '../environment.js'\nimport { PERFORMANCE_MONITOR, perfmon } from '../perfmon.js'\nimport { experiments } from '../globalappflags.js'\nimport { documentBuiltin } from '../documentation.js'\nimport { heap, HeapString } from '../heap.js'\nimport { throwOOM } from './eerror.js'\n\n/**\n * Nex that represents an *uncompiled* builtin function. Compiled builtins\n * are represented by {@link Closure} objects, same as compiled {@link Lambda}s.\n */\nclass Builtin extends Lambda {\n\tconstructor(name, params, retval, docstring) {\n\t\t// memory ok\n\n\t\tsuper();\n\t\t// TODO: accurate memory tracking for builtins\n\t\t// since users can't create builtins this is lower priority\n\t\tthis.name = new HeapString();\n\t\tthis.name.set(name);\n\t\tthis.paramsArray = params;\n\t\tthis.returnValueParam = retval;\n\t\tthis.internaljs = null;\n\t\tthis.docstring = new HeapString();\n\t\tthis.docstring.set(docstring ? docstring : ' - no docs - ');\n\t\tthis.infix = false;\n\t\tlet amp = '';\n\t\tfor (let i = 0; i < params.length; i++) {\n\t\t\tif (amp != '') {\n\t\t\t\tamp += ' ';\n\t\t\t}\n\t\t\tamp += params[i].name;\n\t\t}\n\t\tthis.amptext = new HeapString();\n\t\tthis.amptext.set(amp);\n\t\tthis.f = null;\n\t\tthis.closure = BUILTINS;\n\t}\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn `[BUILTIN:${this.name.get()}]`;\n\t\t}\n\t\treturn `[BUILTIN:${this.name.get()}]`;\n\t}\n\n\tgetCanonicalName() {\n\t\treturn this.name.get();\n\t}\n\n\tgetTypeName() {\n\t\treturn '-builtin-';\n\t}\n\n\tsetInternalJs(js) {\n\t\tthis.internaljs = js;\n\t}\n\n\tmakeCopy(shallow) {\n\t\tlet r = constructBuiltin(this.name.get(), this.paramsArray);\n\t\tthis.copyChildrenTo(r, shallow);\n\t\tthis.copyFieldsTo(r);\n\t\treturn r;\n\t}\n\n\tgetSymbolForCodespan() {\n\t\treturn '&szlig;';\n\t}\n\n\tgetDocString() {\n\t\treturn this.docstring.get();\n\t}\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tlet domNode = renderNode.getDomNode();\n\t\tsuper.renderInto(renderNode, renderFlags, withEditor);\n\t\tdomNode.classList.add('builtin');\n\t}\n\n\tsetF(f) {\n\t\tthis.f = f.bind(this);\n\t}\n\n\tisInfix() {\n\t\treturn this.infix;\n\t}\n\n\tsetInfix(v) {\n\t\tthis.infix = v;\n\t}\n\n\tprettyPrintInternal(lvl, hdir) {\n\t\treturn ` [&]${this.toStringV2PrivateDataSection()}${this.toStringV2TagList()}`;// exp \\n`;\n\t}\n\n\tevaluate(executionEnvironment) {\n\t\tlet r = super.evaluate(executionEnvironment);\n\t\tr.setSymbolBinding(this.name.get());\n\t\treturn r;\n\t}\n\n\tstatic createBuiltin(name, paramsArray, f, docstring, infix) {\n\t\tlet parser = new ParamParser(true /* isBuiltin */);\n\t\tparser.parse(paramsArray);\n\t\tlet params = parser.getParams();\n\t\tlet retval = parser.getReturnValue();\n\t\t// technically this could throw an exception but if you getting OOM\n\t\t// before you've even created the builtins you're not using Vodka today\n\t\tlet builtin = constructBuiltin(name, params, retval, docstring);\n\t\tif (PERFORMANCE_MONITOR) {\n\t\t\tperfmon.registerMethod(name);\n\t\t}\n\t\tbuiltin.setF(f);\n\t\tbuiltin.setInfix(!!infix);\n\t\tlet closure = builtin.evaluate(BUILTINS);\n\t\t// rip out the copied closure and replace with global env because\n\t\t// builtins (though they typically do not evaluate each other)\n\t\t// still should be mutally able to see each other, much like\n\t\t// stuff in a package.\n\t\tclosure.setLexicalEnvironment(BUILTINS);\n\t\tBuiltin.bindBuiltinObject(name, closure);\n\t\tdocumentBuiltin(name, paramsArray, docstring);\n\t}\n\n\tstatic aliasBuiltin(aliasName, boundName) {\n\t\t// temporarily a no-op because this messes up autocomplete\n\t\tlet bound = BUILTINS.lookupBinding(boundName);\n\t\tBuiltin.bindBuiltinObject(aliasName, bound);\n\t}\n\n\tstatic bindBuiltinObject(name, nex) {\n\t\tBUILTINS.bind(name, nex);\n\t}\n\n\tgetEventTable(context) {\n\t\treturn null;\n\t}\n\n\tmemUsed() {\n\t\treturn super.memUsed() + heap.sizeBuiltin();\n\t}\n}\n\nfunction constructBuiltin(name, params, retval, docstring) {\n\theap.requestMem(heap.sizeBuiltin()) || throwOOM('Builtin');\n\treturn heap.register(new Builtin(name, params, retval, docstring));\n}\n\n\nexport { Builtin, constructBuiltin }\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nlet apiDocCategory = '';\n\nlet docs = {};\nlet docorder = [];\n\nfunction setAPIDocCategory(str) {\n\tapiDocCategory = str;\n\tdocs[apiDocCategory] = [];\n\tdocorder.push(str);\n}\n\nfunction documentBuiltin(name, params, info) {\n\tdocs[apiDocCategory].push({\n\t\tname:name,\n\t\tinfo:info,\n\t\tparams:params\n\t})\n}\n\nfunction makespacer(p) {\n\tlet line = document.createElement('p');\n\tline.classList.add('infospacer');\n\tp.appendChild(line);\n\treturn line;\n}\n\nfunction makeline(p, contents) {\n\tlet line = document.createElement('p');\n\tline.classList.add('infoline');\n\tline.innerText = contents;\n\tp.appendChild(line);\n\treturn line;\n}\n\nfunction makeindentedline(p, contents, ishtml) {\n\tlet line = document.createElement('p');\n\tline.classList.add('infoline');\n\tline.classList.add('infoindent');\n\tif (ishtml) {\n\t\tline.innerHTML = contents;\n\t} else {\n\t\tline.innerText = contents;\n\t}\n\tp.appendChild(line);\n\treturn line;\n}\n\nfunction makebigline(p, contents) {\n\tlet line = document.createElement('p');\n\tline.classList.add('infotitle');\n\tline.innerText = contents;\n\tp.appendChild(line);\n\treturn line;\n}\n\nfunction makehotkey(contents) {\n\tlet line = document.createElement('span');\n\tline.classList.add('infohotkey');\n\tline.innerText = contents;\n\treturn line;\n}\n\nfunction makebighotkey(contents) {\n\tlet line = document.createElement('span');\n\tline.classList.add('infohotkey');\n\tline.classList.add('infohotkeylarge');\n\tline.innerText = contents;\n\treturn line;\n}\n\nfunction printTitle(p, text) {\n\tmakebigline(p, text);\n\tmakespacer(p);\n}\n\nfunction printItem(p, item) {\n\tlet line = makeline(p, '')\n\tline.prepend(makebighotkey(item.name))\n\tif (item.params.length > 0) {\n\t\tlet l2 = makeindentedline(p, 'args: ')\n\t\tfor(let i = 0; i < item.params.length; i++) {\n\t\t\tl2.appendChild(makehotkey(item.params[i]))\n\t\t}\t\t\n\t}\n\tlet info = '' + item.info;\n\tinfo = info.replace(/\\|([a-zA-Z_]+) /g, \"<span class=\\\"infohotkey\\\">$1</span>\")\n\tinfo = info.replace(/\\|([a-zA-Z_]+)/g, \"<span class=\\\"infohotkey\\\">$1</span>\")\n\tmakeindentedline(p, info, true);\n\tmakespacer(p);\n\tmakespacer(p);\n}\n\nfunction writeDocs() {\n\tlet div = document.getElementById('fullapireference');\n\tfor (let j = 0; j < docorder.length; j++) {\n\t\tlet key = docorder[j];\n\t\tprintTitle(div, key);\n\t\tlet list = docs[key];\n\t\tfor (let i = 0 ; i < list.length ; i++) {\n\t\t\tprintItem(div, list[i]);\n\t\t}\n\t}\n}\n\n\nexport { setAPIDocCategory, documentBuiltin, writeDocs }","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n\nimport * as Utils from './utils.js'\n\nimport { eventQueueDispatcher } from './eventqueuedispatcher.js'\nimport { RenderNode, INSERT_AFTER } from './rendernode.js'\nimport { BINDINGS } from './environment.js'\nimport { experiments } from './globalappflags.js'\nimport { manipulator } from './manipulator.js'\nimport { evaluateNexSafely } from './evaluator.js'\n\n\n/**\n * This method is used for when you want to evaluate the Nex inside a RenderNode\n * and replace the RenderNode with the result of the computation.\n *\n * @param {RenderNode} s - the RenderNode to evaluate and replace (probably the selected node)\n */\nfunction evaluateAndReplace(s) {\n\n\tlet n = evaluateNexSafely(s.getNex(), BINDINGS);\n\tif (Utils.isFatalError(n)) {\n\t\tUtils.beep();\n\t\tif (!experiments.ERRORS_REPLACE) {\n\t\t\tmanipulator.insertBeforeSelectedAndSelect(new RenderNode(n));\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (n) {\n\t\tmanipulator.replaceSelectedWith(new RenderNode(n));\n\t}\n}\n\n/**\n * This method is used to evaluate a Nex and throw away the result. Obviously only\n * useful if evaluating the Nex has side effects. If it returns an error, the error\n * will be prepended to the parent of the selected node before the selected node.\n *\n * @param {RenderNode} s = the RenderNode to evaluate\n */\nfunction evaluateAndKeep(s) {\n\tlet n = evaluateNexSafely(s.getNex(), BINDINGS);\n\tif (Utils.isFatalError(n)) {\n\t\tUtils.beep();\n\t\tmanipulator.insertBeforeSelectedAndSelect(new RenderNode(n));\n\t}\n\n\teventQueueDispatcher.enqueueAlertAnimation(s);\n}\n\nfunction evaluateAndCopy(s) {\n\tlet n = evaluateNexSafely(s.getNex(), BINDINGS);\n\tif (n) {\n\t\tmanipulator.replaceSelectedWith(new RenderNode(n));\n\t}\n}\n\n// used by the repl\nfunction evaluateAndReturn(nex) {\n\tlet n = evaluateNexSafely(nex, BINDINGS);\n\treturn n;\n}\n\nexport {\n\tevaluateAndReplace,\n\tevaluateAndCopy,\n\tevaluateAndKeep,\n\tevaluateAndReturn\n}\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { eventQueueDispatcher } from '../eventqueuedispatcher.js'\nimport { Builtin } from '../nex/builtin.js'\nimport { constructNil } from '../nex/nil.js'\nimport { EError } from '../nex/eerror.js'\nimport { Org } from '../nex/org.js'\nimport { UNBOUND } from '../environment.js'\nimport { Lambda } from '../nex/lambda.js'\nimport { experiments } from '../globalappflags.js'\nimport { Tag } from '../tag.js'\nimport { constructDeferredValue } from '../nex/deferredvalue.js'\nimport { incFFGen } from '../gc.js'\nimport { constructBool } from '../nex/bool.js'; \nimport { systemState } from '../systemstate.js'\nimport { evaluateNexSafely, wrapError } from '../evaluator.js'\n\n\nimport {\n\tImmediateActivationFunctionGenerator,\n\tDelayActivationFunctionGenerator,\n\tClickActivationFunctionGenerator,\n\tOnContentsChangedActivationFunctionGenerator,\n\tCallbackActivationFunctionGenerator,\n\tOnNextRenderActivationFunctionGenerator\n} from '../asyncfunctions.js'\n\n\n\nfunction createAsyncBuiltins() {\n\n\tBuiltin.createBuiltin(\n\t\t'cancel-deferred',\n\t\t[ 'def*?' ],\n\t\tfunction $cancelDeferred(env, executionEnvironment) {\n\t\t\tlet def = env.lb('def');\n\t\t\tif (def == UNBOUND) {\n\t\t\t\tincFFGen();\n\t\t\t\treturn constructNil();\n\t\t\t} else {\n\t\t\t\tdef.cancel();\n\t\t\t\treturn def;\n\t\t\t}\n\t\t},\n\t\t'Cancels the optional deferred argument |def (it will never complete), or, if no arguments are provided, cancels all unfinished deferreds known by the system.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'settle',\n\t\t[ 'dv*', 'result?'],\n\t\tfunction settle(env, executionEnvironment) {\n\t\t\tlet dv = env.lb('dv');\n\t\t\tlet result = env.lb('result')\n\t\t\tif (result == UNBOUND) {\n\t\t\t\t// if we finish with a Nil, Nil replaces the contents\n\t\t\t\t// but if we pass null, then the dv will keep the contents.\n\t\t\t\tresult = null;\n\t\t\t}\n\t\t\tdv.startSettle(result);\n\t\t\treturn dv;\n\t\t},\n\t\t'Settles the deferred value.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'finish',\n\t\t[ 'dv*', 'result?'],\n\t\tfunction $settle(env, executionEnvironment) {\n\t\t\tlet dv = env.lb('dv');\n\t\t\tlet result = env.lb('result')\n\t\t\tif (result == UNBOUND) {\n\t\t\t\t// if we finish with a Nil, Nil replaces the contents\n\t\t\t\t// but if we pass null, then the dv will keep the contents.\n\t\t\t\tresult = null;\n\t\t\t}\n\t\t\tdv.startFinish(result);\n\t\t\treturn dv;\n\t\t},\n\t\t'Finishes the deferred value.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-finished',\n\t\t[ 'dv*'],\n\t\tfunction $isFinished(env, executionEnvironment) {\n\t\t\tlet dv = env.lb('dv');\n\t\t\tlet isF = dv.isFinished();\n\t\t\tlet r = constructBool(isF);\n\t\t\treturn r;\n\t\t},\n\t\t'Returns true if the deferred value is finished.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'report-async-error',\n\t\t[ '_dv'],\n\t\tfunction $reportError(env, executionEnvironment) {\n\t\t\tlet dv = env.lb('dv');\n\t\t\tlet thing = evaluateNexSafely(dv, executionEnvironment);\n\t\t\tif (Utils.isDeferredValue(thing)) {\n\t\t\t\tthing.addListener({\n\t\t\t\t\tnotify: () => {\n\t\t\t\t\t\tlet z = thing.getChildAt(0);\n\t\t\t\t\t\tif (Utils.isFatalError(z)) {\n\t\t\t\t\t\t\tlet r = systemState.getRoot();\n\t\t\t\t\t\t\tr.prependChild(wrapError('&szlig;', 'report-async-error: error found', z));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t\treturn thing;\n\t\t},\n\t\t'If the argument evaluates to a fatal error, this function reports that error in an obvious place at the root level so the user can see it. Useful for situations where a process is computing asynchronously and may or may not return an error.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'wait-for-nothing',\n\t\t[ ],\n\t\tfunction $waitForNothing(env, executionEnvironment) {\n\t\t\tlet dv = constructDeferredValue();\n\t\t\tlet afg = new ImmediateActivationFunctionGenerator();\n\t\t\tdv.set(afg);\n\t\t\tdv.activate();\n\t\t\treturn dv;\n\t\t},\n\t\t'Returns a deferred value that finishes immediately.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'wait',\n\t\t[ 'nex?' ],\n\t\tfunction $wait(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tlet dv = constructDeferredValue();\n\t\t\tlet afg = new CallbackActivationFunctionGenerator(nex);\n\t\t\tdv.set(afg);\n\t\t\tdv.activate();\n\t\t\tif (nex != UNBOUND) {\n\t\t\t\tdv.appendChild(nex);\n\t\t\t}\n\t\t\treturn dv;\n\t\t},\n\t\t'Returns a deferred value that waits forever until manually settled or finished. If passed in, |nex will be the initial contents of the deferred value.'\n\t);\n\tBuiltin.aliasBuiltin('wait-forever', 'wait');\n\n\n\n\tBuiltin.createBuiltin(\n\t\t'wait-for-click',\n\t\t[ 'nex'],\n\t\tfunction $setClick(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tlet dv = constructDeferredValue();\n\t\t\tlet afg = new ClickActivationFunctionGenerator(nex);\n\t\t\tdv.appendChild(nex);\n\t\t\tdv.set(afg);\n\t\t\tdv.activate();\n\t\t\treturn dv;\n\t\t},\n\t\t'Returns a deferred value that settles every time |nex is clicked on.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'wait-for-delay',\n\t\t[ 'time#' ],\n\t\tfunction $waitForDelay(env, executionEnvironment) {\n\t\t\tlet timenex = env.lb('time');\n\t\t\tlet time = timenex.getTypedValue();\n\t\t\tlet dv = constructDeferredValue();\n\t\t\tdv.appendChild(timenex);\n\t\t\tlet afg = new DelayActivationFunctionGenerator(time);\n\t\t\tdv.set(afg);\n\t\t\tdv.activate();\n\t\t\treturn dv;\n\t\t},\n\t\t'Returns a deferred value that waits for |time milliseconds, then finishes.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'wait-for-contents-changed',\n\t\t[ 'nex()' ],\n\t\tfunction $waitForContentsChanged(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tlet dv = constructDeferredValue();\n\t\t\tdv.appendChild(nex);\n\t\t\tlet afg = new OnContentsChangedActivationFunctionGenerator(nex);\n\t\t\tdv.set(afg);\n\t\t\tdv.activate();\n\t\t\treturn dv;\n\t\t},\n\t\t'Returns a deferred value that settles when contents of |nex are changed.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'wait-for-next-render',\n\t\t[ 'nex' ],\n\t\tfunction $waitForNextRender(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tlet dv = constructDeferredValue();\n\t\t\tdv.appendChild(nex);\n\t\t\tlet afg = new OnNextRenderActivationFunctionGenerator(nex);\n\t\t\tdv.set(afg);\n\t\t\tdv.activate();\n\t\t\treturn dv;\n\t\t},\n\t\t'Returns a deferred value that finishes the next time |nex is rendered to the screen.'\n\t);\n}\n\nexport { createAsyncBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { Builtin } from '../nex/builtin.js'\nimport { constructOrg } from '../nex/org.js'\nimport { constructInteger } from '../nex/integer.js'\nimport { Surface } from '../nex/surface.js'\nimport { UNBOUND } from '../environment.js'\nimport { constructFatalError } from '../nex/eerror.js'\n\n/**\n * Creates all surface builtins.\n */\nfunction createSurfaceBuiltins() {\n\tBuiltin.createBuiltin(\n\t\t'make-surface',\n\t\t[ 'w#%?', 'h#%?' ],\n\t\tfunction $makeSurface(env, executionEnvironment) {\n\t\t\tlet wnex = env.lb('w');\n\t\t\tlet hnex = env.lb('h');\n\n\t\t\tlet w = (wnex == UNBOUND) ? 100 : wnex.getTypedValue();\n\t\t\tlet h = (hnex == UNBOUND) ? 100 : hnex.getTypedValue();\n\n\t\t\tlet r = constructSurface(w, h);\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a 2d drawing surface with the given width and height.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'fill-background',\n\t\t[ 'surf', 'color()' ],\n\t\tfunction $fillBackground(env, executionEnvironment) {\n\t\t\tlet surf = env.lb('surf');\n\t\t\tlet color = env.lb('color');\n\n\t\t\tif (!surf.isValidColorList(color)) {\n\t\t\t\treturn constructFatalError(`fill-background: color list must have exactly three integer members.`);\t\t\t\t\n\t\t\t}\n\n\t\t\t// most of them can have an alpha component, but background fill can't.\n\t\t\tif (color.numChildren() != 3) {\n\t\t\t\treturn constructFatalError(`fill-background: color list must have exactly three integer members.`);\t\t\t\t\n\t\t\t}\n\n\t\t\tlet colorarray = surf.convertColorList(color);\n\n\t\t\tsurf.fillBackground(colorarray);\n\n\t\t\treturn surf;\n\t\t},\n\t\t'Fills the surface background with a color.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'draw-line',\n\t\t[ 'surf', 'color()', 'x1#%', 'y1#%', 'x2#%', 'y2#%'],\n\t\tfunction $drawLine(env, executionEnvironment) {\n\t\t\tlet surf = env.lb('surf');\n\t\t\tlet color = env.lb('color');\n\n\t\t\tif (!surf.isValidColorList(color)) {\n\t\t\t\treturn constructFatalError(`draw-line: color list must have exactly three or four integer members.`);\t\t\t\t\n\t\t\t}\n\n\t\t\tlet colorarray = surf.convertColorList(color);\n\n\t\t\tlet x1 = env.lb('x1').getTypedValue();\n\t\t\tlet y1 = env.lb('y1').getTypedValue();\n\t\t\tlet x2 = env.lb('x2').getTypedValue();\n\t\t\tlet y2 = env.lb('y2').getTypedValue();\n\n\t\t\tsurf.drawLine(colorarray, x1, y1, x2, y2);\n\n\t\t\treturn surf;\n\t\t},\n\t\t'Draws a line on the surface.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'draw-rectangle',\n\t\t[ 'surf', 'color()', 'x#%', 'y#%', 'w#%', 'h#%' ],\n\t\tfunction $drawRectangle(env, executionEnvironment) {\n\t\t\tlet surf = env.lb('surf');\n\t\t\tlet color = env.lb('color');\n\n\t\t\tif (!surf.isValidColorList(color)) {\n\t\t\t\treturn constructFatalError(`draw-rectangle: color list must have exactly three or four integer members.`);\t\t\t\t\n\t\t\t}\n\n\t\t\tlet colorarray = surf.convertColorList(color);\n\n\t\t\tlet x = env.lb('x').getTypedValue();\n\t\t\tlet y = env.lb('y').getTypedValue();\n\t\t\tlet w = env.lb('w').getTypedValue();\n\t\t\tlet h = env.lb('h').getTypedValue();\n\n\t\t\tsurf.drawRect(colorarray, x, y, w, h);\n\n\t\t\treturn surf;\n\t\t},\n\t\t'Draws a rectangle on the surface.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'draw-dot',\n\t\t[ 'surf', 'color()', 'x#%', 'y#%'],\n\t\tfunction $drawRectangle(env, executionEnvironment) {\n\t\t\tlet surf = env.lb('surf');\n\t\t\tlet color = env.lb('color');\n\n\t\t\tif (!surf.isValidColorList(color)) {\n\t\t\t\treturn constructFatalError(`draw-dot: color list must have exactly three or four integer members.`);\t\t\t\t\n\t\t\t}\n\n\t\t\tlet colorarray = surf.convertColorList(color);\n\n\t\t\tlet x = env.lb('x').getTypedValue();\n\t\t\tlet y = env.lb('y').getTypedValue();\n\n\t\t\tsurf.drawDot(colorarray, x, y);\n\n\t\t\treturn surf;\n\t\t},\n\t\t'Draws a dot on the surface.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'color-at',\n\t\t[ 'surf', 'x#%', 'y#%'],\n\t\tfunction $drawRectangle(env, executionEnvironment) {\n\t\t\tlet surf = env.lb('surf');\n\n\t\t\tlet x = env.lb('x').getTypedValue();\n\t\t\tlet y = env.lb('y').getTypedValue();\n\n\t\t\tlet colorarray = surf.colorAt(x, y);\n\n\t\t\tlet r = constructOrg();\n\t\t\tr.appendChild(constructInteger(colorarray[0]))\n\t\t\tr.appendChild(constructInteger(colorarray[1]))\n\t\t\tr.appendChild(constructInteger(colorarray[2]))\n\t\t\tr.appendChild(constructInteger(colorarray[3]))\n\n\t\t\treturn r;\n\t\t},\n\t\t'Draws a dot on the surface.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'copy-from-clipboard',\n\t\t[ 'surf'],\n\t\tfunction $drawRectangle(env, executionEnvironment) {\n\t\t\tlet surf = env.lb('surf');\n\n\t\t\tsurf.copyFromClipboard();\n\t\t\treturn surf;\n\t\t},\n\t\t'Copys the contents of the image clipboard into the surface.'\n\t);\n}\n\nexport { createSurfaceBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { Nex } from './nex.js'\nimport { heap } from '../heap.js'\nimport { constructFatalError } from './eerror.js'\n\n\n/**\n * Represents a drawing surface (canvas).\n */\nclass Surface extends Nex {\n\tconstructor(w, h) {\n\t\tsuper();\n\t\tif (!w) w = 100;\n\t\tif (!h) h = 100;\n\t\tthis.width = w;\n\t\tthis.height = h;\n\n\t\tthis.canvas = document.createElement('canvas');\n\t\tthis.canvas.setAttribute('width', '' + this.width);\n\t\tthis.canvas.setAttribute('height', '' + this.height);\n\t}\n\n\tgetTypeName() {\n\t\treturn '-surface-';\n\t}\n\n\tmakeCopy() {\n\t\tlet r = constructSurface(this.width, this.height);\n\t\tthis.copyFieldsTo(r);\n\t\treturn r;\n\t}\n\n\tcopyFieldsTo(nex) {\n\t\tsuper.copyFieldsTo(nex);\n\t\tnex.canvas.getContext('2d').drawImage(this.canvas, 0, 0);\n\t}\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn this.toStringV2();\n\t\t}\n\t\treturn super.toString(version);\n\t}\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tsuper.renderInto(renderNode, renderFlags, withEditor);\n\t\tlet domNode = renderNode.getDomNode();\n\t\tdomNode.classList.add('surface');\n\t\tdomNode.appendChild(this.canvas);\n\t}\n\n\t// erm changes a number to a hex string I think\n\ttoHex(n) {\n\t\tlet z = n.toString(16);\n\t\tif (z.length == 1) {\n\t\t\tz = '0' + z;\n\t\t}\n\t\treturn z;\n\t}\n\n\tisValidColorList(n) {\n\t\tlet nc = n.numChildren();\n\t\tif (nc != 3 && nc != 4) return false;\n\t\tfor (let i = 0; i < n.numChildren(); i++) {\n\t\t\tlet c = n.getChildAt(i);\n\t\t\tif (!Utils.isInteger(c)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\n\tconvertColorList(n) {\n\t\tlet carray = []\n\t\tfor (let i = 0; i < n.numChildren(); i++) {\n\t\t\tlet c = n.getChildAt(i);\n\t\t\tcarray.push(c.getTypedValue())\n\t\t}\n\t\treturn carray;\n\t}\n\n\n\tsetFillFromColor(color) {\n\t\tlet t, r, g, b;\n\t\tif (color.length == 4) {\n\t\t\tt = color[0] / 256.0;\n\t\t\tr = color[1];\n\t\t\tg = color[2];\n\t\t\tb = color[3];\t\t\t\t\t\t\t\n\t\t} else {\n\t\t\tt = 1.0;\n\t\t\tr = color[0];\n\t\t\tg = color[1];\n\t\t\tb = color[2];\n\t\t}\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tctx.globalAlpha = t;\n\t\tctx.fillStyle = '#' + this.toHex(r) + this.toHex(g) + this.toHex(b);\n\t}\n\n\tsetStrokeFromColor(color) {\n\t\tlet t, r, g, b;\n\t\tif (color.length == 4) {\n\t\t\tt = color[0] / 256.0;\n\t\t\tr = color[1];\n\t\t\tg = color[2];\n\t\t\tb = color[3];\t\t\t\t\t\t\t\n\t\t} else {\n\t\t\tt = 1.0;\n\t\t\tr = color[0];\n\t\t\tg = color[1];\n\t\t\tb = color[2];\n\t\t}\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tctx.globalAlpha = t;\n\t\tctx.strokeStyle = '#' + this.toHex(r) + this.toHex(g) + this.toHex(b);\n\t}\n\n\tfillBackground(color) {\n\t\tlet r = color[0];\n\t\tlet g = color[1];\n\t\tlet b = color[2];\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tctx.fillStyle = '#' + this.toHex(r) + this.toHex(g) + this.toHex(b);\n\t\tctx.fillRect(0, 0, this.width, this.height);\n\t}\n\n\tdrawLine(color, x1, y1, x2, y2) {\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tthis.setStrokeFromColor(color);\n\t\tctx.beginPath();\n\t\tctx.moveTo(x1, y1);\n\t\tctx.lineTo(x2, y2);\n\t\tctx.stroke();\t\t\n\t}\n\n\tdrawRect(color, x, y, w, h) {\n\t\tthis.setFillFromColor(color);\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tctx.fillRect(x, y, w, h);\t\t\n\t}\n\n\tdrawDot(color, x, y) {\n\t\tthis.setFillFromColor(color);\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tctx.fillRect(x, y, 1, 1);\t\t\n\t}\n\n\tcolorAt(x, y) {\n\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\tlet imgdata = ctx.getImageData(x, y, 1, 1)\n\t\tlet r = imgdata.data[0];\n\t\tlet g = imgdata.data[1];\n\t\tlet b = imgdata.data[2];\n\t\tlet a = imgdata.data[3];\n\t\treturn [\n\t\t\tr, g, b, a\n\t\t];\n\t}\n\n\tcopyFromClipboard() {\n\t\tnavigator.clipboard.read().then(data => {\n\t\t\tif (data.length != 1) return;\n\t\t\tlet item = data[0];\n\t\t\tif (item.types[0] != 'image/png') return;\n\t\t\titem.getType('image/png').then(blob => {\n\t\t\t\tlet image = document.createElement('img');\n                image.src = URL.createObjectURL(blob);\n                let body = document.getElementsByTagName('body')[0];\n                body.appendChild(image);\n                let t = this;\n                setTimeout(function() {\n\t\t\t\t\tlet ctx = this.canvas.getContext(\"2d\");\n\t\t\t\t\tctx.drawImage(image, 0, 0);\n\t\t\t\t\tbody.removeChild(image);\n                }.bind(this), 10);\n\t\t\t})\n\t\t});\n\t}\n\n\ttoStringV2() {\n\t\treturn `[${this.toStringV2Literal()}surface]${this.toStringV2PrivateDataSection()}${this.toStringV2TagList()}`\n\t}\n\n\tdeserializePrivateData(data) {\n\t}\n\n\tserializePrivateData() {\n\t\treturn '';\n\t}\n\n\n\tgetDefaultHandler() {\n\t\treturn 'standardDefault';\n\t}\n\n\tgetEventTable(context) {\n\t\treturn {\n\t\t}\n\t}\n\n\tmemUsed() {\n\t\treturn super.memUsed() + heap.sizeSurface();\n\t}\n}\n\nfunction constructSurface(w, h) {\n\tlet sizeRequired = heap.sizeSurface() + w * h * heap.incrementalSizeSurface();\n\tif (!heap.requestMem(sizeRequired)) {\n\t\tthrow constructFatalError(`OUT OF MEMORY: cannot allocate Surface.\nstats: ${heap.stats()}`)\n\t}\n\treturn heap.register(new Surface(w, h));\n}\n\n\nexport { Surface, constructSurface}\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { Nex } from '../nex/nex.js'; \nimport { NexContainer } from '../nex/nexcontainer.js'; \nimport { ValueNex } from '../nex/valuenex.js'; \nimport { Builtin } from '../nex/builtin.js'; \n\nimport { constructBool } from '../nex/bool.js'; \nimport { constructFatalError } from '../nex/eerror.js'; \nimport { constructInteger } from '../nex/integer.js'; \nimport { constructNil } from '../nex/nil.js'; \n\nimport { evaluateNexSafely, wrapError } from '../evaluator.js'\n\nfunction createBasicBuiltins() {\n\n\tBuiltin.createBuiltin(\n\t\t'begin',\n\t\t[ 'nex...' ],\n\t\tfunction $begin(env, executionEnvironment) {\n\t\t\tlet lst = env.lb('nex');\n\t\t\tif (lst.numChildren() == 0) {\n\t\t\t\treturn constructNil();\n\t\t\t} else {\n\t\t\t\treturn lst.getChildAt(lst.numChildren() - 1);\n\t\t\t}\n\t\t},\n\t\t'Evaluates all arguments in order from first to last, returning only the result of the last evaluation.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'car',\n\t\t[ 'list()' ],\n\t\tfunction $head(env, executionEnvironment) {\n\t\t\tlet lst = env.lb('list');\n\t\t\tif (lst.numChildren() == 0) {\n\t\t\t\treturn constructFatalError('car: cannot get first element of empty list. Sorry!');\n\t\t\t}\n\t\t\treturn lst.getFirstChild();\n\t\t},\n\t\t'Returns the first element of |list without altering |list. Aliases: head, first.'\n\t);\n\tBuiltin.aliasBuiltin('head', 'car');\n\tBuiltin.aliasBuiltin('first', 'car');\n\n\n\tBuiltin.createBuiltin(\n\t\t'cdr',\n\t\t[ 'list()' ],\n\t\tfunction $tail(env, executionEnvironment) {\n\t\t\tlet c = env.lb('list');\n\t\t\tif (c.numChildren() == 0) {\n\t\t\t\treturn constructFatalError(\"cdr: given an empty list, cannot make a new list with first element removed. Sorry!\");\n\t\t\t}\n\t\t\tlet newOne = c.makeCopy(true);\n\t\t\tc.getChildrenForCdr(newOne);\n\t\t\treturn newOne;\n\t\t},\n\t\t'Returns a copy of |list containing all elements of |list except the first one. Aliases: tail, rest.'\n\t);\n\tBuiltin.aliasBuiltin('tail', 'cdr');\n\tBuiltin.aliasBuiltin('rest', 'cdr');\n\n\n\tBuiltin.createBuiltin(\n\t\t'cons',\n\t\t[ 'nex', 'list()' ],\n\t\tfunction $pushInto(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tlet lst = env.lb('list');\n\t\t\tlet newOne = lst.makeCopy(true);\n\t\t\tlst.setChildrenForCons(nex, newOne);\n\t\t\treturn newOne;\n\t\t},\n\t\t'Returns a new list created by prepending |nex to a copy of |list. Aliases: push, push-into.'\n\t);\n\tBuiltin.aliasBuiltin('push', 'cons');\n\tBuiltin.aliasBuiltin('push into', 'cons');\n\n\n\tBuiltin.createBuiltin(\n\t\t'chop',\n\t\t[ 'list()' ],\n\t\tfunction $hardHead(env, executionEnvironment) {\n\t\t\tlet c = env.lb('list');\n\t\t\tif (c.numChildren() == 0) {\n\t\t\t\treturn constructFatalError(\"chop: cannot get first element of empty list. Sorry!\");\n\t\t\t}\n\t\t\tlet r = c.getChildAt(0);\n\t\t\tc.removeChild(c.getChildAt(0));\n\t\t\treturn r;\n\t\t},\n\t\t'Removes the first element of |list, destructively altering list, and returns the removed element. Aliases: hard-car, hard-first, hard-head.'\n\t);\n\tBuiltin.aliasBuiltin('hard-car', 'chop');\n\tBuiltin.aliasBuiltin('hard-first', 'chop');\n\tBuiltin.aliasBuiltin('hard-head', 'chop');\n\n\n\tBuiltin.createBuiltin(\n\t\t'chomp',\n\t\t[ 'list()' ],\n\t\tfunction $hardTail(env, executionEnvironment) {\n\t\t\tlet c = env.lb('list');\n\t\t\tif (c.numChildren() == 0) {\n\t\t\t\treturn constructFatalError(\"chomp: cannot remove first element of empty list. Sorry!\");\n\t\t\t}\n\t\t\tc.removeChild(c.getChildAt(0));\n\t\t\treturn c;\n\t\t},\n\t\t'Destructively removes the first element of |list, and returns the altered |list. Aliases: hard-cdr, hard-tail, hard-rest.'\n\t);\n\tBuiltin.aliasBuiltin('hard-cdr', 'chomp');\n\tBuiltin.aliasBuiltin('hard-rest', 'chomp');\n\tBuiltin.aliasBuiltin('hard-tail', 'chomp');\n\n\n\tBuiltin.createBuiltin(\n\t\t'cram',\n\t\t[ 'nex', 'list()' ],\n\t\tfunction $hardPushInto(env, executionEnvironment) {\n\t\t\tlet lst = env.lb('list');\n\t\t\tlst.prependChild(env.lb('nex'));\n\t\t\treturn lst;\n\t\t},\n\t\t'Destructively alters |list by prepending |nex to it. Aliases: hard-cons, hard-push, hard-push into.'\n\t);\n\tBuiltin.aliasBuiltin('hard-cons', 'cram');\n\tBuiltin.aliasBuiltin('hard-push', 'cram');\n\tBuiltin.aliasBuiltin('hard-push into', 'cram');\n\n\n\n\tBuiltin.createBuiltin(\n\t\t'copy',\n\t\t[ 'nex' ],\n\t\tfunction $copy(env, executionEnvironment) {\n\t\t\treturn env.lb('nex').makeCopy();\n\t\t},\n\t\t'Returns a deep copy of |nex (if |nex is a list, list elements are also copied).'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'eq',\n\t\t[ 'lhs', 'rhs' ],\n\t\tfunction $eq(env, executionEnvironment) {\n\t\t\tlet lhs = env.lb('lhs');\n\t\t\tlet rhs = env.lb('rhs');\n\t\t\treturn constructBool(rhs.getID() == lhs.getID());\n\t\t},\n\t\t'returns true if |lhs and |rhs refer to the same in-memory object (pointer equality).'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'list-length',\n\t\t[ 'lst()' ],\n\t\tfunction $eq(env, executionEnvironment) {\n\t\t\tlet lst = env.lb('lst');\n\t\t\treturn constructInteger(lst.numChildren())\n\t\t},\n\t\t'returns the length of |lst.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'list-get',\n\t\t[ 'lst()', 'i#' ],\n\t\tfunction $eq(env, executionEnvironment) {\n\t\t\tlet lst = env.lb('lst');\n\t\t\tlet ind = env.lb('i');\n\t\t\tlet i = ind.getTypedValue();\n\t\t\tif (i < 0 || i >= lst.numChildren()) {\n\t\t\t\treturn constructFatalError(`invalid list index, must be between 0 and ${lst.numChildren()}`);\n\t\t\t}\n\t\t\treturn lst.getChildAt(i);\n\t\t},\n\t\t'returns the element of the list at position |i.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'equal',\n\t\t[ 'lhs', 'rhs' ],\n\t\tfunction $equal(env, executionEnvironment) {\n\t\t\tlet lhs = env.lb('lhs');\n\t\t\tlet rhs = env.lb('rhs');\n\t\t\tlet compareLists = function(list1, list2) {\n\t\t\t\tif (list1.numChildren() != list2.numChildren()) return false;\n\t\t\t\tfor (let i = 0; i < list1.numChildren(); i++) {\n\t\t\t\t\tlet c1 = list1.getChildAt(i);\n\t\t\t\t\tlet c2 = list2.getChildAt(i);\n\t\t\t\t\tif (!compareNexes(c1, c2)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tlet compareNexes = function(a, b) {\n\t\t\t\tif (Utils.isBool(a) && Utils.isBool(b)) {\n\t\t\t\t\treturn a.getTypedValue() == b.getTypedValue();\n\t\t\t\t} else if (Utils.isBuiltin(a) && Utils.isBuiltin(b)) {\n\t\t\t\t\treturn a.getID() == b.getID();\n\t\t\t\t} else if (Utils.isEString(a) && Utils.isEString(b)) {\n\t\t\t\t\treturn a.getFullTypedValue() == b.getFullTypedValue();\n\t\t\t\t} else if (Utils.isESymbol(a) && Utils.isESymbol(b)) {\n\t\t\t\t\treturn a.getTypedValue() == b.getTypedValue();\n\t\t\t\t} else if (Utils.isFloat(a) && Utils.isFloat(b)) {\n\t\t\t\t\treturn a.getTypedValue() == b.getTypedValue();\n\t\t\t\t} else if (Utils.isInteger(a) && Utils.isInteger(b)) {\n\t\t\t\t\treturn a.getTypedValue() == b.getTypedValue();\n\n\t\t\t\t// mixing numeric types should work though\n\t\t\t\t} else if (Utils.isFloat(a) && Utils.isInteger(b)) {\n\t\t\t\t\treturn a.getTypedValue() == b.getTypedValue();\n\t\t\t\t} else if (Utils.isInteger(a) && Utils.isFloat(b)) {\n\t\t\t\t\treturn a.getTypedValue() == b.getTypedValue();\n\n\n\t\t\t\t} else if (Utils.isLetter(a) && Utils.isLetter(b)) {\n\t\t\t\t\treturn a.getText() == b.getText();\n\t\t\t\t} else if (Utils.isSeparator(a) && Utils.isSeparator(b)) {\n\t\t\t\t\treturn a.getText() == b.getText();\n\t\t\t\t} else if (Utils.isNil(a) && Utils.isNil(b)) {\n\t\t\t\t\treturn true;\n\n\n\t\t\t\t} else if (Utils.isOrg(a) && Utils.isOrg(b)) {\n\t\t\t\t\treturn compareLists(a, b);\n\t\t\t\t} else if (Utils.isCommand(a) && Utils.isCommand(b)) {\n\t\t\t\t\treturn compareLists(a, b);\n\t\t\t\t} else if (Utils.isLambda(a) && Utils.isLambda(b)) {\n\t\t\t\t\treturn compareLists(a, b);\n\t\t\t\t} else if (Utils.isDoc(a) && Utils.isDoc(b)) {\n\t\t\t\t\treturn compareLists(a, b);\n\t\t\t\t} else if (Utils.isLine(a) && Utils.isLine(b)) {\n\t\t\t\t\treturn compareLists(a, b);\n\t\t\t\t} else if (Utils.isWord(a) && Utils.isWord(b)) {\n\t\t\t\t\treturn compareLists(a, b);\n\t\t\t\t} else if (Utils.isDeferredCommand(a) && Utils.isDeferredCommand(b)) {\n\t\t\t\t\treturn compareLists(a, b);\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet result = compareNexes(lhs, rhs);\n\t\t\treturn constructBool(result);\n\t\t},\n\t\t'Attempts to test |rhs and |lhs for semantic equality (for example, different integers will test as equal if they represent the same numeric value). Will deep compare lists.'\n\t);\n\n\t// Note the args to the eval function are evaluated.\n\tBuiltin.createBuiltin(\n\t\t'eval',\n\t\t[ 'nex' ],\n\t\tfunction $eval(env, executionEnvironment) {\n\t\t\tlet expr = env.lb('nex');\n\t\t\tlet newresult = evaluateNexSafely(expr, executionEnvironment);\n\t\t\t// we do not wrap errors for eval - we let\n\t\t\t// the caller deal with it\n\t\t\treturn newresult;\n\t\t},\n\t\t'Returns the result of evaluating |nex. Since the argument to this function is already evaluated anyway, this will actually result in a double evaluation.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'quote',\n\t\t[ '_nex' ],\n\t\tfunction $quote(env, executionEnvironment) {\n\t\t\treturn env.lb('nex');\n\t\t},\n\t\t'Returns |nex without evaluating it. Can be used to stop a function argument from being evaluated.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'horizontal',\n\t\t[ 'list()' ],\n\t\tfunction $horizontal(env, executionEnvironment) {\n\t\t\tlet n = env.lb('list');\n\t\t\tn.setHorizontal();\n\t\t\treturn n;\n\t\t},\n\t\t'Sets the direction of |list to horizontal.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'vertical',\n\t\t[ 'list()' ],\n\t\tfunction $vertical(env, executionEnvironment) {\n\t\t\tlet n = env.lb('list');\n\t\t\tn.setHorizontal();\n\t\t\treturn n;\n\t\t},\n\t\t'Sets the direction of |list to vertical.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'zdirectional',\n\t\t[ 'list()' ],\n\t\tfunction $zdirectional(env, executionEnvironment) {\n\t\t\tlet n = env.lb('list');\n\t\t\tn.setHorizontal();\n\t\t\treturn n;\n\t\t},\n\t\t'Sets the direction of |list to \"zdirectional\" (elements appear overlapping each other, coming \"out\" of the screen)'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'mutable',\n\t\t[ 'nex' ],\n\t\tfunction $mutable(env, executionEnvironment) {\n\t\t\tlet n = env.lb('nex');\n\t\t\tn.setMutable(true);\n\t\t\treturn n;\n\t\t},\n\t\t'Makes |nex mutable.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'immutable',\n\t\t[ 'nex' ],\n\t\tfunction $immutable(env, executionEnvironment) {\n\t\t\tlet n = env.lb('nex');\n\t\t\tn.setMutable(false);\n\t\t\treturn n;\n\t\t},\n\t\t'Makes |nex immutable.'\n\t);\n}\n\nexport { createBasicBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Builtin } from '../nex/builtin.js'\nimport { EError, newTagOrThrowOOM } from '../nex/eerror.js'\nimport { constructContract } from '../nex/contract.js'\n\nimport {\n\tcontractEnforcer,\n\tIdentityContract,\n\tTypeContract,\n\tHasTagContract\n} from '../contractfunctions.js'\nimport { Tag } from '../tag.js'\n\nfunction createContractBuiltins() {\n\n\t// tagged as -- satisfies --\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tBuiltin.createBuiltin(\n\t\t'certify satisfies',\n\t\t[ 'tag$', 'contractк' ],\n\t\tfunction $mustBe(env, executionEnvironment) {\n\t\t\t// TODO: type check\n\t\t\tlet tagname = env.lb('tag');\n\t\t\tlet c = env.lb('contract');\n\t\t\tlet tag = newTagOrThrowOOM(tagname.getFullTypedValue(), 'certify satisfies builtin');\n\t\t\tcontractEnforcer.createContract(tag, c.getImpl());\n\t\t\tc.addContractTag(tag);\n\t\t\treturn c;\n\t\t},\n\t\t'Declares that any object tagged with |tag must satisfy the passed-in |contract.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'has-tag-contract',\n\t\t[ 'tag$' ],\n\t\tfunction $hasTagContract(env, executionEnvironment) {\n\t\t\tlet tag = env.lb('tag');\n\t\t\tlet contractImpl = new HasTagContract(newTagOrThrowOOM(tag.getFullTypedValue(), 'has tag contract builtin'));\n\t\t\tlet cnex = constructContract(contractImpl);\n\t\t\treturn cnex;\n\t\t},\n\t\t'Returns a contract that is satisfied if something is tagged with |tag.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'identity-contract',\n\t\t[ 'nex' ],\n\t\tfunction $mustBe(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tlet contractImpl = new IdentityContract(nex.getID());\n\t\t\tlet cnex = constructContract(contractImpl);\n\t\t\treturn cnex;\n\t\t},\n\t\t'Returns a contract that is only satisfied for the specific passed-in object |nex.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'type-contract',\n\t\t[ 'nex' ],\n\t\tfunction $mustHaveTypeOf(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tlet contractImpl = new TypeContract(nex.getTypeName());\n\t\t\treturn constructContract(contractImpl);\n\t\t},\n\t\t'Returns a contract that is only satisified if an object has the same type as |nex.'\n\t);\n\n\t// Builtin.createBuiltin(\n\t// \t'all-of-contract',\n\t// \t[ 'c...' ],\n\t// \tfunction $allOfContract(env, executionEnvironment) {\n\t// \t\tlet c = env.lb('c');\n\t// \t\tlet constituentContracts = [];\n\t// \t\tfor (let i = 0; i < c.numChildren(); i++) {\n\t// \t\t\tconstituentContracts[i] = c.getChildAt(i).getImpl();\n\t// \t\t}\n\t// \t\tlet contractImpl = new AllOfContract(constituentContracts);\n\t// \t\treturn constructContract(contractImpl);\n\t// \t},\n\t// \t'Returns a contract that is only satisfied if all the constituent contracts |c are satisfied.'\n\t// );\n\n\t// What we actually want are:\n\t/*\n\n\t## simple contracts ##\n\n\tall-children-contract -- satisfied if all children satisfy the contract\n\tno-child-contract -- satisfied if no child has that contract\n\tsome-child-contract -- satisfied if it has some child with the given contract\n\tall-child-pairs-contract -- satisfied if all pairs of children satisfy the contract\n\tsome-child-pair-contract -- satisified if some pair of children satisfy the contract\n\tno-child-pair-contract -- satisfied if no pair of children satisfy the contract\n\n\t## composite contracts ##\n\n\tany-of-contract -- satisfied if any of the contracts that are children of the contract nex are satisfied\n\tnone-of-contract -- satisifed if none of the contracts that are children of the contract nex are satisfied\n\tall-of-contract -- satisfied if all of the contracts that are children of the contract nex are satisfied\n\n\t*/\n\n\t// Builtin.createBuiltin(\n\t// \t'contains-exactly-contract',\n\t// \t[ 'c...' ],\n\t// \tfunction $containsExactly(env, executionEnvironment) {\n\t// \t\tlet c = env.lb('c');\n\t// \t\tlet contractImpl = new ContainsExactlyContract();\n\t// \t\tlet r = constructContract(contractImpl);\n\n\t// \t\tfor (let i = 0; i < c.numChildren(); i++) {\n\t// \t\t\tr.appendChild(c.getChildAt(i));\n\t// \t\t}\n\t// \t\treturn r;\n\t// \t},\n\t// \t'Returns a contract that is only satisfied if the object has children that exactly match the child contracts.'\n\t// );\n}\n\n\nexport { createContractBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { NexContainer } from './nexcontainer.js'\nimport { constructFatalError, newTagOrThrowOOM } from './eerror.js'\nimport { heap } from '../heap.js'\n\nclass Contract extends NexContainer {\n\tconstructor(contractImpl) {\n\t\t// memory ok\n\n\t\tsuper()\n\t\tthis.impl = contractImpl;\n\t\tthis.privateData = null; // unused\n\t\tthis.contractTags = [];\n\t}\n\n\taddContractTag(t) {\n\t\tthis.contractTags.push(newTagOrThrowOOM(t.getTagString(), 'adding contract tag member to contract'));\n\t}\n\n\tgetImpl() {\n\t\treturn this.impl;\n\t}\n\n\ttoString(version) {\n\t\tif (version == 'v2') {\n\t\t\treturn `[CONTRACT]`;\n\t\t}\n\t\treturn super.toString(version);\n\t}\n\n\tprettyPrintInternal(lvl, hdir) {\n\t\treturn this.standardListPrettyPrint(lvl, '[contract]', hdir);\n\t}\n\n\ttoStringV2() {\n\t\treturn `${this.toStringV2Literal()}${this.toStringV2PrivateDataSection()}${this.listStartV2()}${this.toStringV2TagList()}${super.childrenToString('v2')}${this.listEndV2()}`;\n\t}\n\n\tdeserializePrivateData(data) {\n\t\tthis.privateData = data;\n\t}\n\n\tserializePrivateData(data) {\n\t\treturn this.privateData;\n\t}\n\n\tevaluate(env) {\n\t\treturn this;\n\t}\n\n\tmakeCopy(shallow) {\n\t\tlet r = constructContract();\n\t\tthis.copyChildrenTo(r, shallow);\n\t\tthis.copyFieldsTo(r);\n\t\treturn r;\n\t}\n\n\tcopyFieldsTo(nex) {\n\t\tsuper.copyFieldsTo(nex);\n\t\tnex.impl = this.impl;\n\t}\n\n\tinsertChildAt(c, i) {\n\t\tif (c.getTypeName() != '-contract-') {\n\t\t\tthrow constructFatalError('contracts can only hold other contracts.');\n\t\t}\n\t\tthis.impl.addChildAt(c.getImpl(), i);\n\t\tsuper.insertChildAt(c, i);\n\t}\n\n\tremoveChildAt(i) {\n\t\tthis.impl.removeChildAt(i);\n\t\tsuper.removeChildAt(i);\n\t}\n\n\tfastAppendChildAfter(c, after) {\n\t\tif (c.getTypeName() != '-contract-') {\n\t\t\tthrow constructFatalError('contracts can only hold other contracts.');\n\t\t}\n\t\tlet n = this.numChildren() - 1;\n\t\tfor (let i = 0; i < this.numChildren(); i++) {\n\t\t\tif (this.getChildAt(i) == after) {\n\t\t\t\tn = i;\n\t\t\t}\n\t\t}\n\t\tsuper.fastAppendChildAfter(c, after);\n\t\tn = n + 1;\n\t\tthis.impl.addChildAt(c.getImpl(), n);\n\t}\n\n\trenderInto(renderNode, renderFlags, withEditor) {\n\t\tlet domNode = renderNode.getDomNode();\n\t\tsuper.renderInto(renderNode, renderFlags, withEditor);\n\t\tdomNode.classList.add('contract');\n\n\t\tlet frame = document.createElement('div');\n\t\tframe.classList.add('contractframe');\n\n\t\tlet glyph = document.createElement('div');\n\t\tglyph.classList.add('cglyph');\n\t\tif (this.numChildren() > 0) {\n\t\t\tglyph.innerHTML = '&#8225;'; // double dagger\n\t\t} else {\n\t\t\tglyph.innerHTML = '&#8224;'; // regular dagger\n\t\t}\n\n\t\tlet innerspans = document.createElement('div');\n\t\tinnerspans.classList.add('cinnerspans')\n\n\t\tlet innerspan = document.createElement(\"div\");\n\t\tinnerspan.classList.add('innerspan');\n\t\tinnerspan.innerHTML = '' + this.impl.getContractName();\n\t\tinnerspans.appendChild(innerspan);\n\n\t\tlet innerspan2 = document.createElement(\"div\");\n\t\tinnerspan2.classList.add('innerspan');\n\t\tinnerspan2.innerHTML = '' + this.impl.getDescription();\n\t\tinnerspans.appendChild(innerspan2);\n\n\t\tif (this.contractTags.length > 0) {\n\t\t\tlet tagspan = document.createElement(\"div\");\n\t\t\ttagspan.classList.add('tagspan');\n\t\t\tfor (let i = 0; i < this.contractTags.length; i++) {\n\t\t\t\tlet t = this.contractTags[i];\n\t\t\t\tt.setIsGhost(true);\n\t\t\t\tt.draw(tagspan, true);\n\t\t\t}\n\t\t\tinnerspans.appendChild(tagspan);\n\t\t}\n\n\t\tframe.appendChild(glyph);\n\t\tframe.appendChild(innerspans);\n\n\t\tdomNode.appendChild(frame);\n\t}\n\n\tgetTypeName() {\n\t\treturn '-contract-';\n\t}\n\n\tmemUsed() {\n\t\tlet tagMem = 0;\n\t\tthis.contractTags.forEach(tag => {\n\t\t\ttagMem += tag.memUsed();\n\t\t})\n\t\treturn tagMem + super.memUsed() + heap.sizeContract();\n\t}\n}\n\nfunction constructContract(contractImpl) {\n\tif (!heap.requestMem(heap.sizeContract())) {\n\t\tthrow constuctFatalError(`OUT OF MEMORY: cannot allocate Contract.\nstats: ${heap.stats()}`)\n\t}\n\treturn heap.register(new Contract(contractImpl));\n}\n\nexport { Contract, constructContract }\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { autocomplete } from '../autocomplete.js'\nimport { Builtin } from '../nex/builtin.js'\nimport { constructFatalError } from '../nex/eerror.js'\n\nimport { constructEString } from '../nex/estring.js'\nimport { constructBool } from '../nex/bool.js'\nimport { constructESymbol } from '../nex/esymbol.js'\nimport { constructNil } from '../nex/nil.js'\nimport { constructOrg } from '../nex/org.js'\n\nimport { BINDINGS } from '../environment.js'\nimport { PERFORMANCE_MONITOR } from '../perfmon.js'\nimport { UNBOUND } from '../environment.js'\nimport { evaluateNexSafely } from '../evaluator.js'\nimport { wrapError } from '../evaluator.js'\nimport { experiments } from '../globalappflags.js'\nimport { sAttach } from '../syntheticroot.js'\n\nfunction createEnvironmentBuiltins() {\n\n\tBuiltin.createBuiltin(\n\t\t'bind',\n\t\t[ '_name@', 'nex' ],\n\t\tfunction $bind(env, executionEnvironment) {\n\t\t\tlet val = env.lb('nex');\n\t\t\tlet name = env.lb('name');\n\t\t\tlet namestr = name.getTypedValue();\n\t\t\tif (namestr.indexOf(':') >= 0) {\n\t\t\t\treturn constructFatalError('bind: cannot bind a symbol with a colon (:) except via the package mechanism. Sorry!');\n\t\t\t}\n\t\t\tlet packageName = executionEnvironment.getPackageForBinding();\n\t\t\tif (packageName) {\n\t\t\t\tBINDINGS.bindInPackage(namestr, val, packageName);\n\t\t\t} else {\n\t\t\t\tBINDINGS.normalBind(namestr, val);\n\t\t\t}\n\t\t\treturn name;\n\t\t},\n\t\t'Binds a new global variable named |name to |nex. Aliases: bind to'\n\t);\n\tBuiltin.aliasBuiltin('bind to', 'bind');\n\n\n\tBuiltin.createBuiltin(\n\t\t'bindings',\n\t\t[ '_search@?' ],\n\t\tfunction $bindings(env, executionEnvironment) {\n\t\t\tlet ssnex = env.lb('search');\n\t\t\tlet ss = \"\";\n\t\t\tif (ssnex != UNBOUND) {\n\t\t\t\tss = ssnex.getTypedValue();\n\t\t\t}\n\t\t\tlet matches = autocomplete.findAllBindingsMatching(ss);\n\t\t\tlet r = constructOrg();\n\t\t\tfor (let j = 0; j < matches.length; j++) {\n\t\t\t\tr.appendChild(constructESymbol(matches[j].name))\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\t'Returns a list of all globally bound variables that match the search string |search, or all if |search is omitted.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'builtins',\n\t\t[ '_search@?' ],\n\t\tfunction $builtins(env, executionEnvironment) {\n\t\t\tlet ssnex = env.lb('search');\n\t\t\tlet ss = \"\";\n\t\t\tif (ssnex != UNBOUND) {\n\t\t\t\tss = ssnex.getTypedValue();\n\t\t\t}\n\t\t\tlet matches = autocomplete.findAllBuiltinsMatching(ss);\n\t\t\tlet r = constructOrg();\n\t\t\tfor (let j = 0; j < matches.length; j++) {\n\t\t\t\tr.appendChild(constructESymbol(matches[j].name))\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\t'Returns a list of standard Vodka builtin function names that match |search, or all of them if |search arg is not provided.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'is-bound',\n\t\t[ '_name@'],\n\t\tfunction $isBound(env, executionEnvironment) {\n\t\t\tlet name = env.lb('name');\n\t\t\ttry {\n\t\t\t\tlet binding = executionEnvironment.lookupBinding(name.getTypedValue());\n\t\t\t\treturn constructBool(true);\n\t\t\t} catch (e) {\n\t\t\t\t// don't swallow real errors\n\t\t\t\tif (e.getTypeName\n\t\t\t\t\t\t&& e.getTypeName() == '-error-'\n\t\t\t\t\t\t&& e.getFullTypedValue().substr(0, 16) == 'undefined symbol') {\n\t\t\t\t\treturn constructBool(false);\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'Returns true if the symbol |name is bound in the global environment.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'let',\n\t\t[ '_name@', 'nex' ],\n\t\tfunction $let(env, executionEnvironment) {\n\t\t\tlet rhs = env.lb('nex');\n\t\t\tlet symname = env.lb('name').getTypedValue();\n\t\t\texecutionEnvironment.bind(symname, rhs);\n\t\t\tif (rhs.getTypeName() == '-closure-') {\n\t\t\t\t// basically let is always \"letrec\"\n\t\t\t\trhs.getLexicalEnvironment().bind(symname, rhs);\n\t\t\t}\n\t\t\treturn rhs;\n\t\t},\n\t\t'Binds the variable |name to |nex in the current closure\\'s local scope. Aliases: let be'\n\t);\n\tBuiltin.aliasBuiltin('let be', 'let');\n\n\n\tBuiltin.createBuiltin(\n\t\t'set',\n\t\t[ '_name@', 'nex' ],\n\t\tfunction $set(env, executionEnvironment) {\n\t\t\tlet namenex = env.lb('name');\n\t\t\tlet rhs = env.lb('nex');\n\t\t\tlet name = namenex.getTypedValue();\n\t\t\tlet tag = null;\n\t\t\tif (namenex.numTags() == 1) {\n\t\t\t\ttag = namenex.getTag(0);\n\t\t\t}\n\t\t\texecutionEnvironment.set(name, rhs, tag);\n\t\t\treturn rhs;\n\t\t},\n\t\t`Changes the binding for |name so that it becomes bound to |nex, regardless of the scope of |name (it can be a local variable, in an enclosing scope, or a globally bound symbol). This function doesn't change the scope of |name.`\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'unclose',\n\t\t[ 'closure&' ],\n\t\tfunction $unclose(env, executionEnvironment) {\n\t\t\t// replaces the closure with the dynamic scope of the function we are in\n\t\t\tlet rhs = env.lb('closure');\n\t\t\trhs.setLexicalEnvironment(executionEnvironment);\n\t\t\treturn rhs;\n\t\t},\n\t\t'Replaces the lexical environment of |closure with the lexical environment that exists at the call site of this call to unclose.'\n\t);\t\n\n\n\tBuiltin.createBuiltin(\n\t\t'use',\n\t\t[ '_name@' ],\n\t\tfunction $use(env, executionEnvironment) {\n\t\t\tlet packageName = env.lb('name').getTypedValue();\n\t\t\tif (!BINDINGS.isKnownPackageName(packageName)) {\n\t\t\t\treturn constructFatalError(`use: invalid package name ${packageName}. Sorry!`);\n\t\t\t}\n\t\t\texecutionEnvironment.usePackage(packageName);\n\t\t\treturn constructNil();\n\t\t},\n\t\t'Makes it so bindings in the package |name can be dereferenced without the package identifier. Stays in effect for the remainder of the current scope.'\n\t);\t\n\n\n\tBuiltin.createBuiltin(\n\t\t'using',\n\t\t[ '_namelist()', '_nex...' ],\n\t\tfunction $using(env, executionEnvironment) {\n\t\t\tlet packageList = env.lb('namelist');\n\t\t\tfor (let i = 0; i < packageList.numChildren(); i++) {\n\t\t\t\tlet c = packageList.getChildAt(i);\n\t\t\t\tif (!(c.getTypeName() == '-symbol-')) {\n\t\t\t\t\treturn constructFatalError(`using: first arg must be a list of symbols that denote package names, but ${c.prettyPrint()} is not a symbol. Sorry!`);\n\t\t\t\t}\n\t\t\t\tlet packageName = c.getTypedValue();\n\t\t\t\tif (!BINDINGS.isKnownPackageName(packageName)) {\n\t\t\t\t\treturn constructFatalError(`using: invalid package name ${packageName}. Sorry!`);\n\t\t\t\t}\n\t\t\t\texecutionEnvironment.usePackage(packageName);\n\t\t\t}\n\t\t\tlet lst = env.lb('nex');\n\t\t\tlet result = constructNil();\n\t\t\tfor (let j = 0; j < lst.numChildren(); j++) {\n\t\t\t\tlet c = lst.getChildAt(j);\n\t\t\t\tresult = sAttach(evaluateNexSafely(c, executionEnvironment));\n\t\t\t\tif (Utils.isFatalError(result)) {\n\t\t\t\t\tresult = wrapError('&szlig;', `using: error in expression ${j+1}, cannot continue. Sorry!`, result);\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t'makes it so bindings in the packages in |namelist can be dereferenced without the package identifier when evaluating the rest of the arguments.'\n\t);\t\n\n\n\tBuiltin.createBuiltin(\n\t\t'dump-memory',\n\t\t[ 'closure&' ],\n\t\tfunction $dumpMemory(env, executionEnvironment) {\n\t\t\tlet closure = env.lb('closure');\n\t\t\tlet lexenv = closure.getLexicalEnvironment();\n\t\t\tlet doLevel = function(envAtLevel) {\n\t\t\t\tlet r = constructOrg();\n\t\t\t\tenvAtLevel.doForEachBinding(function(binding) {\n\t\t\t\t\tlet rec = constructOrg();\n\t\t\t\t\trec.appendChild(constructESymbol(binding.name));\n\t\t\t\t\trec.appendChild(binding.val);\n\t\t\t\t\tr.appendChild(rec);\n\t\t\t\t})\n\t\t\t\tif (envAtLevel.getParent()) {\n\t\t\t\t\tr.appendChild(doLevel(envAtLevel.getParent()));\n\t\t\t\t}\n\t\t\t\treturn r;\n\t\t\t}\n\t\t\treturn doLevel(lexenv);\n\t\t},\n\t\t'Returns the memory environment of |closure, in the form of a list containing all bound symbols along with their values.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'see-id',\n\t\t[ 'nex' ],\n\t\tfunction $seeId(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\treturn constructEString('' + nex.getID());\n\t\t},\n\t\t'Returns the in-memory ID of |nex as a string.'\n\t);\n\n\n}\n\nexport { createEnvironmentBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { Builtin } from '../nex/builtin.js'\nimport { Command } from '../nex/command.js'\nimport { Lambda } from '../nex/lambda.js'\nimport { constructEError } from '../nex/eerror.js'\nimport { constructEString } from '../nex/estring.js'\nimport { Nil } from '../nex/nil.js'\nimport { wrapError } from '../evaluator.js'\nimport { DeferredValue, constructDeferredValue } from '../nex/deferredvalue.js'\nimport { Org } from '../nex/org.js'\nimport { ESymbol } from '../nex/esymbol.js'\nimport { ERROR_TYPE_INFO } from '../nex/eerror.js'\nimport { evaluateNexSafely } from '../evaluator.js'\nimport { BINDINGS } from '../environment.js'\nimport { experiments } from '../globalappflags.js'\nimport {\n\tGenericActivationFunctionGenerator\n} from '../asyncfunctions.js'\nimport {\n\tRENDER_MODE_NORM,\n\tRENDER_MODE_EXPLO,\n\tRENDER_MODE_INHERIT,\n} from '../globalconstants.js'\nimport { sAttach } from '../syntheticroot.js'\n\n\n\nimport {\n\tsaveShortcut,\n\tsaveNex,\n\tloadNex,\n\timportNex,\n\tloadRaw,\n\tsaveRaw,\n\tlistFiles,\n\tlistAudio,\n\tlistStandardFunctionFiles\n} from '../servercommunication.js'\n\n\nfunction createFileBuiltins() {\n\n\tBuiltin.createBuiltin(\n\t\t'list-files',\n\t\t[ ],\n\t\tfunction $listFiles(env, executionEnvironment) {\n\t\t\tlet deferredValue = constructDeferredValue();\n\t\t\tdeferredValue.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'list-files', \n\t\t\t\tfunction(callback, deferredValue) {\n\t\t\t\t\tlistFiles(function(files) {\n\t\t\t\t\t\t// turn files into an org or whatever\n\t\t\t\t\t\tcallback(files);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet loadingMessage = constructEError(`listing files`);\n\t\t\tloadingMessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\tdeferredValue.appendChild(loadingMessage)\n\t\t\tdeferredValue.activate();\n\t\t\treturn deferredValue;\n\t\t},\n\t\t'Lists all user files available in current session.'\n\t);\t\n\n\tBuiltin.createBuiltin(\n\t\t'list-audio',\n\t\t[ ],\n\t\tfunction $listAudio(env, executionEnvironment) {\n\t\t\tlet deferredValue = constructDeferredValue();\n\t\t\tdeferredValue.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'list-audio', \n\t\t\t\tfunction(callback, deferredValue) {\n\t\t\t\t\tlistAudio(function(files) {\n\t\t\t\t\t\t// turn files into an org or whatever\n\t\t\t\t\t\tcallback(files);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet loadingMessage = constructEError(`listing audio`);\n\t\t\tloadingMessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\tdeferredValue.appendChild(loadingMessage)\n\t\t\tdeferredValue.activate();\n\t\t\treturn deferredValue;\n\t\t},\n\t\t'Lists available audio (wav) files.'\n\t);\t\n\n\n\tBuiltin.createBuiltin(\n\t\t'list-standard-function-files',\n\t\t[ ],\n\t\tfunction $listStandardFunctionFiles(env, executionEnvironment) {\n\t\t\tlet def = constructDeferredValue();\n\t\t\tdef.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'list-standard-function-files', \n\t\t\t\tfunction(callback, def) {\n\t\t\t\t\tlistStandardFunctionFiles(function(files) {\n\t\t\t\t\t\t// turn files into an org or whatever\n\t\t\t\t\t\tcallback(files);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet loadingMessage = constructEError(`listing standard function files`);\n\t\t\tloadingMessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\tdef.appendChild(loadingMessage)\n\t\t\tdef.activate();\n\t\t\treturn def;\n\t\t},\n\t\t'Lists the standard library function files available to all users.'\n\t);\t\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \t\n\n\tBuiltin.createBuiltin(\n\t\t'load',\n\t\t[ '_name' ],\n\t\tfunction $load(env, executionEnvironment) {\n\t\t\tlet name = env.lb('name');\n\t\t\tlet nametype = name.getTypeName();\n\t\t\t// need to look for illegal filename characters if it's a string?\n\t\t\tlet nm = nametype == '-symbol-' ? name.getTypedValue() : name.getFullTypedValue();\n\n\t\t\tlet def = constructDeferredValue();\n\t\t\tdef.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'load', \n\t\t\t\tfunction(callback, def) {\n\t\t\t\t\tloadNex(nm, function(loadResult) {\n\t\t\t\t\t\tcallback(loadResult);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet loadingMessage = constructEError(`load file ${nm}`);\n\t\t\tloadingMessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\tdef.appendChild(loadingMessage);\n\t\t\tdef.activate();\n\t\t\treturn def;\n\t\t},\n\t\t'loads the file |name as a nex/object (parsing it)'\n\t);\n\t\n\tBuiltin.createBuiltin(\n\t\t'load-raw',\n\t\t[ '_name' ],\n\t\tfunction $loadRaw(env, executionEnvironment) {\n\t\t\tlet name = env.lb('name');\n\t\t\tlet nametype = name.getTypeName();\n\t\t\t// need to look for illegal filename characters if it's a string?\n\t\t\tlet nm = nametype == '-symbol-' ? name.getTypedValue() : name.getFullTypedValue();\n\n\t\t\tlet def = constructDeferredValue();\n\t\t\tdef.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'load-raw', \n\t\t\t\tfunction(callback, def) {\n\t\t\t\t\tloadRaw(nm, function(loadResult) {\n\t\t\t\t\t\tcallback(constructEString(loadResult));\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet loadingMessage = constructEError(`load file ${nm}`);\n\t\t\tloadingMessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\tdef.appendChild(loadingMessage)\n\t\t\tdef.activate();\n\t\t\treturn def;\n\t\t},\n\t\t'Loads raw bytes from the file |name into a string, and returns it.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'eval-and-save',\n\t\t[ '_name', 'val' ],\n\t\tfunction $evalAndSave(env, executionEnvironment) {\n\t\t\tlet val = env.lb('val');\n\t\t\tlet name = env.lb('name');\n\n\t\t\tlet nametype = name.getTypeName();\n\t\t\t// need to look for illegal filename characters if it's a string?\n\t\t\tlet nm = nametype == '-symbol-' ? name.getTypedValue() : name.getFullTypedValue();\n\n\n\t\t\tlet def = constructDeferredValue();\n\t\t\tdef.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'save', \n\t\t\t\tfunction(callback, def) {\n\t\t\t\t\tsaveNex(nm, val, function(saveResult) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcallback(saveResult);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet savingMessage = constructEError(`save in file ${nm} this data: ${val.prettyPrint()}`);\n\t\t\tsavingMessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\tdef.appendChild(savingMessage)\n\t\t\tdef.activate();\n\t\t\treturn def;\t\t\t\n\n\t\t},\n\t\t'saves |val in the file |name (|val is evaluated).'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'save',\n\t\t[ '_name', '_val' ],\n\t\tfunction $save(env, executionEnvironment) {\n\n\t\t\tlet val = env.lb('val');\n\n\t\t\tlet name = env.lb('name');\n\t\t\tlet nametype = name.getTypeName();\n\t\t\t// need to look for illegal filename characters if it's a string?\n\t\t\tlet nm = nametype == '-symbol-' ? name.getTypedValue() : name.getFullTypedValue();\n\n\t\t\tlet def = constructDeferredValue();\n\t\t\tdef.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'save', \n\t\t\t\tfunction(callback, def) {\n\t\t\t\t\tsaveNex(nm, val, function(saveResult) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tcallback(saveResult);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet savingMessage = constructEError(`save in file ${nm} this data: ${val.prettyPrint()}`);\n\t\t\tsavingMessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\tdef.appendChild(savingMessage);\n\t\t\tdef.activate();\n\t\t\treturn def;\t\t\t\n\t\t},\n\t\t'Saves |val in the file |name (without evaluating |val).'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'save-raw',\n\t\t[ '_name', 'val$'],\n\t\tfunction $saveFile(env, executionEnvironment) {\n\t\t\tlet name = env.lb('name');\n\t\t\tlet nametype = name.getTypeName();\n\t\t\t// need to look for illegal filename characters if it's a string?\n\t\t\tlet nm = nametype == '-symbol-' ? name.getTypedValue() : name.getFullTypedValue();\n\n\t\t\tlet val = env.lb('val');\n\t\t\tlet saveval = val.getFullTypedValue();\n\n\t\t\tlet def = constructDeferredValue();\n\t\t\tdef.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'save-string-as', \n\t\t\t\tfunction(callback, def) {\n\t\t\t\t\tsaveRaw(nm, saveval, function(saveResult) {\n\t\t\t\t\t\tcallback(saveResult);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet savingMessage = constructEError(`save in file ${nm} this data: ${val}`);\n\t\t\tsavingMessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\tdef.appendChild(savingMessage);\n\t\t\tdef.activate();\n\t\t\treturn def;\n\t\t},\n\t\t'Saves the raw bytes of string |val in the file |name.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'import',\n\t\t[ '_name' ],\n\t\tfunction $import(env, executionEnvironment) {\n\t\t\tlet name = env.lb('name');\n\t\t\tlet nametype = name.getTypeName();\n\t\t\t// need to look for illegal filename characters if it's a string?\n\t\t\tlet nm = nametype == '-symbol-' ? name.getTypedValue() : name.getFullTypedValue();\n\n\t\t\tlet def = constructDeferredValue();\n\t\t\tdef.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'import', \n\t\t\t\tfunction(callback, def) {\n\t\t\t\t\timportNex(nm, function(importResult) {\n\t\t\t\t\t\tcallback(importResult);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet importMessage = constructEError(`import package ${nm}`);\n\t\t\timportMessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\tdef.appendChild(importMessage)\n\t\t\tdef.activate();\n\t\t\treturn def;\n\t\t},\n\t\t'Imports the package in file |name, loading the file and binding the package contents into memory.'\n\t);\n\n\n\n\t// Before you go renaming the \"package\" builtin to something else!\n\t// the name of this builtin is hardcoded into servercommunication.js\n\t// idk if there is a better way, but be aware.\n\tBuiltin.createBuiltin(\n\t\t'package',\n\t\t[ '_name@', '_block...' ],\n\t\tfunction $package(env, executionEnvironment) {\n\n\t\t\t/*\n\t\t\tokay so the package thing is a special form basically.\n\t\t\tthis means that the rules here are different. We always\n\t\t\ttreat this as if it was a deferred command, so we look at\n\t\t\tthe return value for each expression. If it's deferred,\n\t\t\twe wait for it to resolve before moving on to the next one.\n\n\t\t\tAdditionally: we should create a new scope,\n\t\t\tnot for the purposes of using \"let\" but so that we could\n\t\t\tassociate with that scope a package name.\n\t\t\tthat way imported packages don't interfere with the package here,\n\t\t\twe get a stack of package names by default.\n\n\t\t\tFinally, what do we return? Let's just always return a deferred\n\t\t\tvalue. It resolves when all the different imports happen and\n\t\t\tthe package is finished being created. Since a package\n\t\t\tstatement will frequently import things, it is more or less\n\t\t\tby definition the same type of builtin as a file loading builtin.\n\n\t\t\tthis means that if you do crazy shit like trying to use package\n\t\t\tor import statements inside lambdas, you get what you get.\n\t\t\tThe system is designed to be used in this sensible way,\n\t\t\tresults are undefined if you go outside of that.\n\n\t\t\t*/\n\n\t\t\tlet packageName = env.lb('name').getTypedValue();\n\t\t\tlet lst = env.lb('block');\n\n\t\t\tlet packageScope = executionEnvironment.pushEnv(); // popped\n\t\t\tpackageScope.setPackageForBinding(packageName);\n\t\t\tpackageScope.usePackage(packageName);\n\n\t\t\tlet nextArgToEval = 0;\n\n\t\t\tlet deferredCallback = null;\n\n\t\t\tlet packageStatements = [];\n\t\t\tfor (let i = 0; i < lst.numChildren(); i++) {\n\t\t\t\tpackageStatements.push(lst.getChildAt(i));\n\t\t\t}\n\n\t\t\tlet notifyCallback = function() {\n\t\t\t\tevalNextArg();\n\t\t\t};\n\n\t\t\tlet evalNextArg = function() {\n\t\t\t\tfor( ; nextArgToEval < packageStatements.length ; nextArgToEval++) {\n\t\t\t\t\tlet c = packageStatements[nextArgToEval];\n\t\t\t\t\tlet result = sAttach(evaluateNexSafely(c, packageScope));\n\t\t\t\t\tif (Utils.isDeferredValue(result)) {\n\t\t\t\t\t\tpackageStatements[nextArgToEval] = result;\n\t\t\t\t\t\tresult.addListener({\n\t\t\t\t\t\t\tnotify: notifyCallback\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif (Utils.isFatalError(result)) {\n\t\t\t\t\t\tlet err = wrapError('&szlig;', `package: error returned from expression ${nextArgToEval+2}`, result);\n\t\t\t\t\t\tpackageScope.finalize();\n\t\t\t\t\t\tdeferredCallback(err);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (nextArgToEval == packageStatements.length) {\n\t\t\t\t\tlet message = constructEError(`successfully created package.`);\n\t\t\t\t\tmessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\t\t\tpackageScope.finalize();\n\t\t\t\t\tdeferredCallback(message);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet r = constructDeferredValue();\n\t\t\tr.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'package', \n\t\t\t\tfunction(callback, def) {\n\t\t\t\t\tdeferredCallback = callback;\n\t\t\t\t\tevalNextArg();\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet message = constructEError(`creating package`);\n\t\t\tmessage.setErrorType(ERROR_TYPE_INFO);\n\t\t\tr.appendChild(message)\n\t\t\tr.activate();\n\t\t\treturn r;\n\t\t},\n\t\t'Defines a package. All args in |block are evaluated, and any bindings are bound with |name as their package scope identifier.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'normal-mode',\n\t\t[ 'nex' ],\n\t\tfunction $normalMode(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tnex.setModeHint(RENDER_MODE_NORM);\n\t\t\tlet nodes = nex.getRenderNodes();\n\t\t\tnodes.forEach(node => setRenderMode(RENDER_MODE_NORM));\n\t\t\treturn nex;\n\t\t},\n\t\t'Sets the mode hint for nex so that it will render as normal by default.'\n\t);\t\n\n\tBuiltin.createBuiltin(\n\t\t'exploded-mode',\n\t\t[ 'nex' ],\n\t\tfunction $explodedMode(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tnex.setModeHint(RENDER_MODE_EXPLO);\n\t\t\tlet nodes = nex.getRenderNodes();\n\t\t\tnodes.forEach(node => setRenderMode(RENDER_MODE_EXPLO));\n\t\t\treturn nex;\n\t\t},\n\t\t'Sets the mode hint for nex so that it will render as exploded by default.'\n\t);\t\n\n}\n\nexport { createFileBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from './utils.js';\n\nimport { BINDINGS } from './environment.js'\nimport { constructFatalError } from './nex/eerror.js'\nimport { evaluateNexSafely } from './evaluator.js'\nimport { parse } from './nexparser2.js';\nimport { systemState } from './systemstate.js'\n\nfunction sendToServer(payload, cb, errcb) {\n\tlet xhr = new XMLHttpRequest();\n\txhr.onreadystatechange = function() {};\n\txhr.open('POST', 'api')\n\txhr.send(payload);\n\txhr.onload = function() {\n\t\tif (xhr.readyState === xhr.DONE && xhr.status === 200) {\n\t\t\tcb(xhr.response);\n\t\t} else {\n\t\t\terrcb();\n\t\t}\n\t};\n\txhr.onerror = function() {\n\t\terrcb();\n\t}\n}\n\nfunction listFiles(callback) {\n\tlet payload = `listfiles`;\n\n\tsendToServer(payload, function(data) {\n\t\tparseReturnPayload(data, callback);\n\t}, function() {\n\t\tcallback(serverError());\n\t});\n}\n\nfunction listAudio(callback) {\n\tlet payload = `listaudio`;\n\n\tsendToServer(payload, function(data) {\n\t\tparseReturnPayload(data, callback);\n\t}, function() {\n\t\tcallback(serverError());\n\t});\n}\n\n\nfunction listStandardFunctionFiles(callback) {\n\tlet payload = `liststandardfunctionfiles`;\n\n\tsendToServer(payload, function(data) {\n\t\tparseReturnPayload(data, callback);\n\t}, function() {\n\t\tcallback(serverError());\n\t});\n}\n\n\nfunction loadNex(name, callback) {\n\tlet payload = `load\\t${name}`;\n\n\tsendToServer(payload, function(data) {\n\t\tdocument.title = name;\n\t\tsystemState.setDefaultFileName(name);\n\t\tparseReturnPayload(data, callback);\n\t}, function() {\n\t\tcallback(serverError());\n\t});\n}\n\nfunction loadRaw(name, callback) {\n\tlet payload = `loadraw\\t${name}`;\n\n\tsendToServer(payload, function(data) {\n\t\tcallback(data);\n\t}, function() {\n\t\tcallback(serverError());\n\t});\n}\n\nfunction saveNex(name, nex, callback) {\n\tlet payload = `save\\t${name}\\t${'v2:' + nex.toString('v2')}`;\n\n\tsendToServer(payload, function(data) {\n\t\tparseReturnPayload(data, callback);\n\t}, function() {\n\t\tcallback(serverError());\n\t});\n}\n\nfunction saveRaw(name, data, callback) {\n\tlet payload = `saveraw\\t${name}\\t${data}`;\n\n\tsendToServer(payload, function(data) {\n\t\tparseReturnPayload(data, callback);\n\t}, function() {\n\t\tcallback(serverError());\n\t});\n}\n\nfunction importNex(name, callback) {\n\tlet payload = `load\\t${name}`;\n\n\tsendToServer(payload, function(data) {\n\t\tparseReturnPayload(data, function(nex) {\n\t\t\tcallback(evaluatePackage(nex));\n\t\t})\n\t}, function() {\n\t\tcallback(serverError());\n\t});\n}\n\nfunction loadAndRun(name, callback) {\n\tlet payload = `load\\t${name}`;\n\n\tsendToServer(payload, function(data) {\n\t\tparseReturnPayload(data, function(parsed) {\n\t\t\tlet result = evaluateNexSafely(parsed, BINDINGS);\n\t\t\tcallback(result);\n\t\t});\n\t}, function() {\n\t\tcallback(serverError());\n\t});\n}\n\nfunction serverError() {\n\tlet r = constructFatalError(\"Server error.\");\n\treturn r;\n}\n\n\nfunction parseReturnPayload(data, callback) {\n\tlet result = null;\n\ttry {\n\t\tresult = parse(data);\n\t} catch (e) {\n\t\tif (!Utils.isError(e)) {\n\t\t\tresult = constructFatalError(\n`PEG PARSER PERROR\nfull error message follows:\n${e.name}\n${e.message}\nline: ${e.location.start.line}\ncol: ${e.location.start.column}\nfound: \"${e.found}\"\nexpected: ${e.expected[0].type}\n` + e);\n\t\t}\n\t}\n\tcallback(result);\n}\n\nfunction evaluatePackage(nex) {\n\tif (!(nex.getTypeName() == '-command-'\n\t\t\t\t&& (nex.getCommandName() == 'package'\n\t\t\t\t|| nex.getCommandName() == 'template'))) {\n\t\tlet r = constructFatalError('Can only import packages or templates, see file contents')\n\t\treturn r;\n\t}\n\tlet result = evaluateNexSafely(nex, BINDINGS);\n\treturn result;\n}\n\n// This util is meant to be used from functions like\n// save-template and save-package.\n// These aren't meant to be called from \"code\" because it doesn't\n// give you access to success/failure, or the returned deferred value.\n// It's more of an ide shortcut kind of thing.\nfunction saveShortcut(namesym, val, callback) {\n\tlet nametype = namesym.getTypeName();\n\tlet nm = '';\n\tsaveNex(nm, val, function(result) {\n\t\tif (Utils.isInfo(result)) {\n\t\t\tcallback(null);\n\t\t} else {\n\t\t\tcallback(result);\n\t\t}\n\t});\n}\n\nexport {\n\tsaveNex,\n\timportNex,\n\tloadNex,\n\tlistFiles,\n\tlistStandardFunctionFiles,\n\tloadRaw,\n\tsaveRaw,\n\tloadAndRun,\n\tsaveShortcut,\n\tlistAudio\n}","// This file is part of Vodka.\n\n// Vodka is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n\n// Vodka is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n\n// You should have received a copy of the GNU General Public License\n// along with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n\nimport * as PF from './parserfunctions.js'\n\n\n// Generated by PEG.js v0.11.0-master.b7b87ea, https://pegjs.org/\n\nfunction peg$subclass(child, parent) {\n  function C() { this.constructor = child; }\n  C.prototype = parent.prototype;\n  child.prototype = new C();\n}\n\nfunction peg$SyntaxError(message, expected, found, location) {\n  this.message = message;\n  this.expected = expected;\n  this.found = found;\n  this.location = location;\n  this.name = \"SyntaxError\";\n\n  // istanbul ignore next\n  if (typeof Error.captureStackTrace === \"function\") {\n    Error.captureStackTrace(this, peg$SyntaxError);\n  }\n}\n\npeg$subclass(peg$SyntaxError, Error);\n\npeg$SyntaxError.buildMessage = function(expected, found, location) {\n  var DESCRIBE_EXPECTATION_FNS = {\n    literal: function(expectation) {\n      return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n    },\n\n    class: function(expectation) {\n      var escapedParts = expectation.parts.map(function(part) {\n        return Array.isArray(part)\n          ? classEscape(part[0]) + \"-\" + classEscape(part[1])\n          : classEscape(part);\n      });\n\n      return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n    },\n\n    any: function() {\n      return \"any character\";\n    },\n\n    end: function() {\n      return \"end of input\";\n    },\n\n    other: function(expectation) {\n      return expectation.description;\n    },\n\n    not: function(expectation) {\n      return \"not \" + describeExpectation(expectation.expected);\n    }\n  };\n\n  function hex(ch) {\n    return ch.charCodeAt(0).toString(16).toUpperCase();\n  }\n\n  function literalEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\"/g,  \"\\\\\\\"\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function classEscape(s) {\n    return s\n      .replace(/\\\\/g, \"\\\\\\\\\")\n      .replace(/\\]/g, \"\\\\]\")\n      .replace(/\\^/g, \"\\\\^\")\n      .replace(/-/g,  \"\\\\-\")\n      .replace(/\\0/g, \"\\\\0\")\n      .replace(/\\t/g, \"\\\\t\")\n      .replace(/\\n/g, \"\\\\n\")\n      .replace(/\\r/g, \"\\\\r\")\n      .replace(/[\\x00-\\x0F]/g,          function(ch) { return \"\\\\x0\" + hex(ch); })\n      .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return \"\\\\x\"  + hex(ch); });\n  }\n\n  function describeExpectation(expectation) {\n    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n  }\n\n  function describeExpected(expected) {\n    var descriptions = expected.map(describeExpectation);\n    var i, j;\n\n    descriptions.sort();\n\n    if (descriptions.length > 0) {\n      for (i = 1, j = 1; i < descriptions.length; i++) {\n        if (descriptions[i - 1] !== descriptions[i]) {\n          descriptions[j] = descriptions[i];\n          j++;\n        }\n      }\n      descriptions.length = j;\n    }\n\n    switch (descriptions.length) {\n      case 1:\n        return descriptions[0];\n\n      case 2:\n        return descriptions[0] + \" or \" + descriptions[1];\n\n      default:\n        return descriptions.slice(0, -1).join(\", \")\n          + \", or \"\n          + descriptions[descriptions.length - 1];\n    }\n  }\n\n  function describeFound(found) {\n    return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n  }\n\n  return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n};\n\nfunction peg$parse(input, options) {\n  options = options !== undefined ? options : {};\n\n  var peg$FAILED = {};\n\n  var peg$startRuleFunctions = { start: peg$parsestart };\n  var peg$startRuleFunction = peg$parsestart;\n\n  var peg$c0 = \"v2:\";\n  var peg$c1 = \"(\";\n  var peg$c2 = \")\";\n  var peg$c3 = \"(_\";\n  var peg$c4 = \"_)\";\n  var peg$c5 = \"(|\";\n  var peg$c6 = \"|)\";\n  var peg$c7 = \"(,\";\n  var peg$c8 = \",)\";\n  var peg$c9 = \";\";\n  var peg$c10 = \"*;\";\n  var peg$c11 = \"*\";\n  var peg$c12 = \"&;\";\n  var peg$c13 = \"&\";\n  var peg$c14 = \"~;\";\n  var peg$c15 = \"~\";\n  var peg$c16 = \"^;\";\n  var peg$c17 = \"^\";\n  var peg$c18 = \":\";\n  var peg$c19 = \"[\";\n  var peg$c20 = \"]\";\n  var peg$c21 = \"[;\";\n  var peg$c22 = \"!;\";\n  var peg$c23 = \"yes\";\n  var peg$c24 = \"no\";\n  var peg$c25 = \"!\";\n  var peg$c26 = \"@;\";\n  var peg$c27 = \"@\";\n  var peg$c28 = \"_\";\n  var peg$c29 = \"#;\";\n  var peg$c30 = \"-\";\n  var peg$c31 = \"#\";\n  var peg$c32 = \"$;\";\n  var peg$c33 = \"$\";\n  var peg$c34 = \"?\";\n  var peg$c35 = \"%;\";\n  var peg$c36 = \"%\";\n  var peg$c37 = \".\";\n  var peg$c38 = \"<\";\n  var peg$c39 = \">\";\n  var peg$c40 = \"`\";\nvar peg$c41 = \"\\\"\";\nvar peg$c42 = \"{\";\nvar peg$c43 = \"}\";\nvar peg$c44 = \"|}\";\nvar peg$c45 = \"||\";\n\nvar peg$r0 = /^[+=*\\/<>]/;\nvar peg$r1 = /^[a-zA-Z0-9:.\\-]/;\nvar peg$r2 = /^[a-zA-Z0-9\\-]/;\nvar peg$r3 = /^[a-zA-Z0-9]/;\nvar peg$r4 = /^[0-9]/;\nvar peg$r5 = /^[^`]/;\n  var peg$r6 = /^[^\"]/;\n  var peg$r7 = /^[^|}]/;\n  var peg$r8 = /^[ \\r\\n\\t]/;\n\n  var peg$e0 = peg$literalExpectation(\"v2:\", false);\n  var peg$e1 = peg$literalExpectation(\"(\", false);\n  var peg$e2 = peg$literalExpectation(\")\", false);\n  var peg$e3 = peg$literalExpectation(\"(_\", false);\n  var peg$e4 = peg$literalExpectation(\"_)\", false);\n  var peg$e5 = peg$literalExpectation(\"(|\", false);\n  var peg$e6 = peg$literalExpectation(\"|)\", false);\n  var peg$e7 = peg$literalExpectation(\"(,\", false);\n  var peg$e8 = peg$literalExpectation(\",)\", false);\n  var peg$e9 = peg$literalExpectation(\";\", false);\n  var peg$e10 = peg$literalExpectation(\"*;\", false);\n  var peg$e11 = peg$literalExpectation(\"*\", false);\n  var peg$e12 = peg$literalExpectation(\"&;\", false);\n  var peg$e13 = peg$literalExpectation(\"&\", false);\n  var peg$e14 = peg$literalExpectation(\"~;\", false);\n  var peg$e15 = peg$literalExpectation(\"~\", false);\n  var peg$e16 = peg$literalExpectation(\"^;\", false);\n  var peg$e17 = peg$literalExpectation(\"^\", false);\n  var peg$e18 = peg$literalExpectation(\":\", false);\n  var peg$e19 = peg$classExpectation([\"+\", \"=\", \"*\", \"/\", \"<\", \">\"], false, false);\n  var peg$e20 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"], \":\", \".\", \"-\"], false, false);\n  var peg$e21 = peg$literalExpectation(\"[\", false);\n  var peg$e22 = peg$literalExpectation(\"]\", false);\n  var peg$e23 = peg$literalExpectation(\"[;\", false);\n  var peg$e24 = peg$classExpectation([[\"a\", \"z\"], [\"A\", \"Z\"], [\"0\", \"9\"]], false, false);\n  var peg$e25 = peg$literalExpectation(\"!;\", false);\n  var peg$e26 = peg$literalExpectation(\"yes\", false);\n  var peg$e27 = peg$literalExpectation(\"no\", false);\n  var peg$e28 = peg$literalExpectation(\"!\", false);\n  var peg$e29 = peg$literalExpectation(\"@;\", false);\n  var peg$e30 = peg$literalExpectation(\"@\", false);\n  var peg$e31 = peg$literalExpectation(\"_\", false);\n  var peg$e32 = peg$literalExpectation(\"#;\", false);\n  var peg$e33 = peg$literalExpectation(\"-\", false);\n  var peg$e34 = peg$classExpectation([[\"0\", \"9\"]], false, false);\n  var peg$e35 = peg$literalExpectation(\"#\", false);\n  var peg$e36 = peg$literalExpectation(\"$;\", false);\n  var peg$e37 = peg$literalExpectation(\"$\", false);\n  var peg$e38 = peg$literalExpectation(\"?\", false);\n  var peg$e39 = peg$literalExpectation(\"%;\", false);\n  var peg$e40 = peg$literalExpectation(\"%\", false);\n  var peg$e41 = peg$literalExpectation(\".\", false);\n  var peg$e42 = peg$literalExpectation(\"<\", false);\n  var peg$e43 = peg$literalExpectation(\">\", false);\n  var peg$e44 = peg$literalExpectation(\"`\", false);\nvar peg$e45 = peg$classExpectation([\"`\"], true, false);\n  var peg$e46 = peg$literalExpectation(\"\\\"\", false);\n  var peg$e47 = peg$classExpectation([\"\\\"\"], true, false);\n  var peg$e48 = peg$literalExpectation(\"{\", false);\n  var peg$e49 = peg$literalExpectation(\"}\", false);\n  var peg$e50 = peg$classExpectation([\"|\", \"}\"], true, false);\n  var peg$e51 = peg$literalExpectation(\"|}\", false);\n  var peg$e52 = peg$literalExpectation(\"||\", false);\n  var peg$e53 = peg$classExpectation([\" \", \"\\r\", \"\\n\", \"\\t\"], false, false);\n\n  var peg$f0 = function(NEX) { return NEX; };\n  var peg$f1 = function(INST_NAME, PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstanceList(INST_NAME, CHILDREN, PRIVATE, TAGLIST, 'h', true /* nonmutable */); };\n  var peg$f2 = function(INST_NAME, PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstanceList(INST_NAME, CHILDREN, PRIVATE, TAGLIST, 'v', true /* nonmutable */); };\n  var peg$f3 = function(INST_NAME, PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstanceList(INST_NAME, CHILDREN, PRIVATE, TAGLIST, 'z', true /* nonmutable */); };\n  var peg$f4 = function(INST_NAME, PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstanceList(INST_NAME, CHILDREN, PRIVATE, TAGLIST, 'h'); };\n  var peg$f5 = function(INST_NAME, PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstanceList(INST_NAME, CHILDREN, PRIVATE, TAGLIST, 'v'); };\n  var peg$f6 = function(INST_NAME, PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstanceList(INST_NAME, CHILDREN, PRIVATE, TAGLIST, 'z'); };\n  var peg$f7 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeOrgList(CHILDREN, PRIVATE, TAGLIST, 'h', true /* nonmutable */); };\n  var peg$f8 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeOrgList(CHILDREN, PRIVATE, TAGLIST, 'v', true /* nonmutable */); };\n  var peg$f9 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeOrgList(CHILDREN, PRIVATE, TAGLIST, 'z', true /* nonmutable */); };\n  var peg$f10 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeOrgList(CHILDREN, PRIVATE, TAGLIST, 'h'); };\n  var peg$f11 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeOrgList(CHILDREN, PRIVATE, TAGLIST, 'v'); };\n  var peg$f12 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeOrgList(CHILDREN, PRIVATE, TAGLIST, 'z'); };\n  var peg$f13 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeDeferredCommandList(CHILDREN, PRIVATE, TAGLIST, 'h', true /* nonmutable */); };\n  var peg$f14 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeDeferredCommandList(CHILDREN, PRIVATE, TAGLIST, 'v', true /* nonmutable */); };\n  var peg$f15 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeDeferredCommandList(CHILDREN, PRIVATE, TAGLIST, 'z', true /* nonmutable */); };\n  var peg$f16 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeDeferredCommandList(CHILDREN, PRIVATE, TAGLIST, 'h'); };\n  var peg$f17 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeDeferredCommandList(CHILDREN, PRIVATE, TAGLIST, 'v'); };\n  var peg$f18 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeDeferredCommandList(CHILDREN, PRIVATE, TAGLIST, 'z'); };\n  var peg$f19 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeLambdaList(CHILDREN, PRIVATE, TAGLIST, 'h', true /* nonmutable */); };\n  var peg$f20 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeLambdaList(CHILDREN, PRIVATE, TAGLIST, 'v', true /* nonmutable */); };\n  var peg$f21 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeLambdaList(CHILDREN, PRIVATE, TAGLIST, 'z', true /* nonmutable */); };\n  var peg$f22 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeLambdaList(CHILDREN, PRIVATE, TAGLIST, 'h'); };\n  var peg$f23 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeLambdaList(CHILDREN, PRIVATE, TAGLIST, 'v'); };\n  var peg$f24 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeLambdaList(CHILDREN, PRIVATE, TAGLIST, 'z'); };\n  var peg$f25 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeCommandList(null, CHILDREN, PRIVATE, TAGLIST, 'h', true /* nonmutable */); };\n  var peg$f26 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeCommandList(null, CHILDREN, PRIVATE, TAGLIST, 'v', true /* nonmutable */); };\n  var peg$f27 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeCommandList(null, CHILDREN, PRIVATE, TAGLIST, 'z', true /* nonmutable */); };\n  var peg$f28 = function(PRIVATE, TAGLIST, NAME, CHILDREN) { return PF.makeCommandList(NAME, CHILDREN, PRIVATE, TAGLIST, 'h', true /* nonmutable */); };\n  var peg$f29 = function(PRIVATE, TAGLIST, NAME, CHILDREN) { return PF.makeCommandList(NAME, CHILDREN, PRIVATE, TAGLIST, 'v', true /* nonmutable */); };\n  var peg$f30 = function(PRIVATE, TAGLIST, NAME, CHILDREN) { return PF.makeCommandList(NAME, CHILDREN, PRIVATE, TAGLIST, 'z', true /* nonmutable */); };\n  var peg$f31 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeCommandList(null, CHILDREN, PRIVATE, TAGLIST, 'h'); };\n  var peg$f32 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeCommandList(null, CHILDREN, PRIVATE, TAGLIST, 'v'); };\n  var peg$f33 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeCommandList(null, CHILDREN, PRIVATE, TAGLIST, 'z'); };\n  var peg$f34 = function(PRIVATE, TAGLIST, NAME, CHILDREN) { return PF.makeCommandList(NAME, CHILDREN, PRIVATE, TAGLIST, 'h'); };\n  var peg$f35 = function(PRIVATE, TAGLIST, NAME, CHILDREN) { return PF.makeCommandList(NAME, CHILDREN, PRIVATE, TAGLIST, 'v'); };\n  var peg$f36 = function(PRIVATE, TAGLIST, NAME, CHILDREN) { return PF.makeCommandList(NAME, CHILDREN, PRIVATE, TAGLIST, 'z'); };\n  var peg$f37 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstantiatorList(CHILDREN, PRIVATE, TAGLIST, 'h', true /* nonmutable */); };\n  var peg$f38 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstantiatorList(CHILDREN, PRIVATE, TAGLIST, 'v', true /* nonmutable */); };\n  var peg$f39 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstantiatorList(CHILDREN, PRIVATE, TAGLIST, 'z', true /* nonmutable */); };\n  var peg$f40 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstantiatorList(CHILDREN, PRIVATE, TAGLIST, 'h'); };\n  var peg$f41 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstantiatorList(CHILDREN, PRIVATE, TAGLIST, 'v'); };\n  var peg$f42 = function(PRIVATE, TAGLIST, CHILDREN) { return PF.makeInstantiatorList(CHILDREN, PRIVATE, TAGLIST, 'z'); };\n  var peg$f43 = function(SYM) { return SYM; };\n  var peg$f44 = function(NAME) { return NAME; };\n  var peg$f45 = function(CHILDREN) { return CHILDREN; };\n  var peg$f46 = function(INST_NAME, PRIVATE, TAGLIST) { return PF.makeInstanceAtom(INST_NAME, PRIVATE, TAGLIST, true /* nonmutable */); };\n  var peg$f47 = function(INST_NAME, PRIVATE, TAGLIST) { return PF.makeInstanceAtom(INST_NAME, PRIVATE, TAGLIST); };\n  var peg$f48 = function(INST_NAME_DATA) { return INST_NAME_DATA; };\n  var peg$f49 = function(TAGLIST) { return PF.makeBool(true, TAGLIST, true /* nonmutable */); };\n  var peg$f50 = function(TAGLIST) { return PF.makeBool(false, TAGLIST, true /* nonmutable */); };\n  var peg$f51 = function(TAGLIST) { return PF.makeBool(true, TAGLIST); };\n  var peg$f52 = function(TAGLIST) { return PF.makeBool(false, TAGLIST); };\n  var peg$f53 = function(TAGLIST, SYMBOL) { return PF.makeSymbol(SYMBOL, TAGLIST, true /* nonmutable */); };\n  var peg$f54 = function(TAGLIST, SYMBOL) { return PF.makeSymbol(SYMBOL, TAGLIST); };\n  var peg$f55 = function(SYMBOL_CHAR) { return SYMBOL_CHAR; };\n  var peg$f56 = function() { return '_'; };\n  var peg$f57 = function(TAGLIST, NEGATION, DIGITS) { return PF.makeInteger(NEGATION, DIGITS, TAGLIST, true /* nonmutable */); };\n  var peg$f58 = function(TAGLIST, NEGATION, DIGITS) { return PF.makeInteger(NEGATION, DIGITS, TAGLIST); };\n  var peg$f59 = function(TAGLIST, DATA) { return PF.makeString(DATA, TAGLIST, true /* nonmutable */); };\n  var peg$f60 = function(TAGLIST, DATA) { return PF.makeString(DATA, TAGLIST); };\n  var peg$f61 = function(TAGLIST, DATA) { return PF.makeError(DATA, TAGLIST, true /* nonmutable */); };\n  var peg$f62 = function(TAGLIST, FLOAT) { return PF.makeFloat(FLOAT, TAGLIST, true /* nonmutable */); };\n  var peg$f63 = function(TAGLIST, FLOAT) { return PF.makeFloat(FLOAT, TAGLIST); };\n  var peg$f64 = function(INT_PART, DEC_DIGITS) {return DEC_DIGITS; };\n  var peg$f65 = function(INT_PART, DEC_PART) { return  DEC_PART ? (INT_PART + '.' + DEC_PART) : INT_PART};\n  var peg$f66 = function(DEC_DIGITS) { return '0.' + DEC_DIGITS; };\n  var peg$f67 = function(DIGITS) { return DIGITS.join(''); };\n  var peg$f68 = function(DIGITS) { return '-' + DIGITS.join(''); };\n  var peg$f69 = function(TAGS) { return TAGS; };\n  var peg$f70 = function(TAG) { return TAG; };\n  var peg$f71 = function(TAG_DATA) { return TAG_DATA; };\n  var peg$f72 = function(DATA) { return DATA; };\n  var peg$f73 = function() { return null; };\n  var peg$f74 = function(CHAR) { return CHAR; };\n  var peg$f75 = function() { return RIGHT_BRACE; };\n  var peg$f76 = function() { return '|'; };\n\n  var peg$currPos = 0;\n  var peg$savedPos = 0;\n  var peg$posDetailsCache = [{ line: 1, column: 1 }];\n  var peg$expected = [];\n  var peg$silentFails = 0;\n\n  var peg$result;\n\n  if (\"startRule\" in options) {\n    if (!(options.startRule in peg$startRuleFunctions)) {\n      throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n    }\n\n    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n  }\n\n  function text() {\n    return input.substring(peg$savedPos, peg$currPos);\n  }\n\n  function offset() {\n    return peg$savedPos;\n  }\n\n  function range() {\n    return [peg$savedPos, peg$currPos];\n  }\n\n  function location() {\n    return peg$computeLocation(peg$savedPos, peg$currPos);\n  }\n\n  function expected(description, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildStructuredError(\n      [peg$otherExpectation(description)],\n      input.substring(peg$savedPos, peg$currPos),\n      location\n    );\n  }\n\n  function error(message, location) {\n    location = location !== undefined\n      ? location\n      : peg$computeLocation(peg$savedPos, peg$currPos);\n\n    throw peg$buildSimpleError(message, location);\n  }\n\n  function peg$literalExpectation(text, ignoreCase) {\n    return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n  }\n\n  function peg$classExpectation(parts, inverted, ignoreCase) {\n    return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n  }\n\n  function peg$anyExpectation() {\n    return { type: \"any\" };\n  }\n\n  function peg$endExpectation() {\n    return { type: \"end\" };\n  }\n\n  function peg$otherExpectation(description) {\n    return { type: \"other\", description: description };\n  }\n\n  function peg$computePosDetails(pos) {\n    var details = peg$posDetailsCache[pos];\n    var p;\n\n    if (details) {\n      return details;\n    } else {\n      p = pos - 1;\n      while (!peg$posDetailsCache[p]) {\n        p--;\n      }\n\n      details = peg$posDetailsCache[p];\n      details = {\n        line: details.line,\n        column: details.column\n      };\n\n      while (p < pos) {\n        if (input.charCodeAt(p) === 10) {\n          details.line++;\n          details.column = 1;\n        } else {\n          details.column++;\n        }\n\n        p++;\n      }\n\n      peg$posDetailsCache[pos] = details;\n\n      return details;\n    }\n  }\n\n  var peg$VALIDFILENAME = typeof options.filename === \"string\" && options.filename.length > 0;\n  function peg$computeLocation(startPos, endPos) {\n    var loc = {};\n\n    if ( peg$VALIDFILENAME ) loc.filename = options.filename;\n\n    var startPosDetails = peg$computePosDetails(startPos);\n    loc.start = {\n      offset: startPos,\n      line: startPosDetails.line,\n      column: startPosDetails.column\n    };\n\n    var endPosDetails = peg$computePosDetails(endPos);\n    loc.end = {\n      offset: endPos,\n      line: endPosDetails.line,\n      column: endPosDetails.column\n    };\n\n    return loc;\n  }\n\n  function peg$begin() {\n    peg$expected.push({ pos: peg$currPos, variants: [] });\n  }\n\n  function peg$expect(expected) {\n    var top = peg$expected[peg$expected.length - 1];\n\n    if (peg$currPos < top.pos) { return; }\n\n    if (peg$currPos > top.pos) {\n      top.pos = peg$currPos;\n      top.variants = [];\n    }\n\n    top.variants.push(expected);\n  }\n\n  function peg$end(invert) {\n    var expected = peg$expected.pop();\n    var top = peg$expected[peg$expected.length - 1];\n    var variants = expected.variants;\n\n    if (top.pos !== expected.pos) { return; }\n\n    if (invert) {\n      variants = variants.map(function(e) {\n        return e.type === \"not\" ? e.expected : { type: \"not\", expected: e };\n      });\n    }\n\n    Array.prototype.push.apply(top.variants, variants);\n  }\n\n  function peg$buildSimpleError(message, location) {\n    return new peg$SyntaxError(message, null, null, location);\n  }\n\n  function peg$buildStructuredError(expected, found, location) {\n    return new peg$SyntaxError(\n      peg$SyntaxError.buildMessage(expected, found, location),\n      expected,\n      found,\n      location\n    );\n  }\n\n  function peg$buildError() {\n    var expected = peg$expected[0];\n    var failPos = expected.pos;\n\n    return peg$buildStructuredError(\n      expected.variants,\n      failPos < input.length ? input.charAt(failPos) : null,\n      failPos < input.length\n        ? peg$computeLocation(failPos, failPos + 1)\n        : peg$computeLocation(failPos, failPos)\n    );\n  }\n\n  function peg$parsestart() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseparser_version_identifier();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parse_();\n      s3 = peg$parsenex();\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parse_();\n        peg$savedPos = s0;\n        s0 = peg$f0(s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseparser_version_identifier() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e0);\n    if (input.substr(peg$currPos, 3) === peg$c0) {\n      s0 = peg$c0;\n      peg$currPos += 3;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenex() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseatom();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parselist();\n    }\n\n    return s0;\n  }\n\n  function peg$parselist() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseorg_list();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parseexp_list();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parselambda_list();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsecmd_list();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseinstance_list();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parseinstantiator_list();\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseinstance_list() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsenonmutable_instance_name();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseprivate_data_section();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e1);\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetaglist();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          s5 = [];\n          s6 = peg$parsenex_with_space();\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$parsenex_with_space();\n          }\n          s6 = peg$parse_();\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f1(s1, s2, s4, s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parsenonmutable_instance_name();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseprivate_data_section();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e3);\n          if (input.substr(peg$currPos, 2) === peg$c3) {\n            s3 = peg$c3;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetaglist();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            s5 = [];\n            s6 = peg$parsenex_with_space();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsenex_with_space();\n            }\n            s6 = peg$parse_();\n            rule$expects(peg$e4);\n            if (input.substr(peg$currPos, 2) === peg$c4) {\n              s7 = peg$c4;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f1(s1, s2, s4, s5);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parsenonmutable_instance_name();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseprivate_data_section();\n          if (s2 !== peg$FAILED) {\n            rule$expects(peg$e5);\n            if (input.substr(peg$currPos, 2) === peg$c5) {\n              s3 = peg$c5;\n              peg$currPos += 2;\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsetaglist();\n              if (s4 === peg$FAILED) {\n                s4 = null;\n              }\n              s5 = [];\n              s6 = peg$parsenex_with_space();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsenex_with_space();\n              }\n              s6 = peg$parse_();\n              rule$expects(peg$e6);\n              if (input.substr(peg$currPos, 2) === peg$c6) {\n                s7 = peg$c6;\n                peg$currPos += 2;\n              } else {\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s0 = peg$f2(s1, s2, s4, s5);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parsenonmutable_instance_name();\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseprivate_data_section();\n            if (s2 !== peg$FAILED) {\n              rule$expects(peg$e7);\n              if (input.substr(peg$currPos, 2) === peg$c7) {\n                s3 = peg$c7;\n                peg$currPos += 2;\n              } else {\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parsetaglist();\n                if (s4 === peg$FAILED) {\n                  s4 = null;\n                }\n                s5 = [];\n                s6 = peg$parsenex_with_space();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parsenex_with_space();\n                }\n                s6 = peg$parse_();\n                rule$expects(peg$e8);\n                if (input.substr(peg$currPos, 2) === peg$c8) {\n                  s7 = peg$c8;\n                  peg$currPos += 2;\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s0 = peg$f3(s1, s2, s4, s5);\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseinstance_name();\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parseprivate_data_section();\n              if (s2 !== peg$FAILED) {\n                rule$expects(peg$e1);\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s3 = peg$c1;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parsetaglist();\n                  if (s4 === peg$FAILED) {\n                    s4 = null;\n                  }\n                  s5 = [];\n                  s6 = peg$parsenex_with_space();\n                  while (s6 !== peg$FAILED) {\n                    s5.push(s6);\n                    s6 = peg$parsenex_with_space();\n                  }\n                  s6 = peg$parse_();\n                  rule$expects(peg$e2);\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s7 = peg$c2;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s0 = peg$f4(s1, s2, s4, s5);\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseinstance_name();\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseprivate_data_section();\n                if (s2 !== peg$FAILED) {\n                  rule$expects(peg$e3);\n                  if (input.substr(peg$currPos, 2) === peg$c3) {\n                    s3 = peg$c3;\n                    peg$currPos += 2;\n                  } else {\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parsetaglist();\n                    if (s4 === peg$FAILED) {\n                      s4 = null;\n                    }\n                    s5 = [];\n                    s6 = peg$parsenex_with_space();\n                    while (s6 !== peg$FAILED) {\n                      s5.push(s6);\n                      s6 = peg$parsenex_with_space();\n                    }\n                    s6 = peg$parse_();\n                    rule$expects(peg$e4);\n                    if (input.substr(peg$currPos, 2) === peg$c4) {\n                      s7 = peg$c4;\n                      peg$currPos += 2;\n                    } else {\n                      s7 = peg$FAILED;\n                    }\n                    if (s7 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s0 = peg$f4(s1, s2, s4, s5);\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parseinstance_name();\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parseprivate_data_section();\n                  if (s2 !== peg$FAILED) {\n                    rule$expects(peg$e5);\n                    if (input.substr(peg$currPos, 2) === peg$c5) {\n                      s3 = peg$c5;\n                      peg$currPos += 2;\n                    } else {\n                      s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parsetaglist();\n                      if (s4 === peg$FAILED) {\n                        s4 = null;\n                      }\n                      s5 = [];\n                      s6 = peg$parsenex_with_space();\n                      while (s6 !== peg$FAILED) {\n                        s5.push(s6);\n                        s6 = peg$parsenex_with_space();\n                      }\n                      s6 = peg$parse_();\n                      rule$expects(peg$e6);\n                      if (input.substr(peg$currPos, 2) === peg$c6) {\n                        s7 = peg$c6;\n                        peg$currPos += 2;\n                      } else {\n                        s7 = peg$FAILED;\n                      }\n                      if (s7 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s0 = peg$f5(s1, s2, s4, s5);\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parseinstance_name();\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parseprivate_data_section();\n                    if (s2 !== peg$FAILED) {\n                      rule$expects(peg$e7);\n                      if (input.substr(peg$currPos, 2) === peg$c7) {\n                        s3 = peg$c7;\n                        peg$currPos += 2;\n                      } else {\n                        s3 = peg$FAILED;\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parsetaglist();\n                        if (s4 === peg$FAILED) {\n                          s4 = null;\n                        }\n                        s5 = [];\n                        s6 = peg$parsenex_with_space();\n                        while (s6 !== peg$FAILED) {\n                          s5.push(s6);\n                          s6 = peg$parsenex_with_space();\n                        }\n                        s6 = peg$parse_();\n                        rule$expects(peg$e8);\n                        if (input.substr(peg$currPos, 2) === peg$c8) {\n                          s7 = peg$c8;\n                          peg$currPos += 2;\n                        } else {\n                          s7 = peg$FAILED;\n                        }\n                        if (s7 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s0 = peg$f6(s1, s2, s4, s5);\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseorg_list() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e9);\n    if (input.charCodeAt(peg$currPos) === 59) {\n      s1 = peg$c9;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseprivate_data_section();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e1);\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetaglist();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          s5 = [];\n          s6 = peg$parsenex_with_space();\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$parsenex_with_space();\n          }\n          s6 = peg$parse_();\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f7(s2, s4, s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e9);\n      if (input.charCodeAt(peg$currPos) === 59) {\n        s1 = peg$c9;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseprivate_data_section();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e3);\n          if (input.substr(peg$currPos, 2) === peg$c3) {\n            s3 = peg$c3;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetaglist();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            s5 = [];\n            s6 = peg$parsenex_with_space();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsenex_with_space();\n            }\n            s6 = peg$parse_();\n            rule$expects(peg$e4);\n            if (input.substr(peg$currPos, 2) === peg$c4) {\n              s7 = peg$c4;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f7(s2, s4, s5);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        rule$expects(peg$e9);\n        if (input.charCodeAt(peg$currPos) === 59) {\n          s1 = peg$c9;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseprivate_data_section();\n          if (s2 !== peg$FAILED) {\n            rule$expects(peg$e5);\n            if (input.substr(peg$currPos, 2) === peg$c5) {\n              s3 = peg$c5;\n              peg$currPos += 2;\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsetaglist();\n              if (s4 === peg$FAILED) {\n                s4 = null;\n              }\n              s5 = [];\n              s6 = peg$parsenex_with_space();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsenex_with_space();\n              }\n              s6 = peg$parse_();\n              rule$expects(peg$e6);\n              if (input.substr(peg$currPos, 2) === peg$c6) {\n                s7 = peg$c6;\n                peg$currPos += 2;\n              } else {\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s0 = peg$f8(s2, s4, s5);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          rule$expects(peg$e9);\n          if (input.charCodeAt(peg$currPos) === 59) {\n            s1 = peg$c9;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseprivate_data_section();\n            if (s2 !== peg$FAILED) {\n              rule$expects(peg$e7);\n              if (input.substr(peg$currPos, 2) === peg$c7) {\n                s3 = peg$c7;\n                peg$currPos += 2;\n              } else {\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parsetaglist();\n                if (s4 === peg$FAILED) {\n                  s4 = null;\n                }\n                s5 = [];\n                s6 = peg$parsenex_with_space();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parsenex_with_space();\n                }\n                s6 = peg$parse_();\n                rule$expects(peg$e8);\n                if (input.substr(peg$currPos, 2) === peg$c8) {\n                  s7 = peg$c8;\n                  peg$currPos += 2;\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s0 = peg$f9(s2, s4, s5);\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            s1 = peg$parseprivate_data_section();\n            if (s1 !== peg$FAILED) {\n              rule$expects(peg$e1);\n              if (input.charCodeAt(peg$currPos) === 40) {\n                s2 = peg$c1;\n                peg$currPos++;\n              } else {\n                s2 = peg$FAILED;\n              }\n              if (s2 !== peg$FAILED) {\n                s3 = peg$parsetaglist();\n                if (s3 === peg$FAILED) {\n                  s3 = null;\n                }\n                s4 = [];\n                s5 = peg$parsenex_with_space();\n                while (s5 !== peg$FAILED) {\n                  s4.push(s5);\n                  s5 = peg$parsenex_with_space();\n                }\n                s5 = peg$parse_();\n                rule$expects(peg$e2);\n                if (input.charCodeAt(peg$currPos) === 41) {\n                  s6 = peg$c2;\n                  peg$currPos++;\n                } else {\n                  s6 = peg$FAILED;\n                }\n                if (s6 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s0 = peg$f10(s1, s3, s4);\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              s1 = peg$parseprivate_data_section();\n              if (s1 !== peg$FAILED) {\n                rule$expects(peg$e3);\n                if (input.substr(peg$currPos, 2) === peg$c3) {\n                  s2 = peg$c3;\n                  peg$currPos += 2;\n                } else {\n                  s2 = peg$FAILED;\n                }\n                if (s2 !== peg$FAILED) {\n                  s3 = peg$parsetaglist();\n                  if (s3 === peg$FAILED) {\n                    s3 = null;\n                  }\n                  s4 = [];\n                  s5 = peg$parsenex_with_space();\n                  while (s5 !== peg$FAILED) {\n                    s4.push(s5);\n                    s5 = peg$parsenex_with_space();\n                  }\n                  s5 = peg$parse_();\n                  rule$expects(peg$e4);\n                  if (input.substr(peg$currPos, 2) === peg$c4) {\n                    s6 = peg$c4;\n                    peg$currPos += 2;\n                  } else {\n                    s6 = peg$FAILED;\n                  }\n                  if (s6 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s0 = peg$f10(s1, s3, s4);\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                s1 = peg$parseprivate_data_section();\n                if (s1 !== peg$FAILED) {\n                  rule$expects(peg$e5);\n                  if (input.substr(peg$currPos, 2) === peg$c5) {\n                    s2 = peg$c5;\n                    peg$currPos += 2;\n                  } else {\n                    s2 = peg$FAILED;\n                  }\n                  if (s2 !== peg$FAILED) {\n                    s3 = peg$parsetaglist();\n                    if (s3 === peg$FAILED) {\n                      s3 = null;\n                    }\n                    s4 = [];\n                    s5 = peg$parsenex_with_space();\n                    while (s5 !== peg$FAILED) {\n                      s4.push(s5);\n                      s5 = peg$parsenex_with_space();\n                    }\n                    s5 = peg$parse_();\n                    rule$expects(peg$e6);\n                    if (input.substr(peg$currPos, 2) === peg$c6) {\n                      s6 = peg$c6;\n                      peg$currPos += 2;\n                    } else {\n                      s6 = peg$FAILED;\n                    }\n                    if (s6 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s0 = peg$f11(s1, s3, s4);\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  s1 = peg$parseprivate_data_section();\n                  if (s1 !== peg$FAILED) {\n                    rule$expects(peg$e7);\n                    if (input.substr(peg$currPos, 2) === peg$c7) {\n                      s2 = peg$c7;\n                      peg$currPos += 2;\n                    } else {\n                      s2 = peg$FAILED;\n                    }\n                    if (s2 !== peg$FAILED) {\n                      s3 = peg$parsetaglist();\n                      if (s3 === peg$FAILED) {\n                        s3 = null;\n                      }\n                      s4 = [];\n                      s5 = peg$parsenex_with_space();\n                      while (s5 !== peg$FAILED) {\n                        s4.push(s5);\n                        s5 = peg$parsenex_with_space();\n                      }\n                      s5 = peg$parse_();\n                      rule$expects(peg$e8);\n                      if (input.substr(peg$currPos, 2) === peg$c8) {\n                        s6 = peg$c8;\n                        peg$currPos += 2;\n                      } else {\n                        s6 = peg$FAILED;\n                      }\n                      if (s6 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s0 = peg$f12(s1, s3, s4);\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseexp_list() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e10);\n    if (input.substr(peg$currPos, 2) === peg$c10) {\n      s1 = peg$c10;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseprivate_data_section();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e1);\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetaglist();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          s5 = [];\n          s6 = peg$parsenex_with_space();\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$parsenex_with_space();\n          }\n          s6 = peg$parse_();\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f13(s2, s4, s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e10);\n      if (input.substr(peg$currPos, 2) === peg$c10) {\n        s1 = peg$c10;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseprivate_data_section();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e3);\n          if (input.substr(peg$currPos, 2) === peg$c3) {\n            s3 = peg$c3;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetaglist();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            s5 = [];\n            s6 = peg$parsenex_with_space();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsenex_with_space();\n            }\n            s6 = peg$parse_();\n            rule$expects(peg$e4);\n            if (input.substr(peg$currPos, 2) === peg$c4) {\n              s7 = peg$c4;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f13(s2, s4, s5);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        rule$expects(peg$e10);\n        if (input.substr(peg$currPos, 2) === peg$c10) {\n          s1 = peg$c10;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseprivate_data_section();\n          if (s2 !== peg$FAILED) {\n            rule$expects(peg$e5);\n            if (input.substr(peg$currPos, 2) === peg$c5) {\n              s3 = peg$c5;\n              peg$currPos += 2;\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsetaglist();\n              if (s4 === peg$FAILED) {\n                s4 = null;\n              }\n              s5 = [];\n              s6 = peg$parsenex_with_space();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsenex_with_space();\n              }\n              s6 = peg$parse_();\n              rule$expects(peg$e6);\n              if (input.substr(peg$currPos, 2) === peg$c6) {\n                s7 = peg$c6;\n                peg$currPos += 2;\n              } else {\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s0 = peg$f14(s2, s4, s5);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          rule$expects(peg$e10);\n          if (input.substr(peg$currPos, 2) === peg$c10) {\n            s1 = peg$c10;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseprivate_data_section();\n            if (s2 !== peg$FAILED) {\n              rule$expects(peg$e7);\n              if (input.substr(peg$currPos, 2) === peg$c7) {\n                s3 = peg$c7;\n                peg$currPos += 2;\n              } else {\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parsetaglist();\n                if (s4 === peg$FAILED) {\n                  s4 = null;\n                }\n                s5 = [];\n                s6 = peg$parsenex_with_space();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parsenex_with_space();\n                }\n                s6 = peg$parse_();\n                rule$expects(peg$e8);\n                if (input.substr(peg$currPos, 2) === peg$c8) {\n                  s7 = peg$c8;\n                  peg$currPos += 2;\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s0 = peg$f15(s2, s4, s5);\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            rule$expects(peg$e11);\n            if (input.charCodeAt(peg$currPos) === 42) {\n              s1 = peg$c11;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parseprivate_data_section();\n              if (s2 !== peg$FAILED) {\n                rule$expects(peg$e1);\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s3 = peg$c1;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parsetaglist();\n                  if (s4 === peg$FAILED) {\n                    s4 = null;\n                  }\n                  s5 = [];\n                  s6 = peg$parsenex_with_space();\n                  while (s6 !== peg$FAILED) {\n                    s5.push(s6);\n                    s6 = peg$parsenex_with_space();\n                  }\n                  s6 = peg$parse_();\n                  rule$expects(peg$e2);\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s7 = peg$c2;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s0 = peg$f16(s2, s4, s5);\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              rule$expects(peg$e11);\n              if (input.charCodeAt(peg$currPos) === 42) {\n                s1 = peg$c11;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseprivate_data_section();\n                if (s2 !== peg$FAILED) {\n                  rule$expects(peg$e3);\n                  if (input.substr(peg$currPos, 2) === peg$c3) {\n                    s3 = peg$c3;\n                    peg$currPos += 2;\n                  } else {\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parsetaglist();\n                    if (s4 === peg$FAILED) {\n                      s4 = null;\n                    }\n                    s5 = [];\n                    s6 = peg$parsenex_with_space();\n                    while (s6 !== peg$FAILED) {\n                      s5.push(s6);\n                      s6 = peg$parsenex_with_space();\n                    }\n                    s6 = peg$parse_();\n                    rule$expects(peg$e4);\n                    if (input.substr(peg$currPos, 2) === peg$c4) {\n                      s7 = peg$c4;\n                      peg$currPos += 2;\n                    } else {\n                      s7 = peg$FAILED;\n                    }\n                    if (s7 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s0 = peg$f16(s2, s4, s5);\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                rule$expects(peg$e11);\n                if (input.charCodeAt(peg$currPos) === 42) {\n                  s1 = peg$c11;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parseprivate_data_section();\n                  if (s2 !== peg$FAILED) {\n                    rule$expects(peg$e5);\n                    if (input.substr(peg$currPos, 2) === peg$c5) {\n                      s3 = peg$c5;\n                      peg$currPos += 2;\n                    } else {\n                      s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parsetaglist();\n                      if (s4 === peg$FAILED) {\n                        s4 = null;\n                      }\n                      s5 = [];\n                      s6 = peg$parsenex_with_space();\n                      while (s6 !== peg$FAILED) {\n                        s5.push(s6);\n                        s6 = peg$parsenex_with_space();\n                      }\n                      s6 = peg$parse_();\n                      rule$expects(peg$e6);\n                      if (input.substr(peg$currPos, 2) === peg$c6) {\n                        s7 = peg$c6;\n                        peg$currPos += 2;\n                      } else {\n                        s7 = peg$FAILED;\n                      }\n                      if (s7 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s0 = peg$f17(s2, s4, s5);\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  rule$expects(peg$e11);\n                  if (input.charCodeAt(peg$currPos) === 42) {\n                    s1 = peg$c11;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parseprivate_data_section();\n                    if (s2 !== peg$FAILED) {\n                      rule$expects(peg$e7);\n                      if (input.substr(peg$currPos, 2) === peg$c7) {\n                        s3 = peg$c7;\n                        peg$currPos += 2;\n                      } else {\n                        s3 = peg$FAILED;\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parsetaglist();\n                        if (s4 === peg$FAILED) {\n                          s4 = null;\n                        }\n                        s5 = [];\n                        s6 = peg$parsenex_with_space();\n                        while (s6 !== peg$FAILED) {\n                          s5.push(s6);\n                          s6 = peg$parsenex_with_space();\n                        }\n                        s6 = peg$parse_();\n                        rule$expects(peg$e8);\n                        if (input.substr(peg$currPos, 2) === peg$c8) {\n                          s7 = peg$c8;\n                          peg$currPos += 2;\n                        } else {\n                          s7 = peg$FAILED;\n                        }\n                        if (s7 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s0 = peg$f18(s2, s4, s5);\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parselambda_list() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e12);\n    if (input.substr(peg$currPos, 2) === peg$c12) {\n      s1 = peg$c12;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseprivate_data_section();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e1);\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetaglist();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          s5 = [];\n          s6 = peg$parsenex_with_space();\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$parsenex_with_space();\n          }\n          s6 = peg$parse_();\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f19(s2, s4, s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e12);\n      if (input.substr(peg$currPos, 2) === peg$c12) {\n        s1 = peg$c12;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseprivate_data_section();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e3);\n          if (input.substr(peg$currPos, 2) === peg$c3) {\n            s3 = peg$c3;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetaglist();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            s5 = [];\n            s6 = peg$parsenex_with_space();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsenex_with_space();\n            }\n            s6 = peg$parse_();\n            rule$expects(peg$e4);\n            if (input.substr(peg$currPos, 2) === peg$c4) {\n              s7 = peg$c4;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f19(s2, s4, s5);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        rule$expects(peg$e12);\n        if (input.substr(peg$currPos, 2) === peg$c12) {\n          s1 = peg$c12;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseprivate_data_section();\n          if (s2 !== peg$FAILED) {\n            rule$expects(peg$e5);\n            if (input.substr(peg$currPos, 2) === peg$c5) {\n              s3 = peg$c5;\n              peg$currPos += 2;\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsetaglist();\n              if (s4 === peg$FAILED) {\n                s4 = null;\n              }\n              s5 = [];\n              s6 = peg$parsenex_with_space();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsenex_with_space();\n              }\n              s6 = peg$parse_();\n              rule$expects(peg$e6);\n              if (input.substr(peg$currPos, 2) === peg$c6) {\n                s7 = peg$c6;\n                peg$currPos += 2;\n              } else {\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s0 = peg$f20(s2, s4, s5);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          rule$expects(peg$e12);\n          if (input.substr(peg$currPos, 2) === peg$c12) {\n            s1 = peg$c12;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseprivate_data_section();\n            if (s2 !== peg$FAILED) {\n              rule$expects(peg$e7);\n              if (input.substr(peg$currPos, 2) === peg$c7) {\n                s3 = peg$c7;\n                peg$currPos += 2;\n              } else {\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parsetaglist();\n                if (s4 === peg$FAILED) {\n                  s4 = null;\n                }\n                s5 = [];\n                s6 = peg$parsenex_with_space();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parsenex_with_space();\n                }\n                s6 = peg$parse_();\n                rule$expects(peg$e8);\n                if (input.substr(peg$currPos, 2) === peg$c8) {\n                  s7 = peg$c8;\n                  peg$currPos += 2;\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s0 = peg$f21(s2, s4, s5);\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            rule$expects(peg$e13);\n            if (input.charCodeAt(peg$currPos) === 38) {\n              s1 = peg$c13;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parseprivate_data_section();\n              if (s2 !== peg$FAILED) {\n                rule$expects(peg$e1);\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s3 = peg$c1;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parsetaglist();\n                  if (s4 === peg$FAILED) {\n                    s4 = null;\n                  }\n                  s5 = [];\n                  s6 = peg$parsenex_with_space();\n                  while (s6 !== peg$FAILED) {\n                    s5.push(s6);\n                    s6 = peg$parsenex_with_space();\n                  }\n                  s6 = peg$parse_();\n                  rule$expects(peg$e2);\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s7 = peg$c2;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s0 = peg$f22(s2, s4, s5);\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              rule$expects(peg$e13);\n              if (input.charCodeAt(peg$currPos) === 38) {\n                s1 = peg$c13;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseprivate_data_section();\n                if (s2 !== peg$FAILED) {\n                  rule$expects(peg$e3);\n                  if (input.substr(peg$currPos, 2) === peg$c3) {\n                    s3 = peg$c3;\n                    peg$currPos += 2;\n                  } else {\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parsetaglist();\n                    if (s4 === peg$FAILED) {\n                      s4 = null;\n                    }\n                    s5 = [];\n                    s6 = peg$parsenex_with_space();\n                    while (s6 !== peg$FAILED) {\n                      s5.push(s6);\n                      s6 = peg$parsenex_with_space();\n                    }\n                    s6 = peg$parse_();\n                    rule$expects(peg$e4);\n                    if (input.substr(peg$currPos, 2) === peg$c4) {\n                      s7 = peg$c4;\n                      peg$currPos += 2;\n                    } else {\n                      s7 = peg$FAILED;\n                    }\n                    if (s7 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s0 = peg$f22(s2, s4, s5);\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                rule$expects(peg$e13);\n                if (input.charCodeAt(peg$currPos) === 38) {\n                  s1 = peg$c13;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parseprivate_data_section();\n                  if (s2 !== peg$FAILED) {\n                    rule$expects(peg$e5);\n                    if (input.substr(peg$currPos, 2) === peg$c5) {\n                      s3 = peg$c5;\n                      peg$currPos += 2;\n                    } else {\n                      s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parsetaglist();\n                      if (s4 === peg$FAILED) {\n                        s4 = null;\n                      }\n                      s5 = [];\n                      s6 = peg$parsenex_with_space();\n                      while (s6 !== peg$FAILED) {\n                        s5.push(s6);\n                        s6 = peg$parsenex_with_space();\n                      }\n                      s6 = peg$parse_();\n                      rule$expects(peg$e6);\n                      if (input.substr(peg$currPos, 2) === peg$c6) {\n                        s7 = peg$c6;\n                        peg$currPos += 2;\n                      } else {\n                        s7 = peg$FAILED;\n                      }\n                      if (s7 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s0 = peg$f23(s2, s4, s5);\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  rule$expects(peg$e13);\n                  if (input.charCodeAt(peg$currPos) === 38) {\n                    s1 = peg$c13;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parseprivate_data_section();\n                    if (s2 !== peg$FAILED) {\n                      rule$expects(peg$e7);\n                      if (input.substr(peg$currPos, 2) === peg$c7) {\n                        s3 = peg$c7;\n                        peg$currPos += 2;\n                      } else {\n                        s3 = peg$FAILED;\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parsetaglist();\n                        if (s4 === peg$FAILED) {\n                          s4 = null;\n                        }\n                        s5 = [];\n                        s6 = peg$parsenex_with_space();\n                        while (s6 !== peg$FAILED) {\n                          s5.push(s6);\n                          s6 = peg$parsenex_with_space();\n                        }\n                        s6 = peg$parse_();\n                        rule$expects(peg$e8);\n                        if (input.substr(peg$currPos, 2) === peg$c8) {\n                          s7 = peg$c8;\n                          peg$currPos += 2;\n                        } else {\n                          s7 = peg$FAILED;\n                        }\n                        if (s7 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s0 = peg$f24(s2, s4, s5);\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecmd_list() {\n    var s0, s1, s2, s3, s4, s5, s6, s7, s8, s9;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e14);\n    if (input.substr(peg$currPos, 2) === peg$c14) {\n      s1 = peg$c14;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseprivate_data_section();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e1);\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetaglist();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          s5 = [];\n          s6 = peg$parsenex_with_space();\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$parsenex_with_space();\n          }\n          s6 = peg$parse_();\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f25(s2, s4, s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e14);\n      if (input.substr(peg$currPos, 2) === peg$c14) {\n        s1 = peg$c14;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseprivate_data_section();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e3);\n          if (input.substr(peg$currPos, 2) === peg$c3) {\n            s3 = peg$c3;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetaglist();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            s5 = [];\n            s6 = peg$parsenex_with_space();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsenex_with_space();\n            }\n            s6 = peg$parse_();\n            rule$expects(peg$e4);\n            if (input.substr(peg$currPos, 2) === peg$c4) {\n              s7 = peg$c4;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f25(s2, s4, s5);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        rule$expects(peg$e14);\n        if (input.substr(peg$currPos, 2) === peg$c14) {\n          s1 = peg$c14;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseprivate_data_section();\n          if (s2 !== peg$FAILED) {\n            rule$expects(peg$e5);\n            if (input.substr(peg$currPos, 2) === peg$c5) {\n              s3 = peg$c5;\n              peg$currPos += 2;\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsetaglist();\n              if (s4 === peg$FAILED) {\n                s4 = null;\n              }\n              s5 = [];\n              s6 = peg$parsenex_with_space();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsenex_with_space();\n              }\n              s6 = peg$parse_();\n              rule$expects(peg$e6);\n              if (input.substr(peg$currPos, 2) === peg$c6) {\n                s7 = peg$c6;\n                peg$currPos += 2;\n              } else {\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s0 = peg$f26(s2, s4, s5);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          rule$expects(peg$e14);\n          if (input.substr(peg$currPos, 2) === peg$c14) {\n            s1 = peg$c14;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseprivate_data_section();\n            if (s2 !== peg$FAILED) {\n              rule$expects(peg$e7);\n              if (input.substr(peg$currPos, 2) === peg$c7) {\n                s3 = peg$c7;\n                peg$currPos += 2;\n              } else {\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parsetaglist();\n                if (s4 === peg$FAILED) {\n                  s4 = null;\n                }\n                s5 = [];\n                s6 = peg$parsenex_with_space();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parsenex_with_space();\n                }\n                s6 = peg$parse_();\n                rule$expects(peg$e8);\n                if (input.substr(peg$currPos, 2) === peg$c8) {\n                  s7 = peg$c8;\n                  peg$currPos += 2;\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s0 = peg$f27(s2, s4, s5);\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            rule$expects(peg$e14);\n            if (input.substr(peg$currPos, 2) === peg$c14) {\n              s1 = peg$c14;\n              peg$currPos += 2;\n            } else {\n              s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parseprivate_data_section();\n              if (s2 !== peg$FAILED) {\n                rule$expects(peg$e1);\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s3 = peg$c1;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parsetaglist();\n                  if (s4 === peg$FAILED) {\n                    s4 = null;\n                  }\n                  s5 = peg$parsecmd_name();\n                  if (s5 !== peg$FAILED) {\n                    s6 = [];\n                    s7 = peg$parsews();\n                    if (s7 !== peg$FAILED) {\n                      while (s7 !== peg$FAILED) {\n                        s6.push(s7);\n                        s7 = peg$parsews();\n                      }\n                    } else {\n                      s6 = peg$FAILED;\n                    }\n                    if (s6 !== peg$FAILED) {\n                      s7 = [];\n                      s8 = peg$parsenex_with_space();\n                      while (s8 !== peg$FAILED) {\n                        s7.push(s8);\n                        s8 = peg$parsenex_with_space();\n                      }\n                      s8 = peg$parse_();\n                      rule$expects(peg$e2);\n                      if (input.charCodeAt(peg$currPos) === 41) {\n                        s9 = peg$c2;\n                        peg$currPos++;\n                      } else {\n                        s9 = peg$FAILED;\n                      }\n                      if (s9 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s0 = peg$f28(s2, s4, s5, s7);\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              rule$expects(peg$e14);\n              if (input.substr(peg$currPos, 2) === peg$c14) {\n                s1 = peg$c14;\n                peg$currPos += 2;\n              } else {\n                s1 = peg$FAILED;\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseprivate_data_section();\n                if (s2 !== peg$FAILED) {\n                  rule$expects(peg$e3);\n                  if (input.substr(peg$currPos, 2) === peg$c3) {\n                    s3 = peg$c3;\n                    peg$currPos += 2;\n                  } else {\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parsetaglist();\n                    if (s4 === peg$FAILED) {\n                      s4 = null;\n                    }\n                    s5 = peg$parsecmd_name();\n                    if (s5 !== peg$FAILED) {\n                      s6 = [];\n                      s7 = peg$parsews();\n                      if (s7 !== peg$FAILED) {\n                        while (s7 !== peg$FAILED) {\n                          s6.push(s7);\n                          s7 = peg$parsews();\n                        }\n                      } else {\n                        s6 = peg$FAILED;\n                      }\n                      if (s6 !== peg$FAILED) {\n                        s7 = [];\n                        s8 = peg$parsenex_with_space();\n                        while (s8 !== peg$FAILED) {\n                          s7.push(s8);\n                          s8 = peg$parsenex_with_space();\n                        }\n                        s8 = peg$parse_();\n                        rule$expects(peg$e4);\n                        if (input.substr(peg$currPos, 2) === peg$c4) {\n                          s9 = peg$c4;\n                          peg$currPos += 2;\n                        } else {\n                          s9 = peg$FAILED;\n                        }\n                        if (s9 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s0 = peg$f28(s2, s4, s5, s7);\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                rule$expects(peg$e14);\n                if (input.substr(peg$currPos, 2) === peg$c14) {\n                  s1 = peg$c14;\n                  peg$currPos += 2;\n                } else {\n                  s1 = peg$FAILED;\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parseprivate_data_section();\n                  if (s2 !== peg$FAILED) {\n                    rule$expects(peg$e5);\n                    if (input.substr(peg$currPos, 2) === peg$c5) {\n                      s3 = peg$c5;\n                      peg$currPos += 2;\n                    } else {\n                      s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parsetaglist();\n                      if (s4 === peg$FAILED) {\n                        s4 = null;\n                      }\n                      s5 = peg$parsecmd_name();\n                      if (s5 !== peg$FAILED) {\n                        s6 = [];\n                        s7 = peg$parsews();\n                        if (s7 !== peg$FAILED) {\n                          while (s7 !== peg$FAILED) {\n                            s6.push(s7);\n                            s7 = peg$parsews();\n                          }\n                        } else {\n                          s6 = peg$FAILED;\n                        }\n                        if (s6 !== peg$FAILED) {\n                          s7 = [];\n                          s8 = peg$parsenex_with_space();\n                          while (s8 !== peg$FAILED) {\n                            s7.push(s8);\n                            s8 = peg$parsenex_with_space();\n                          }\n                          s8 = peg$parse_();\n                          rule$expects(peg$e6);\n                          if (input.substr(peg$currPos, 2) === peg$c6) {\n                            s9 = peg$c6;\n                            peg$currPos += 2;\n                          } else {\n                            s9 = peg$FAILED;\n                          }\n                          if (s9 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s0 = peg$f29(s2, s4, s5, s7);\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  rule$expects(peg$e14);\n                  if (input.substr(peg$currPos, 2) === peg$c14) {\n                    s1 = peg$c14;\n                    peg$currPos += 2;\n                  } else {\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parseprivate_data_section();\n                    if (s2 !== peg$FAILED) {\n                      rule$expects(peg$e7);\n                      if (input.substr(peg$currPos, 2) === peg$c7) {\n                        s3 = peg$c7;\n                        peg$currPos += 2;\n                      } else {\n                        s3 = peg$FAILED;\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parsetaglist();\n                        if (s4 === peg$FAILED) {\n                          s4 = null;\n                        }\n                        s5 = peg$parsecmd_name();\n                        if (s5 !== peg$FAILED) {\n                          s6 = [];\n                          s7 = peg$parsews();\n                          if (s7 !== peg$FAILED) {\n                            while (s7 !== peg$FAILED) {\n                              s6.push(s7);\n                              s7 = peg$parsews();\n                            }\n                          } else {\n                            s6 = peg$FAILED;\n                          }\n                          if (s6 !== peg$FAILED) {\n                            s7 = [];\n                            s8 = peg$parsenex_with_space();\n                            while (s8 !== peg$FAILED) {\n                              s7.push(s8);\n                              s8 = peg$parsenex_with_space();\n                            }\n                            s8 = peg$parse_();\n                            rule$expects(peg$e8);\n                            if (input.substr(peg$currPos, 2) === peg$c8) {\n                              s9 = peg$c8;\n                              peg$currPos += 2;\n                            } else {\n                              s9 = peg$FAILED;\n                            }\n                            if (s9 !== peg$FAILED) {\n                              peg$savedPos = s0;\n                              s0 = peg$f30(s2, s4, s5, s7);\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$currPos;\n                    rule$expects(peg$e15);\n                    if (input.charCodeAt(peg$currPos) === 126) {\n                      s1 = peg$c15;\n                      peg$currPos++;\n                    } else {\n                      s1 = peg$FAILED;\n                    }\n                    if (s1 !== peg$FAILED) {\n                      s2 = peg$parseprivate_data_section();\n                      if (s2 !== peg$FAILED) {\n                        rule$expects(peg$e1);\n                        if (input.charCodeAt(peg$currPos) === 40) {\n                          s3 = peg$c1;\n                          peg$currPos++;\n                        } else {\n                          s3 = peg$FAILED;\n                        }\n                        if (s3 !== peg$FAILED) {\n                          s4 = peg$parsetaglist();\n                          if (s4 === peg$FAILED) {\n                            s4 = null;\n                          }\n                          s5 = [];\n                          s6 = peg$parsenex_with_space();\n                          while (s6 !== peg$FAILED) {\n                            s5.push(s6);\n                            s6 = peg$parsenex_with_space();\n                          }\n                          s6 = peg$parse_();\n                          rule$expects(peg$e2);\n                          if (input.charCodeAt(peg$currPos) === 41) {\n                            s7 = peg$c2;\n                            peg$currPos++;\n                          } else {\n                            s7 = peg$FAILED;\n                          }\n                          if (s7 !== peg$FAILED) {\n                            peg$savedPos = s0;\n                            s0 = peg$f31(s2, s4, s5);\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$currPos;\n                      rule$expects(peg$e15);\n                      if (input.charCodeAt(peg$currPos) === 126) {\n                        s1 = peg$c15;\n                        peg$currPos++;\n                      } else {\n                        s1 = peg$FAILED;\n                      }\n                      if (s1 !== peg$FAILED) {\n                        s2 = peg$parseprivate_data_section();\n                        if (s2 !== peg$FAILED) {\n                          rule$expects(peg$e3);\n                          if (input.substr(peg$currPos, 2) === peg$c3) {\n                            s3 = peg$c3;\n                            peg$currPos += 2;\n                          } else {\n                            s3 = peg$FAILED;\n                          }\n                          if (s3 !== peg$FAILED) {\n                            s4 = peg$parsetaglist();\n                            if (s4 === peg$FAILED) {\n                              s4 = null;\n                            }\n                            s5 = [];\n                            s6 = peg$parsenex_with_space();\n                            while (s6 !== peg$FAILED) {\n                              s5.push(s6);\n                              s6 = peg$parsenex_with_space();\n                            }\n                            s6 = peg$parse_();\n                            rule$expects(peg$e4);\n                            if (input.substr(peg$currPos, 2) === peg$c4) {\n                              s7 = peg$c4;\n                              peg$currPos += 2;\n                            } else {\n                              s7 = peg$FAILED;\n                            }\n                            if (s7 !== peg$FAILED) {\n                              peg$savedPos = s0;\n                              s0 = peg$f31(s2, s4, s5);\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$currPos;\n                        rule$expects(peg$e15);\n                        if (input.charCodeAt(peg$currPos) === 126) {\n                          s1 = peg$c15;\n                          peg$currPos++;\n                        } else {\n                          s1 = peg$FAILED;\n                        }\n                        if (s1 !== peg$FAILED) {\n                          s2 = peg$parseprivate_data_section();\n                          if (s2 !== peg$FAILED) {\n                            rule$expects(peg$e5);\n                            if (input.substr(peg$currPos, 2) === peg$c5) {\n                              s3 = peg$c5;\n                              peg$currPos += 2;\n                            } else {\n                              s3 = peg$FAILED;\n                            }\n                            if (s3 !== peg$FAILED) {\n                              s4 = peg$parsetaglist();\n                              if (s4 === peg$FAILED) {\n                                s4 = null;\n                              }\n                              s5 = [];\n                              s6 = peg$parsenex_with_space();\n                              while (s6 !== peg$FAILED) {\n                                s5.push(s6);\n                                s6 = peg$parsenex_with_space();\n                              }\n                              s6 = peg$parse_();\n                              rule$expects(peg$e6);\n                              if (input.substr(peg$currPos, 2) === peg$c6) {\n                                s7 = peg$c6;\n                                peg$currPos += 2;\n                              } else {\n                                s7 = peg$FAILED;\n                              }\n                              if (s7 !== peg$FAILED) {\n                                peg$savedPos = s0;\n                                s0 = peg$f32(s2, s4, s5);\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$currPos;\n                          rule$expects(peg$e15);\n                          if (input.charCodeAt(peg$currPos) === 126) {\n                            s1 = peg$c15;\n                            peg$currPos++;\n                          } else {\n                            s1 = peg$FAILED;\n                          }\n                          if (s1 !== peg$FAILED) {\n                            s2 = peg$parseprivate_data_section();\n                            if (s2 !== peg$FAILED) {\n                              rule$expects(peg$e7);\n                              if (input.substr(peg$currPos, 2) === peg$c7) {\n                                s3 = peg$c7;\n                                peg$currPos += 2;\n                              } else {\n                                s3 = peg$FAILED;\n                              }\n                              if (s3 !== peg$FAILED) {\n                                s4 = peg$parsetaglist();\n                                if (s4 === peg$FAILED) {\n                                  s4 = null;\n                                }\n                                s5 = [];\n                                s6 = peg$parsenex_with_space();\n                                while (s6 !== peg$FAILED) {\n                                  s5.push(s6);\n                                  s6 = peg$parsenex_with_space();\n                                }\n                                s6 = peg$parse_();\n                                rule$expects(peg$e8);\n                                if (input.substr(peg$currPos, 2) === peg$c8) {\n                                  s7 = peg$c8;\n                                  peg$currPos += 2;\n                                } else {\n                                  s7 = peg$FAILED;\n                                }\n                                if (s7 !== peg$FAILED) {\n                                  peg$savedPos = s0;\n                                  s0 = peg$f33(s2, s4, s5);\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                          } else {\n                            peg$currPos = s0;\n                            s0 = peg$FAILED;\n                          }\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$currPos;\n                            rule$expects(peg$e15);\n                            if (input.charCodeAt(peg$currPos) === 126) {\n                              s1 = peg$c15;\n                              peg$currPos++;\n                            } else {\n                              s1 = peg$FAILED;\n                            }\n                            if (s1 !== peg$FAILED) {\n                              s2 = peg$parseprivate_data_section();\n                              if (s2 !== peg$FAILED) {\n                                rule$expects(peg$e1);\n                                if (input.charCodeAt(peg$currPos) === 40) {\n                                  s3 = peg$c1;\n                                  peg$currPos++;\n                                } else {\n                                  s3 = peg$FAILED;\n                                }\n                                if (s3 !== peg$FAILED) {\n                                  s4 = peg$parsetaglist();\n                                  if (s4 === peg$FAILED) {\n                                    s4 = null;\n                                  }\n                                  s5 = peg$parsecmd_name();\n                                  if (s5 !== peg$FAILED) {\n                                    s6 = [];\n                                    s7 = peg$parsews();\n                                    if (s7 !== peg$FAILED) {\n                                      while (s7 !== peg$FAILED) {\n                                        s6.push(s7);\n                                        s7 = peg$parsews();\n                                      }\n                                    } else {\n                                      s6 = peg$FAILED;\n                                    }\n                                    if (s6 !== peg$FAILED) {\n                                      s7 = [];\n                                      s8 = peg$parsenex_with_space();\n                                      while (s8 !== peg$FAILED) {\n                                        s7.push(s8);\n                                        s8 = peg$parsenex_with_space();\n                                      }\n                                      s8 = peg$parse_();\n                                      rule$expects(peg$e2);\n                                      if (input.charCodeAt(peg$currPos) === 41) {\n                                        s9 = peg$c2;\n                                        peg$currPos++;\n                                      } else {\n                                        s9 = peg$FAILED;\n                                      }\n                                      if (s9 !== peg$FAILED) {\n                                        peg$savedPos = s0;\n                                        s0 = peg$f34(s2, s4, s5, s7);\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                            } else {\n                              peg$currPos = s0;\n                              s0 = peg$FAILED;\n                            }\n                            if (s0 === peg$FAILED) {\n                              s0 = peg$currPos;\n                              rule$expects(peg$e15);\n                              if (input.charCodeAt(peg$currPos) === 126) {\n                                s1 = peg$c15;\n                                peg$currPos++;\n                              } else {\n                                s1 = peg$FAILED;\n                              }\n                              if (s1 !== peg$FAILED) {\n                                s2 = peg$parseprivate_data_section();\n                                if (s2 !== peg$FAILED) {\n                                  rule$expects(peg$e3);\n                                  if (input.substr(peg$currPos, 2) === peg$c3) {\n                                    s3 = peg$c3;\n                                    peg$currPos += 2;\n                                  } else {\n                                    s3 = peg$FAILED;\n                                  }\n                                  if (s3 !== peg$FAILED) {\n                                    s4 = peg$parsetaglist();\n                                    if (s4 === peg$FAILED) {\n                                      s4 = null;\n                                    }\n                                    s5 = peg$parsecmd_name();\n                                    if (s5 !== peg$FAILED) {\n                                      s6 = [];\n                                      s7 = peg$parsews();\n                                      if (s7 !== peg$FAILED) {\n                                        while (s7 !== peg$FAILED) {\n                                          s6.push(s7);\n                                          s7 = peg$parsews();\n                                        }\n                                      } else {\n                                        s6 = peg$FAILED;\n                                      }\n                                      if (s6 !== peg$FAILED) {\n                                        s7 = [];\n                                        s8 = peg$parsenex_with_space();\n                                        while (s8 !== peg$FAILED) {\n                                          s7.push(s8);\n                                          s8 = peg$parsenex_with_space();\n                                        }\n                                        s8 = peg$parse_();\n                                        rule$expects(peg$e4);\n                                        if (input.substr(peg$currPos, 2) === peg$c4) {\n                                          s9 = peg$c4;\n                                          peg$currPos += 2;\n                                        } else {\n                                          s9 = peg$FAILED;\n                                        }\n                                        if (s9 !== peg$FAILED) {\n                                          peg$savedPos = s0;\n                                          s0 = peg$f34(s2, s4, s5, s7);\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                              } else {\n                                peg$currPos = s0;\n                                s0 = peg$FAILED;\n                              }\n                              if (s0 === peg$FAILED) {\n                                s0 = peg$currPos;\n                                rule$expects(peg$e15);\n                                if (input.charCodeAt(peg$currPos) === 126) {\n                                  s1 = peg$c15;\n                                  peg$currPos++;\n                                } else {\n                                  s1 = peg$FAILED;\n                                }\n                                if (s1 !== peg$FAILED) {\n                                  s2 = peg$parseprivate_data_section();\n                                  if (s2 !== peg$FAILED) {\n                                    rule$expects(peg$e5);\n                                    if (input.substr(peg$currPos, 2) === peg$c5) {\n                                      s3 = peg$c5;\n                                      peg$currPos += 2;\n                                    } else {\n                                      s3 = peg$FAILED;\n                                    }\n                                    if (s3 !== peg$FAILED) {\n                                      s4 = peg$parsetaglist();\n                                      if (s4 === peg$FAILED) {\n                                        s4 = null;\n                                      }\n                                      s5 = peg$parsecmd_name();\n                                      if (s5 !== peg$FAILED) {\n                                        s6 = [];\n                                        s7 = peg$parsews();\n                                        if (s7 !== peg$FAILED) {\n                                          while (s7 !== peg$FAILED) {\n                                            s6.push(s7);\n                                            s7 = peg$parsews();\n                                          }\n                                        } else {\n                                          s6 = peg$FAILED;\n                                        }\n                                        if (s6 !== peg$FAILED) {\n                                          s7 = [];\n                                          s8 = peg$parsenex_with_space();\n                                          while (s8 !== peg$FAILED) {\n                                            s7.push(s8);\n                                            s8 = peg$parsenex_with_space();\n                                          }\n                                          s8 = peg$parse_();\n                                          rule$expects(peg$e6);\n                                          if (input.substr(peg$currPos, 2) === peg$c6) {\n                                            s9 = peg$c6;\n                                            peg$currPos += 2;\n                                          } else {\n                                            s9 = peg$FAILED;\n                                          }\n                                          if (s9 !== peg$FAILED) {\n                                            peg$savedPos = s0;\n                                            s0 = peg$f35(s2, s4, s5, s7);\n                                          } else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                } else {\n                                  peg$currPos = s0;\n                                  s0 = peg$FAILED;\n                                }\n                                if (s0 === peg$FAILED) {\n                                  s0 = peg$currPos;\n                                  rule$expects(peg$e15);\n                                  if (input.charCodeAt(peg$currPos) === 126) {\n                                    s1 = peg$c15;\n                                    peg$currPos++;\n                                  } else {\n                                    s1 = peg$FAILED;\n                                  }\n                                  if (s1 !== peg$FAILED) {\n                                    s2 = peg$parseprivate_data_section();\n                                    if (s2 !== peg$FAILED) {\n                                      rule$expects(peg$e7);\n                                      if (input.substr(peg$currPos, 2) === peg$c7) {\n                                        s3 = peg$c7;\n                                        peg$currPos += 2;\n                                      } else {\n                                        s3 = peg$FAILED;\n                                      }\n                                      if (s3 !== peg$FAILED) {\n                                        s4 = peg$parsetaglist();\n                                        if (s4 === peg$FAILED) {\n                                          s4 = null;\n                                        }\n                                        s5 = peg$parsecmd_name();\n                                        if (s5 !== peg$FAILED) {\n                                          s6 = [];\n                                          s7 = peg$parsews();\n                                          if (s7 !== peg$FAILED) {\n                                            while (s7 !== peg$FAILED) {\n                                              s6.push(s7);\n                                              s7 = peg$parsews();\n                                            }\n                                          } else {\n                                            s6 = peg$FAILED;\n                                          }\n                                          if (s6 !== peg$FAILED) {\n                                            s7 = [];\n                                            s8 = peg$parsenex_with_space();\n                                            while (s8 !== peg$FAILED) {\n                                              s7.push(s8);\n                                              s8 = peg$parsenex_with_space();\n                                            }\n                                            s8 = peg$parse_();\n                                            rule$expects(peg$e8);\n                                            if (input.substr(peg$currPos, 2) === peg$c8) {\n                                              s9 = peg$c8;\n                                              peg$currPos += 2;\n                                            } else {\n                                              s9 = peg$FAILED;\n                                            }\n                                            if (s9 !== peg$FAILED) {\n                                              peg$savedPos = s0;\n                                              s0 = peg$f36(s2, s4, s5, s7);\n                                            } else {\n                                              peg$currPos = s0;\n                                              s0 = peg$FAILED;\n                                            }\n                                          } else {\n                                            peg$currPos = s0;\n                                            s0 = peg$FAILED;\n                                          }\n                                        } else {\n                                          peg$currPos = s0;\n                                          s0 = peg$FAILED;\n                                        }\n                                      } else {\n                                        peg$currPos = s0;\n                                        s0 = peg$FAILED;\n                                      }\n                                    } else {\n                                      peg$currPos = s0;\n                                      s0 = peg$FAILED;\n                                    }\n                                  } else {\n                                    peg$currPos = s0;\n                                    s0 = peg$FAILED;\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseinstantiator_list() {\n    var s0, s1, s2, s3, s4, s5, s6, s7;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e16);\n    if (input.substr(peg$currPos, 2) === peg$c16) {\n      s1 = peg$c16;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseprivate_data_section();\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e1);\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s3 = peg$c1;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s4 = peg$parsetaglist();\n          if (s4 === peg$FAILED) {\n            s4 = null;\n          }\n          s5 = [];\n          s6 = peg$parsenex_with_space();\n          while (s6 !== peg$FAILED) {\n            s5.push(s6);\n            s6 = peg$parsenex_with_space();\n          }\n          s6 = peg$parse_();\n          rule$expects(peg$e2);\n          if (input.charCodeAt(peg$currPos) === 41) {\n            s7 = peg$c2;\n            peg$currPos++;\n          } else {\n            s7 = peg$FAILED;\n          }\n          if (s7 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f37(s2, s4, s5);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e16);\n      if (input.substr(peg$currPos, 2) === peg$c16) {\n        s1 = peg$c16;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseprivate_data_section();\n        if (s2 !== peg$FAILED) {\n          rule$expects(peg$e3);\n          if (input.substr(peg$currPos, 2) === peg$c3) {\n            s3 = peg$c3;\n            peg$currPos += 2;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parsetaglist();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            s5 = [];\n            s6 = peg$parsenex_with_space();\n            while (s6 !== peg$FAILED) {\n              s5.push(s6);\n              s6 = peg$parsenex_with_space();\n            }\n            s6 = peg$parse_();\n            rule$expects(peg$e4);\n            if (input.substr(peg$currPos, 2) === peg$c4) {\n              s7 = peg$c4;\n              peg$currPos += 2;\n            } else {\n              s7 = peg$FAILED;\n            }\n            if (s7 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f37(s2, s4, s5);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        rule$expects(peg$e16);\n        if (input.substr(peg$currPos, 2) === peg$c16) {\n          s1 = peg$c16;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parseprivate_data_section();\n          if (s2 !== peg$FAILED) {\n            rule$expects(peg$e5);\n            if (input.substr(peg$currPos, 2) === peg$c5) {\n              s3 = peg$c5;\n              peg$currPos += 2;\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parsetaglist();\n              if (s4 === peg$FAILED) {\n                s4 = null;\n              }\n              s5 = [];\n              s6 = peg$parsenex_with_space();\n              while (s6 !== peg$FAILED) {\n                s5.push(s6);\n                s6 = peg$parsenex_with_space();\n              }\n              s6 = peg$parse_();\n              rule$expects(peg$e6);\n              if (input.substr(peg$currPos, 2) === peg$c6) {\n                s7 = peg$c6;\n                peg$currPos += 2;\n              } else {\n                s7 = peg$FAILED;\n              }\n              if (s7 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s0 = peg$f38(s2, s4, s5);\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          rule$expects(peg$e16);\n          if (input.substr(peg$currPos, 2) === peg$c16) {\n            s1 = peg$c16;\n            peg$currPos += 2;\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parseprivate_data_section();\n            if (s2 !== peg$FAILED) {\n              rule$expects(peg$e7);\n              if (input.substr(peg$currPos, 2) === peg$c7) {\n                s3 = peg$c7;\n                peg$currPos += 2;\n              } else {\n                s3 = peg$FAILED;\n              }\n              if (s3 !== peg$FAILED) {\n                s4 = peg$parsetaglist();\n                if (s4 === peg$FAILED) {\n                  s4 = null;\n                }\n                s5 = [];\n                s6 = peg$parsenex_with_space();\n                while (s6 !== peg$FAILED) {\n                  s5.push(s6);\n                  s6 = peg$parsenex_with_space();\n                }\n                s6 = peg$parse_();\n                rule$expects(peg$e8);\n                if (input.substr(peg$currPos, 2) === peg$c8) {\n                  s7 = peg$c8;\n                  peg$currPos += 2;\n                } else {\n                  s7 = peg$FAILED;\n                }\n                if (s7 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s0 = peg$f39(s2, s4, s5);\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            rule$expects(peg$e17);\n            if (input.charCodeAt(peg$currPos) === 94) {\n              s1 = peg$c17;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parseprivate_data_section();\n              if (s2 !== peg$FAILED) {\n                rule$expects(peg$e1);\n                if (input.charCodeAt(peg$currPos) === 40) {\n                  s3 = peg$c1;\n                  peg$currPos++;\n                } else {\n                  s3 = peg$FAILED;\n                }\n                if (s3 !== peg$FAILED) {\n                  s4 = peg$parsetaglist();\n                  if (s4 === peg$FAILED) {\n                    s4 = null;\n                  }\n                  s5 = [];\n                  s6 = peg$parsenex_with_space();\n                  while (s6 !== peg$FAILED) {\n                    s5.push(s6);\n                    s6 = peg$parsenex_with_space();\n                  }\n                  s6 = peg$parse_();\n                  rule$expects(peg$e2);\n                  if (input.charCodeAt(peg$currPos) === 41) {\n                    s7 = peg$c2;\n                    peg$currPos++;\n                  } else {\n                    s7 = peg$FAILED;\n                  }\n                  if (s7 !== peg$FAILED) {\n                    peg$savedPos = s0;\n                    s0 = peg$f40(s2, s4, s5);\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n            if (s0 === peg$FAILED) {\n              s0 = peg$currPos;\n              rule$expects(peg$e17);\n              if (input.charCodeAt(peg$currPos) === 94) {\n                s1 = peg$c17;\n                peg$currPos++;\n              } else {\n                s1 = peg$FAILED;\n              }\n              if (s1 !== peg$FAILED) {\n                s2 = peg$parseprivate_data_section();\n                if (s2 !== peg$FAILED) {\n                  rule$expects(peg$e3);\n                  if (input.substr(peg$currPos, 2) === peg$c3) {\n                    s3 = peg$c3;\n                    peg$currPos += 2;\n                  } else {\n                    s3 = peg$FAILED;\n                  }\n                  if (s3 !== peg$FAILED) {\n                    s4 = peg$parsetaglist();\n                    if (s4 === peg$FAILED) {\n                      s4 = null;\n                    }\n                    s5 = [];\n                    s6 = peg$parsenex_with_space();\n                    while (s6 !== peg$FAILED) {\n                      s5.push(s6);\n                      s6 = peg$parsenex_with_space();\n                    }\n                    s6 = peg$parse_();\n                    rule$expects(peg$e4);\n                    if (input.substr(peg$currPos, 2) === peg$c4) {\n                      s7 = peg$c4;\n                      peg$currPos += 2;\n                    } else {\n                      s7 = peg$FAILED;\n                    }\n                    if (s7 !== peg$FAILED) {\n                      peg$savedPos = s0;\n                      s0 = peg$f40(s2, s4, s5);\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n              if (s0 === peg$FAILED) {\n                s0 = peg$currPos;\n                rule$expects(peg$e17);\n                if (input.charCodeAt(peg$currPos) === 94) {\n                  s1 = peg$c17;\n                  peg$currPos++;\n                } else {\n                  s1 = peg$FAILED;\n                }\n                if (s1 !== peg$FAILED) {\n                  s2 = peg$parseprivate_data_section();\n                  if (s2 !== peg$FAILED) {\n                    rule$expects(peg$e5);\n                    if (input.substr(peg$currPos, 2) === peg$c5) {\n                      s3 = peg$c5;\n                      peg$currPos += 2;\n                    } else {\n                      s3 = peg$FAILED;\n                    }\n                    if (s3 !== peg$FAILED) {\n                      s4 = peg$parsetaglist();\n                      if (s4 === peg$FAILED) {\n                        s4 = null;\n                      }\n                      s5 = [];\n                      s6 = peg$parsenex_with_space();\n                      while (s6 !== peg$FAILED) {\n                        s5.push(s6);\n                        s6 = peg$parsenex_with_space();\n                      }\n                      s6 = peg$parse_();\n                      rule$expects(peg$e6);\n                      if (input.substr(peg$currPos, 2) === peg$c6) {\n                        s7 = peg$c6;\n                        peg$currPos += 2;\n                      } else {\n                        s7 = peg$FAILED;\n                      }\n                      if (s7 !== peg$FAILED) {\n                        peg$savedPos = s0;\n                        s0 = peg$f41(s2, s4, s5);\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n                if (s0 === peg$FAILED) {\n                  s0 = peg$currPos;\n                  rule$expects(peg$e17);\n                  if (input.charCodeAt(peg$currPos) === 94) {\n                    s1 = peg$c17;\n                    peg$currPos++;\n                  } else {\n                    s1 = peg$FAILED;\n                  }\n                  if (s1 !== peg$FAILED) {\n                    s2 = peg$parseprivate_data_section();\n                    if (s2 !== peg$FAILED) {\n                      rule$expects(peg$e7);\n                      if (input.substr(peg$currPos, 2) === peg$c7) {\n                        s3 = peg$c7;\n                        peg$currPos += 2;\n                      } else {\n                        s3 = peg$FAILED;\n                      }\n                      if (s3 !== peg$FAILED) {\n                        s4 = peg$parsetaglist();\n                        if (s4 === peg$FAILED) {\n                          s4 = null;\n                        }\n                        s5 = [];\n                        s6 = peg$parsenex_with_space();\n                        while (s6 !== peg$FAILED) {\n                          s5.push(s6);\n                          s6 = peg$parsenex_with_space();\n                        }\n                        s6 = peg$parse_();\n                        rule$expects(peg$e8);\n                        if (input.substr(peg$currPos, 2) === peg$c8) {\n                          s7 = peg$c8;\n                          peg$currPos += 2;\n                        } else {\n                          s7 = peg$FAILED;\n                        }\n                        if (s7 !== peg$FAILED) {\n                          peg$savedPos = s0;\n                          s0 = peg$f42(s2, s4, s5);\n                        } else {\n                          peg$currPos = s0;\n                          s0 = peg$FAILED;\n                        }\n                      } else {\n                        peg$currPos = s0;\n                        s0 = peg$FAILED;\n                      }\n                    } else {\n                      peg$currPos = s0;\n                      s0 = peg$FAILED;\n                    }\n                  } else {\n                    peg$currPos = s0;\n                    s0 = peg$FAILED;\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsecmd_name() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$currPos;\n    rule$expects(peg$e18);\n    if (input.charCodeAt(peg$currPos) === 58) {\n      s2 = peg$c18;\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      rule$expects(peg$e19);\n      if (peg$r0.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        rule$expects(peg$e19);\n        if (peg$r0.test(input.charAt(peg$currPos))) {\n          s4 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          s2 = [s2, s3, s4];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s1;\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f43(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      rule$expects(peg$e18);\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s2 = peg$c18;\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n      if (s2 !== peg$FAILED) {\n        rule$expects(peg$e19);\n        if (peg$r0.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f43(s1);\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = [];\n        rule$expects(peg$e20);\n        if (peg$r1.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n        }\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          rule$expects(peg$e20);\n          if (peg$r1.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n          }\n        }\n        peg$savedPos = s0;\n        s1 = peg$f44(s1);\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseinstantiator_org_name() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    if (peg$r2.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    while (s2 !== peg$FAILED) {\n      s1.push(s2);\n      if (peg$r2.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n      }\n    }\n    peg$savedPos = s0;\n    s1 = peg$f44(s1);\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsechildren_in_parens() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    if (input.charCodeAt(peg$currPos) === 40) {\n      s1 = peg$c1;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsenex_with_space();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsenex_with_space();\n      }\n      s3 = peg$parse_();\n      if (input.charCodeAt(peg$currPos) === 41) {\n        s4 = peg$c2;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f45(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenex_with_space() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    s2 = peg$parsenex();\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s0 = peg$f0(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseatom() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$parseboolean_expression();\n    if (s0 === peg$FAILED) {\n      s0 = peg$parsesymbol_expression();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseinteger_expression();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parsestring_expression();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parseerror_expression();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsefloat_expression();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parseinstance_atom();\n              }\n            }\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseinstance_atom() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parsenonmutable_instance_name();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseprivate_data_section();\n      if (s2 !== peg$FAILED) {\n        s3 = peg$parsetaglist();\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = peg$currPos;\n        peg$begin();\n        rule$expects(peg$e1);\n        if (input.charCodeAt(peg$currPos) === 40) {\n          s5 = peg$c1;\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        peg$end(true);\n        if (s5 === peg$FAILED) {\n          s4 = undefined;\n        } else {\n          peg$currPos = s4;\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f46(s1, s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      s1 = peg$parseinstance_name();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseprivate_data_section();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parsetaglist();\n          if (s3 === peg$FAILED) {\n            s3 = null;\n          }\n          s4 = peg$currPos;\n          peg$begin();\n          rule$expects(peg$e1);\n          if (input.charCodeAt(peg$currPos) === 40) {\n            s5 = peg$c1;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n          }\n          peg$end(true);\n          if (s5 === peg$FAILED) {\n            s4 = undefined;\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          if (s4 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f47(s1, s2, s3);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseinstance_name() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e21);\n    if (input.charCodeAt(peg$currPos) === 91) {\n      s1 = peg$c19;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseinstance_name_data();\n      rule$expects(peg$e22);\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s3 = peg$c20;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f48(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsenonmutable_instance_name() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e23);\n    if (input.substr(peg$currPos, 2) === peg$c21) {\n      s1 = peg$c21;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parseinstance_name_data();\n      rule$expects(peg$e22);\n      if (input.charCodeAt(peg$currPos) === 93) {\n        s3 = peg$c20;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f48(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseinstance_name_data() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = [];\n    rule$expects(peg$e24);\n    if (peg$r3.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      rule$expects(peg$e24);\n      if (peg$r3.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseboolean_expression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e25);\n    if (input.substr(peg$currPos, 2) === peg$c22) {\n      s1 = peg$c22;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetaglist();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      rule$expects(peg$e26);\n      if (input.substr(peg$currPos, 3) === peg$c23) {\n        s3 = peg$c23;\n        peg$currPos += 3;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f49(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e25);\n      if (input.substr(peg$currPos, 2) === peg$c22) {\n        s1 = peg$c22;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsetaglist();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        rule$expects(peg$e27);\n        if (input.substr(peg$currPos, 2) === peg$c24) {\n          s3 = peg$c24;\n          peg$currPos += 2;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f50(s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        rule$expects(peg$e28);\n        if (input.charCodeAt(peg$currPos) === 33) {\n          s1 = peg$c25;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parsetaglist();\n          if (s2 === peg$FAILED) {\n            s2 = null;\n          }\n          rule$expects(peg$e26);\n          if (input.substr(peg$currPos, 3) === peg$c23) {\n            s3 = peg$c23;\n            peg$currPos += 3;\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s0 = peg$f51(s2);\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          rule$expects(peg$e28);\n          if (input.charCodeAt(peg$currPos) === 33) {\n            s1 = peg$c25;\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n          }\n          if (s1 !== peg$FAILED) {\n            s2 = peg$parsetaglist();\n            if (s2 === peg$FAILED) {\n              s2 = null;\n            }\n            rule$expects(peg$e27);\n            if (input.substr(peg$currPos, 2) === peg$c24) {\n              s3 = peg$c24;\n              peg$currPos += 2;\n            } else {\n              s3 = peg$FAILED;\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s0 = peg$f52(s2);\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        }\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesymbol_expression() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e29);\n    if (input.substr(peg$currPos, 2) === peg$c26) {\n      s1 = peg$c26;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetaglist();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = [];\n      s4 = peg$parsesymbol_char();\n      if (s4 !== peg$FAILED) {\n        while (s4 !== peg$FAILED) {\n          s3.push(s4);\n          s4 = peg$parsesymbol_char();\n        }\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f53(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e30);\n      if (input.charCodeAt(peg$currPos) === 64) {\n        s1 = peg$c27;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsetaglist();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        s3 = [];\n        s4 = peg$parsesymbol_char();\n        if (s4 !== peg$FAILED) {\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$parsesymbol_char();\n          }\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f54(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsesymbol_char() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e20);\n    if (peg$r1.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f55(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e31);\n      if (input.charCodeAt(peg$currPos) === 95) {\n        s1 = peg$c28;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$currPos;\n        peg$begin();\n        rule$expects(peg$e2);\n        if (input.charCodeAt(peg$currPos) === 41) {\n          s3 = peg$c2;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        peg$end(true);\n        if (s3 === peg$FAILED) {\n          s2 = undefined;\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f56();\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger_expression() {\n    var s0, s1, s2, s3, s4, s5;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e32);\n    if (input.substr(peg$currPos, 2) === peg$c29) {\n      s1 = peg$c29;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetaglist();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      rule$expects(peg$e33);\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s3 = peg$c30;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 === peg$FAILED) {\n        s3 = null;\n      }\n      s4 = [];\n      rule$expects(peg$e34);\n      if (peg$r4.test(input.charAt(peg$currPos))) {\n        s5 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s5 = peg$FAILED;\n      }\n      if (s5 !== peg$FAILED) {\n        while (s5 !== peg$FAILED) {\n          s4.push(s5);\n          rule$expects(peg$e34);\n          if (peg$r4.test(input.charAt(peg$currPos))) {\n            s5 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n          }\n        }\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f57(s2, s3, s4);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e35);\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c31;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsetaglist();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        rule$expects(peg$e33);\n        if (input.charCodeAt(peg$currPos) === 45) {\n          s3 = peg$c30;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 === peg$FAILED) {\n          s3 = null;\n        }\n        s4 = [];\n        rule$expects(peg$e34);\n        if (peg$r4.test(input.charAt(peg$currPos))) {\n          s5 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s5 = peg$FAILED;\n        }\n        if (s5 !== peg$FAILED) {\n          while (s5 !== peg$FAILED) {\n            s4.push(s5);\n            rule$expects(peg$e34);\n            if (peg$r4.test(input.charAt(peg$currPos))) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n            }\n          }\n        } else {\n          s4 = peg$FAILED;\n        }\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f58(s2, s3, s4);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsestring_expression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e36);\n    if (input.substr(peg$currPos, 2) === peg$c32) {\n      s1 = peg$c32;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetaglist();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseprivate_data_section();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f59(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e37);\n      if (input.charCodeAt(peg$currPos) === 36) {\n        s1 = peg$c33;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsetaglist();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        s3 = peg$parseprivate_data_section();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f60(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseerror_expression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e38);\n    if (input.charCodeAt(peg$currPos) === 63) {\n      s1 = peg$c34;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetaglist();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parseprivate_data_section();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f61(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsefloat_expression() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e39);\n    if (input.substr(peg$currPos, 2) === peg$c35) {\n      s1 = peg$c35;\n      peg$currPos += 2;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = peg$parsetaglist();\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      s3 = peg$parsefloat_digits();\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f62(s2, s3);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e40);\n      if (input.charCodeAt(peg$currPos) === 37) {\n        s1 = peg$c36;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsetaglist();\n        if (s2 === peg$FAILED) {\n          s2 = null;\n        }\n        s3 = peg$parsefloat_digits();\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f63(s2, s3);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsefloat_digits() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parseinteger_part();\n    if (s1 !== peg$FAILED) {\n      s2 = peg$currPos;\n      rule$expects(peg$e41);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s3 = peg$c37;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        s4 = peg$parsedecimal_part();\n        if (s4 !== peg$FAILED) {\n          peg$savedPos = s2;\n          s2 = peg$f64(s1, s4);\n        } else {\n          peg$currPos = s2;\n          s2 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s2;\n        s2 = peg$FAILED;\n      }\n      if (s2 === peg$FAILED) {\n        s2 = null;\n      }\n      peg$savedPos = s0;\n      s0 = peg$f65(s1, s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e41);\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c37;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parsedecimal_part();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f66(s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseinteger_part() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    rule$expects(peg$e34);\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        rule$expects(peg$e34);\n        if (peg$r4.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f67(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e33);\n      if (input.charCodeAt(peg$currPos) === 45) {\n        s1 = peg$c30;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        rule$expects(peg$e34);\n        if (peg$r4.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            rule$expects(peg$e34);\n            if (peg$r4.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f68(s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parsedecimal_part() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = [];\n    rule$expects(peg$e34);\n    if (peg$r4.test(input.charAt(peg$currPos))) {\n      s2 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s2 = peg$FAILED;\n    }\n    if (s2 !== peg$FAILED) {\n      while (s2 !== peg$FAILED) {\n        s1.push(s2);\n        rule$expects(peg$e34);\n        if (peg$r4.test(input.charAt(peg$currPos))) {\n          s2 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n        }\n      }\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f67(s1);\n    }\n    s0 = s1;\n\n    return s0;\n  }\n\n  function peg$parsetaglist() {\n    var s0, s1, s2, s3, s4;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e42);\n    if (input.charCodeAt(peg$currPos) === 60) {\n      s1 = peg$c38;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      s3 = peg$parsetagwithspace();\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        s3 = peg$parsetagwithspace();\n      }\n      s3 = peg$parse_();\n      rule$expects(peg$e43);\n      if (input.charCodeAt(peg$currPos) === 62) {\n        s4 = peg$c39;\n        peg$currPos++;\n      } else {\n        s4 = peg$FAILED;\n      }\n      if (s4 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f69(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetagwithspace() {\n    var s0, s1, s2;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    s1 = peg$parse_();\n    s2 = peg$parsetag();\n    if (s2 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s0 = peg$f70(s2);\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parsetag() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e44);\n    if (input.charCodeAt(peg$currPos) === 96) {\n      s1 = peg$c40;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      rule$expects(peg$e45);\n      if (peg$r5.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        rule$expects(peg$e45);\n        if (peg$r5.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n      }\n      rule$expects(peg$e44);\n      if (input.charCodeAt(peg$currPos) === 96) {\n        s3 = peg$c40;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f71(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n  function peg$parseprivate_data_section() {\n    var s0, s1, s2, s3;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e46);\n    if (input.charCodeAt(peg$currPos) === 34) {\n      s1 = peg$c41;\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      s2 = [];\n      rule$expects(peg$e47);\n      if (peg$r6.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        rule$expects(peg$e47);\n        if (peg$r6.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n      }\n      rule$expects(peg$e46);\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s3 = peg$c41;\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n      }\n      if (s3 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s0 = peg$f72(s2);\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n    } else {\n      peg$currPos = s0;\n      s0 = peg$FAILED;\n    }\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e48);\n      if (input.charCodeAt(peg$currPos) === 123) {\n        s1 = peg$c42;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseescaped_private_data();\n        rule$expects(peg$e49);\n        if (input.charCodeAt(peg$currPos) === 125) {\n          s3 = peg$c43;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n        }\n        if (s3 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s0 = peg$f72(s2);\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = '';\n        peg$savedPos = s0;\n        s1 = peg$f73();\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parseescaped_private_data() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = [];\n    s1 = peg$parseprivate_data_item();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parseprivate_data_item();\n    }\n\n    return s0;\n  }\n\n  function peg$parseprivate_data_item() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = peg$currPos;\n    rule$expects(peg$e50);\n    if (peg$r7.test(input.charAt(peg$currPos))) {\n      s1 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s1 = peg$FAILED;\n    }\n    if (s1 !== peg$FAILED) {\n      peg$savedPos = s0;\n      s1 = peg$f74(s1);\n    }\n    s0 = s1;\n    if (s0 === peg$FAILED) {\n      s0 = peg$currPos;\n      rule$expects(peg$e51);\n      if (input.substr(peg$currPos, 2) === peg$c44) {\n        s1 = peg$c44;\n        peg$currPos += 2;\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$f75();\n      }\n      s0 = s1;\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        rule$expects(peg$e52);\n        if (input.substr(peg$currPos, 2) === peg$c45) {\n          s1 = peg$c45;\n          peg$currPos += 2;\n        } else {\n          s1 = peg$FAILED;\n        }\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$f76();\n        }\n        s0 = s1;\n      }\n    }\n\n    return s0;\n  }\n\n  function peg$parse_() {\n    var s0, s1;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    s0 = [];\n    s1 = peg$parsews();\n    while (s1 !== peg$FAILED) {\n      s0.push(s1);\n      s1 = peg$parsews();\n    }\n\n    return s0;\n  }\n\n  function peg$parsews() {\n    var s0;\n\n    var rule$expects = function (expected) {\n      if (peg$silentFails === 0) peg$expect(expected);\n    }\n\n    rule$expects(peg$e53);\n    if (peg$r8.test(input.charAt(peg$currPos))) {\n      s0 = input.charAt(peg$currPos);\n      peg$currPos++;\n    } else {\n      s0 = peg$FAILED;\n    }\n\n    return s0;\n  }\n\n\n    const RIGHT_BRACE = String.fromCharCode(125);\n    const BACKTICK = String.fromCharCode(96);\n\n\n  peg$begin();\n  peg$result = peg$startRuleFunction();\n\n  if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n    return peg$result;\n  } else {\n    if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n      peg$expect(peg$endExpectation());\n    }\n\n    throw peg$buildError();\n  }\n}\n\nexport {\n  peg$SyntaxError as SyntaxError,\n  peg$parse as parse\n};\n\nexport default {\n  SyntaxError: peg$SyntaxError,\n  parse: peg$parse\n};\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from './utils.js'\n\nimport { Nex } from './nex/nex.js';\n\nimport { constructBool } from './nex/bool.js';\nimport { constructInteger } from './nex/integer.js';\nimport { constructESymbol } from './nex/esymbol.js';\nimport { constructEString } from './nex/estring.js';\nimport { constructFloat } from './nex/float.js';\nimport { constructNil } from './nex/nil.js';\nimport { constructOrg } from './nex/org.js';\nimport { constructInstantiator } from './nex/instantiator.js';\nimport { constructDeferredCommand } from './nex/deferredcommand.js';\nimport { constructLambda } from './nex/lambda.js';\nimport { constructCommand } from './nex/command.js';\nimport { constructWord } from './nex/word.js';\nimport { constructWavetable } from './nex/wavetable.js';\nimport { constructSurface } from './nex/surface.js';\nimport { constructLine } from './nex/line.js';\nimport { constructDoc } from './nex/doc.js';\nimport { constructEError, newTagOrThrowOOM } from './nex/eerror.js';\nimport { constructLetter } from './nex/letter.js';\nimport { constructSeparator } from './nex/separator.js';\n\nimport { Tag } from './tag.js'\n\nfunction concatParserString(arr) {\n\tif (arr == null) {\n\t\treturn '';\n\t}\n\treturn arr.join('');\n}\n\nfunction decorateNex(nex, tags, nonmutable) {\n\tif (!nonmutable) {\n\t\tnex.setMutable(true);\n\t}\t\t\n\tif (!tags) {\n\t\treturn nex;\n\t}\n\tfor (let i = 0; i < tags.length; i++) {\n\t\tlet fixedTag = concatParserString(tags[i]);\n\t\tnex.addTag(newTagOrThrowOOM(fixedTag, 'parsing saved data'));\n\t}\n\treturn nex;\n}\n\nfunction appendChildrenToListType(listtype, children) {\n\tfor (let i = 0; i < children.length ; i++) {\n\t\tlisttype.appendChild(children[i]);\n\t}\n\treturn listtype;\t\n}\n\nfunction setPrivateData(obj, parserStr) {\n\tlet str = concatParserString(parserStr);\n\tobj.deserializePrivateData(str);\n\treturn obj;\n}\n\nfunction setVertHoriz(obj, vh) {\n\tif (vh == 'v') {\n\t\tobj.setVertical();\n\t} else if (vh == 'h') {\n\t\tobj.setHorizontal();\n\t} else if (vh == 'z') {\n\t\tobj.setZdirectional();\n\t} else {\n\t\tthrow new Error('unknown verthoriz code');\n\t}\n}\n\nfunction makeInteger(negation, digits, taglist, nonmutable) {\n\tlet n = Number(concatParserString(digits));\n\tif (negation) {\n\t\tn = -n;\n\t}\n\treturn decorateNex(constructInteger(n), taglist, nonmutable);\n}\n\nfunction makeSymbol(letters, taglist, nonmutable) {\n\treturn decorateNex(constructESymbol(concatParserString(letters)), taglist, nonmutable);\n}\n\nfunction makeString(privateData, taglist, nonmutable) {\n\tlet str = constructEString();\n\tsetPrivateData(str, privateData);\n\treturn decorateNex(str, taglist, nonmutable);\n}\n\nfunction makeError(privateData, taglist, nonmutable) {\n\tlet err = constructEError();\n\tsetPrivateData(err, privateData);\n\treturn decorateNex(err, taglist, nonmutable);\n}\n\nfunction makeFloat(contents, taglist, nonmutable) {\n\treturn decorateNex(constructFloat(contents), taglist, nonmutable);\n}\n\nfunction makeBool(val, taglist, nonmutable) {\n\treturn decorateNex(constructBool(val), taglist, nonmutable);\n}\n\nfunction makeNil(taglist, nonmutable) {\n\treturn decorateNex(constructNil(), taglist, nonmutable);\n}\n\nfunction makeOrgList(children, privateData, taglist, verthoriz, nonmutable) {\n\tlet t = constructOrg();\n\tappendChildrenToListType(t, children);\n\tsetPrivateData(t, privateData);\n\tdecorateNex(t, taglist, nonmutable);\n\tsetVertHoriz(t, verthoriz);\n\treturn t;\n}\n\nfunction makeDeferredCommandList(children, privateData, taglist, verthoriz, nonmutable) {\n\tlet t = constructDeferredCommand();\n\tappendChildrenToListType(t, children);\n\tsetPrivateData(t, privateData);\n\tdecorateNex(t, taglist, nonmutable);\n\tsetVertHoriz(t, verthoriz);\n\treturn t;\n}\n\nfunction makeLambdaList(children, privateData, taglist, verthoriz, nonmutable) {\n\tlet t = constructLambda();\n\tappendChildrenToListType(t, children);\n\tsetPrivateData(t, privateData);\n\tdecorateNex(t, taglist, nonmutable);\n\tsetVertHoriz(t, verthoriz);\n\treturn t;\n}\n\nfunction makeCommandList(name, children, privateData, taglist, verthoriz, nonmutable) {\n\tlet cmdname = Utils.convertV2StringToMath(concatParserString(name));\n\tlet t = constructCommand(cmdname);\n\tappendChildrenToListType(t, children);\n\tsetPrivateData(t, privateData);\n\tdecorateNex(t, taglist, nonmutable);\n\tsetVertHoriz(t, verthoriz);\n\treturn t;\n}\n\nfunction makeInstantiatorList(children, privateData, taglist, verthoriz, nonmutable) {\n\tlet t = constructInstantiator('');\n\tappendChildrenToListType(t, children);\n\tsetPrivateData(t, privateData);\n\tdecorateNex(t, taglist, nonmutable);\n\tsetVertHoriz(t, verthoriz);\n\treturn t;\n}\n\nfunction makeInstanceAtom(instname, privatedata, taglist, nonmutable) {\n\t// currently only letter, separator, and newline supported\n\tlet name = concatParserString(instname);\n\tlet t = null;\n\tlet isList = false;\n\tswitch(name) {\n\t\tcase 'newline': // so I can parse old files\n\t\t\tt = constructNil();\n\t\t\tbreak;\n\t\tcase 'nil':\n\t\t\tt = constructNil();\n\t\t\tbreak;\n\t\tcase 'wavetable':\n\t\t\tt = constructWavetable(0);\n\t\t\tbreak;\n\t\tcase 'surface':\n\t\t\tt = constructSurface(concatParserString(privatedata));\n\t\t\tbreak;\n\t\tcase 'letter':\n\t\t\tt = constructLetter(concatParserString(privatedata));\n\t\t\tbreak;\n\t\tcase 'separator':\n\t\t\tt = constructSeparator(concatParserString(privatedata));\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error('unrecognized instance type: ' + instname);\n\t}\n\tsetPrivateData(t, privatedata);\n\tdecorateNex(t, taglist, nonmutable);\n\treturn t;}\n\nfunction makeInstanceList(instname, children, privatedata, taglist, verthoriz, nonmutable) {\n\t// currently only word, doc, and line supported\n\tlet name = concatParserString(instname);\n\tlet t = null;\n\tlet isList = false;\n\tswitch(name) {\n\t\tcase 'word':\n\t\t\tt = constructWord();\n\t\t\tisList = true;\n\t\t\tbreak;\n\t\tcase 'line':\n\t\t\tt = constructLine();\n\t\t\tisList = true;\n\t\t\tbreak;\n\t\tcase 'doc':\n\t\t\tt = constructDoc();\n\t\t\tisList = true;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthrow new Error('unrecognized list instance type: ' + instname);\n\t}\n\tappendChildrenToListType(t, children);\n\tsetPrivateData(t, privatedata);\n\tdecorateNex(t, taglist, nonmutable);\n\tsetVertHoriz(t, verthoriz);\n\treturn t;\n}\n\nexport {\n\tmakeBool,\n\tmakeNil,\n\tmakeFloat,\n\tmakeString,\n\tmakeInteger,\n\tmakeSymbol,\n\tmakeCommandList,\n\tmakeLambdaList,\n\tmakeOrgList,\n\tmakeDeferredCommandList,\n\tmakeInstanceList,\n\tmakeInstanceAtom,\n\tmakeInstantiatorList,\n\tmakeError\n}\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { Builtin } from '../nex/builtin.js'\nimport { constructFatalError } from '../nex/eerror.js'\nimport { Command } from '../nex/command.js'; \nimport { constructNil } from '../nex/nil.js'; \nimport { constructOrg } from '../nex/org.js';\nimport { constructInteger } from '../nex/integer.js';\nimport { UNBOUND } from '../environment.js'\nimport { experiments } from '../globalappflags.js'\nimport { sEval } from '../syntheticroot.js'\nimport { systemState } from '../systemstate.js'\n\n\nfunction createIterationBuiltins() {\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tBuiltin.createBuiltin(\n\t\t'filter',\n\t\t[ 'list()', 'func&' ],\n\t\tfunction $filterWith(env, executionEnvironment) {\n\t\t\tlet list = env.lb('list');\n\t\t\tlet closure = env.lb('func');\n\t\t\tlet resultList = list.makeCopy(true /* shallow */);\n\t\t\tlet appendIterator = null;\n\t\t\tlet i = 0;\n\t\t\ttry {\n\t\t\t\tlist.doForEachChild(function(item) {\n\t\t\t\t\tlet result = sEval(systemState.getSCF().makeCommandWithClosureOneArg(closure, systemState.getSCF(). makeQuote(item)),\n\t\t\t\t\t\t\t\t\t   executionEnvironment,\n\t\t\t\t\t\t\t\t\t   `filter: error returned from item ${i+1}`,\n\t\t\t\t\t\t\t\t\t   true /* throw errors */);\n\t\t\t\t\tif (!Utils.isBool(result)) {\n\t\t\t\t\t\tthrow constructFatalError('filter-with: filter function must return boolean.');\n\t\t\t\t\t}\n\t\t\t\t\tif (result.getTypedValue()) {\n\t\t\t\t\t\tappendIterator = resultList.fastAppendChildAfter(list.getChildAt(i), appendIterator);\n\t\t\t\t\t}\n\t\t\t\t\ti++;\n\t\t\t\t})\n\t\t\t} catch (e) {\n\t\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\t\treturn e;\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resultList;\n\t\t},\n\t\t'Returns a new list containing only the elements of |list for which |func calls true when it is called on that element. Aliases: filter with'\n\t);\n\n\tBuiltin.aliasBuiltin('filter with', 'filter');\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -\n\n\n\tBuiltin.createBuiltin(\n\t\t'map',\n\t\t[ 'list()', 'func&' ],\n\t\tfunction $mapWith(env, executionEnvironment) {\n\t\t\tlet closure = env.lb('func');\n\t\t\tlet list = env.lb('list');\n\t\t\t// until we congeal things down to a single list type\n\t\t\t// I'll try to honor the list type of the starting list\n\t\t\tlet resultList = list.makeCopy(true /* shallow */);\n\t\t\tlet appendIterator = null;\n\t\t\tlet i = 0;\n\t\t\ttry {\n\t\t\t\tlist.doForEachChild(function(item) {\n\t\t\t\t\tlet result = sEval(systemState.getSCF().makeCommandWithClosureOneArg(closure, systemState.getSCF(). makeQuote(item)),\n\t\t\t\t\t\t\t\t\t   executionEnvironment,\n\t\t\t\t\t\t\t\t\t   `map: error returned from item ${i+1}`,\n\t\t\t\t\t\t\t\t\t   true /* throw errors */);\n\t\t\t\t\tappendIterator = resultList.fastAppendChildAfter(result, appendIterator);\n\t\t\t\t\ti++;\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\t\treturn e;\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn resultList;\n\t\t},\n\t\t'Goes through all the elements in |list and replaces each one with the result of calling |func on that element. Aliases: map with'\n\t);\n\n\tBuiltin.aliasBuiltin('map with', 'map');\n\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -\n\n\tBuiltin.createBuiltin(\n\t\t'reduce',\n\t\t[ 'list()', 'func&', 'startvalue' ],\n\t\tfunction $reduceWithGiven(env, executionEnvironment) {\n\t\t\tlet list = env.lb('list');\n\t\t\tlet closure = env.lb('func');\n\t\t\tlet sn = env.lb('startvalue');\n\t\t\tlet p = sn;\n\t\t\tlet i = 0;\n\t\t\ttry {\n\t\t\t\tlist.doForEachChild(function(item) {\n\t\t\t\t\tp = sEval(systemState.getSCF().makeCommandWithClosureTwoArgs(closure, systemState.getSCF(). makeQuote(item), systemState.getSCF(). makeQuote(p)),\n\t\t\t\t\t\t\t\t\t   executionEnvironment,\n\t\t\t\t\t\t\t\t\t   `reduce: error returned from item ${i+1}`,\n\t\t\t\t\t\t\t\t\t   true /* throw errors */);\n\t\t\t\t\ti++;\n\t\t\t\t});\n\t\t\t} catch(e) {\n\t\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\t\treturn e;\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn p;\n\t\t},\n\t\t'Progressively updates a value, starting with |startvalue, by calling |func on each element in |list, passing in 1. the list element and 2. the progressively updated value, returning the final updated value. Aliases: reduce with, reduce with starting'\n\t);\n\n\tBuiltin.aliasBuiltin('reduce with', 'reduce');\n\tBuiltin.aliasBuiltin('reduce with starting', 'reduce');\n\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\n\tBuiltin.createBuiltin(\n\t\t'loop over',\n\t\t[ 'func&', 'list()' ],\n\t\tfunction $loopOver(env, executionEnvironment) {\n\t\t\tlet closure = env.lb('func');\n\t\t\tlet list = env.lb('list');\n\t\t\tlet result = null;\n\t\t\tlet i = 0;\n\t\t\ttry {\n\t\t\t\tlist.doForEachChild(function(item) {\n\t\t\t\t\tresult = sEval(systemState.getSCF().makeCommandWithClosureOneArg(closure, systemState.getSCF(). makeQuote(item)),\n\t\t\t\t\t\t\t\t\t   executionEnvironment,\n\t\t\t\t\t\t\t\t\t   `loop-over: error returned when processing input ${i+1}`,\n\t\t\t\t\t\t\t\t\t   true /* throw errors */);\n\t\t\t\t\ti++;\n\t\t\t\t});\n\t\t\t} catch (e) {\n\t\t\t\tif (Utils.isFatalError(e)) {\n\t\t\t\t\treturn e;\n\t\t\t\t} else {\n\t\t\t\t\tthrow e;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result ? result : constructNil();\n\t\t},\n\t\t'Loops over a list, evaluating a function on each member, and returning the last result.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'range',\n\t\t[ 'startorstop#', 'stop#?', 'inc#?' ],\n\t\tfunction $range(env, executionEnvironment) {\n\t\t\tlet startorstop_n = env.lb('startorstop');\n\t\t\tlet stop_n = env.lb('stop');\n\t\t\tlet inc_n = env.lb('inc');\n\t\t\tlet start = 0;\n\t\t\tlet stop = 0;\n\t\t\tlet inc = 1;\n\t\t\tif (stop_n == UNBOUND) {\n\t\t\t\tstop = startorstop_n.getTypedValue();\n\t\t\t} else {\n\t\t\t\tstart = startorstop_n.getTypedValue();\n\t\t\t\tstop = stop_n.getTypedValue();\n\t\t\t\tif (inc_n != UNBOUND) {\n\t\t\t\t\tinc = inc_n.getTypedValue();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (inc == 0 || start < stop && inc < 0 || stop < start && inc > 0) {\n\t\t\t\treturn constructFatalError('range statement will not terminate.');\n\t\t\t}\n\t\t\tlet result = constructOrg();\n\t\t\tlet appendIterator = null;\n\t\t\tfor (let i = start ; i != stop; i += inc) {\n\t\t\t\tlet thisnum = constructInteger(i);\n\t\t\t\tappendIterator = result.fastAppendChildAfter(thisnum, appendIterator);\n\t\t\t}\n\t\t\treturn result;\n\t\t},\n\t\t`Returns a list containing all the integers from 0 to n`\n\t)\n\n\n\n\tBuiltin.createBuiltin(\n\t\t'for-loop',\n\t\t[ 'start&', 'test&', 'body&', 'inc&'],\n\t\tfunction $forLoop(env, executionEnvironment) {\n\t\t\tlet start = env.lb('start');\n\t\t\tlet test = env.lb('test');\n\t\t\tlet inc = env.lb('inc');\n\t\t\tlet body = env.lb('body');\n\n\t\t\t// starting condition\n\t\t\tlet iterationvalue = sEval(systemState.getSCF().makeCommandWithClosureZeroArgs(start),\n\t\t\t\t\t\t\t  \t\t   executionEnvironment,\n\t\t\t\t\t\t\t          `for: error returned from initializer`);\n\t\t\tif (Utils.isFatalError(iterationvalue)) return iterationvalue;\n\n\t\t\tlet bodyresult = null;\n\t\t\twhile(true) {\n\t\t\t\t// check for continuation condition\n\t\t\t\tlet testval = sEval(systemState.getSCF().makeCommandWithClosureOneArg(test, systemState.getSCF(). makeQuote(iterationvalue)),\n\t\t\t\t\t\t\t\t    executionEnvironment,\n\t\t\t\t\t\t\t\t    `for: error returned from test`);\n\t\t\t\tif (Utils.isFatalError(testval)) return testval;\n\n\t\t\t\tif (!Utils.isBool(testval)) {\n\t\t\t\t\treturn constructFatalError('for: test lambda must return a boolean');\n\t\t\t\t}\n\t\t\t\tif (!testval.getTypedValue()) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\t// execute body\n\t\t\t\tlet bodycmd = sEval(systemState.getSCF().makeCommandWithClosureOneArg(body, systemState.getSCF(). makeQuote(iterationvalue)),\n\t\t\t\t\t\t\t\t    executionEnvironment,\n\t\t\t\t\t\t\t\t    `for: error returned from body`);\n\t\t\t\tif (Utils.isFatalError(bodycmd)) return bodycmd;\n\n\n\t\t\t\t// increment\n\t\t\t\tlet inccmd = sEval(systemState.getSCF().makeCommandWithClosureOneArg(inc, systemState.getSCF(). makeQuote(iterationvalue)),\n\t\t\t\t\t\t\t\t   executionEnvironment,\n\t\t\t\t\t\t\t\t   `for: error returned from incrementer`);\n\t\t\t\tif (Utils.isFatalError(inccmd)) return inccmd;\n\n\t\t\t\titerationvalue = inccmd;\n\n\t\t\t}\n\t\t\treturn bodyresult ? bodyresult : constructNil();\n\t\t},\n\t\t`Classic \"for loop\". First |start is evaluated, then |test. If |test returns true, |body and |inc are evaluated, and then we go back to |test. Alias: starting-with while do then-with.`\n\t)\n\n\tBuiltin.aliasBuiltin('starting-with while do then-with', 'for-loop');\n\n}\n\nexport { createIterationBuiltins }","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { Builtin } from '../nex/builtin.js'\nimport { constructNil } from '../nex/nil.js'\nimport { EError } from '../nex/eerror.js'\nimport { constructBool } from '../nex/bool.js'\nimport { evaluateNexSafely, wrapError } from '../evaluator.js'\nimport { UNBOUND } from '../environment.js'\nimport { sAttach } from '../syntheticroot.js'\n\n\nfunction createLogicBuiltins() {\n\n\t// - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - - \n\n\n\tBuiltin.createBuiltin(\n\t\t'and',\n\t\t[ 'val1!', 'val2!' ],\n\t\tfunction $and(env, executionEnvironment) {\n\t\t\treturn constructBool(env.lb('val1').getTypedValue() && env.lb('val2').getTypedValue());\t\t\n\t\t},\n\t\t'Returns true if both |val1 and |val2 evaluate to boolean true.',\n\t\ttrue /* infix */\n\t)\n\n\t// - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - - \n\n\n\tBuiltin.createBuiltin(\n\t\t'first-non-nil',\n\t\t[ '_nex...'],\n\t\tfunction $firstNonNil(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tfor (let i = 0; i < nex.numChildren(); i++) {\n\t\t\t\tlet c = nex.getChildAt(i);\n\t\t\t\tlet result = sAttach(evaluateNexSafely(c, executionEnvironment));\n\t\t\t\tif (result.getTypeName() != '-nil-') {\n\t\t\t\t\treturn result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn constructNil();\n\t\t},\n\t\t'Returns the first argument that does not evaluate to nil, ignoring the rest. Alias: case.'\n\t)\n\n\tBuiltin.aliasBuiltin('case', 'first-non-nil');\n\n\t// - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - -  - - - \n\n\tBuiltin.createBuiltin(\n\t\t'if then else',\n\t\t[ 'cond!', '_iftrue', '_iffalse?' ],\n\t\tfunction $if(env, executionEnvironment) {\n\t\t\tlet b = env.lb('cond').getTypedValue();\n\t\t\tlet iftrue = env.lb('iftrue');\n\t\t\tlet iffalse = env.lb('iffalse');\n\t\t\tif (iffalse == UNBOUND) {\n\t\t\t\tiffalse = constructNil();\n\t\t\t}\n\t\t\tif (b) {\n\t\t\t\tlet iftrueresult = evaluateNexSafely(iftrue, executionEnvironment);\n\t\t\t\tif (Utils.isFatalError(iftrueresult)) {\n\t\t\t\t\treturn wrapError('&szlig;', 'if then else: error in argument 2', iftrueresult);\n\t\t\t\t}\n\t\t\t\treturn iftrueresult;\n\t\t\t} else {\n\t\t\t\tlet iffalseresult = evaluateNexSafely(iffalse, executionEnvironment);\n\t\t\t\tif (Utils.isFatalError(iffalseresult)) {\n\t\t\t\t\treturn wrapError('&szlig;', 'if then else: error in argument 3', iffalseresult);\n\t\t\t\t}\n\t\t\t\treturn iffalseresult;\n\t\t\t}\n\t\t},\n\t\t'Evalutes |cond, and if it is true, return |iftrue, otherwise return |iffalse. If |iffalse is not provided, a Nil is returned if |cond is false. Alias: if.'\n\t)\n\tBuiltin.aliasBuiltin('if', 'if then else');\n\n\n\tBuiltin.createBuiltin(\n\t\t'not',\n\t\t[ 'val!' ],\n\t\tfunction $not(env, executionEnvironment) {\n\t\t\treturn constructBool(!env.lb('val').getTypedValue());\n\t\t},\n\t\t'Evalutes to true if |val evaluates to false, or false if |val evaluates to true.'\n\t)\n\n\n\tBuiltin.createBuiltin(\n\t\t'or',\n\t\t[ 'val1!', 'val2!' ],\n\t\tfunction $or(env, executionEnvironment) {\n\t\t\treturn constructBool(env.lb('val1').getTypedValue() || env.lb('val2').getTypedValue());\n\t\t},\n\t\t'Evaluates to true if either or both of |val1 or |val2 evaluate to true.',\n\t\ttrue /* infix */\n\t)\n\n\n}\n\nexport { createLogicBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Builtin } from '../nex/builtin.js'\nimport { constructWord } from '../nex/word.js'\nimport { constructNil } from '../nex/nil.js'\nimport { constructEError } from '../nex/eerror.js'\nimport { constructDoc } from '../nex/doc.js' \nimport { constructLine } from '../nex/line.js' \nimport { constructCommand } from '../nex/command.js' \nimport { constructDeferredCommand } from '../nex/deferredcommand.js' \nimport { constructLambda } from '../nex/lambda.js' \nimport { constructOrg } from '../nex/org.js' \nimport { ERROR_TYPE_INFO, ERROR_TYPE_FATAL, ERROR_TYPE_WARN } from '../nex/eerror.js'\n\nfunction createMakeBuiltins() {\n\n\tBuiltin.createBuiltin(\n\t\t'make-wavetable',\n\t\t[],\n\t\tfunction $makeWavetable(env, executionEnvironment) {\n\t\t\tlet args = env.lb('nex');\n\t\t\tlet r = constructWavetable();\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a new wavetable.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'make-nil',\n\t\t[],\n\t\tfunction $makeNil(env, executionEnvironment) {\n\t\t\treturn constructNil();\n\t\t},\n\t\t'Creates a nil object.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'make-command',\n\t\t['nex...'],\n\t\tfunction $makeCommand(env, executionEnvironment) {\n\t\t\tlet args = env.lb('nex');\n\t\t\tlet cmd = null;\n\t\t\tfor (let i = 0 ; i < args.numChildren(); i++) {\n\t\t\t\tlet arg = args.getChildAt(i);\n\t\t\t\t// first one could be name of command\n\t\t\t\tif (i == 0 && arg.getTypeName() == '-symbol-') {\n\t\t\t\t\tcmd = constructCommand(arg.getTypedValue())\n\t\t\t\t} else {\n\t\t\t\t\tif (!cmd) {\n\t\t\t\t\t\tcmd = constructCommand();\n\t\t\t\t\t}\n\t\t\t\t\tcmd.appendChild(arg);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!cmd) {\n\t\t\t\tcmd = constructCommand();\n\t\t\t}\n\t\t\treturn cmd;\n\t\t},\n\t\t'Creates a new command containing the args as children.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'make-doc',\n\t\t['nex...'],\n\t\tfunction $makeDoc(env, executionEnvironment) {\n\t\t\tlet args = env.lb('nex');\n\t\t\tlet r = constructDoc();\n\t\t\tfor (let i = 0 ; i < args.numChildren(); i++) {\n\t\t\t\tr.appendChild(args.getChildAt(i));\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a new doc containing the args as children.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'make-deferred-command',\n\t\t[ 'args...' ],\n\t\tfunction $makeDeferredCommand(env, executionEnvironment) {\n\t\t\tlet args = env.lb('args');\n\t\t\tlet r = constructDeferredCommand();\n\t\t\tfor (let i = 0 ; i < args.numChildren(); i++) {\n\t\t\t\tlet c = children.getChildAt(i);\n\t\t\t\tr.appendChild(c);\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a new deferred command containing |args as children.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'make-lambda',\n\t\t['nex...'],\n\t\tfunction $makeLambda(env, executionEnvironment) {\n\t\t\tlet exps = env.lb('nex');\n\t\t\tlet r = constructLambda();\n\t\t\tfor (let i = 0 ; i < exps.numChildren(); i++) {\n\t\t\t\tlet c = exps.getChildAt(i);\n\t\t\t\tr.appendChild(c);\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a new lambda containing the args as children.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'make-line',\n\t\t['nex...'],\n\t\tfunction $makeLine(env, executionEnvironment) {\n\t\t\tlet args = env.lb('nex');\n\t\t\tlet r = constructLine();\n\t\t\tfor (let i = 0 ; i < args.numChildren(); i++) {\n\t\t\t\tr.appendChild(args.getChildAt(i));\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a new line containing the args as children.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'make-word',\n\t\t['nex...'],\n\t\tfunction $makeWord(env, executionEnvironment) {\n\t\t\tlet args = env.lb('nex');\n\t\t\tlet r = constructWord();\n\t\t\tfor (let i = 0 ; i < args.numChildren(); i++) {\n\t\t\t\tr.appendChild(args.getChildAt(i));\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a new word containing the args as children.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'make-org',\n\t\t['nex...'],\n\t\tfunction $makeOrg(env, executionEnvironment) {\n\t\t\tlet args = env.lb('nex');\n\t\t\tlet r = constructOrg();\n\t\t\tfor (let i = 0 ; i < args.numChildren(); i++) {\n\t\t\t\tr.appendChild(args.getChildAt(i));\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a new org containing the args as children.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'make-error',\n\t\t['str$'],\n\t\tfunction $makeError(env, executionEnvironment) {\n\t\t\tlet str = env.lb('str');\n\t\t\tlet r = constructEError(str.getFullTypedValue());\n\t\t\tr.setErrorType(ERROR_TYPE_FATAL);\n\t\t\tr.suppressNextCatch();\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a new (fatal) error with |str as the description.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'make-warning',\n\t\t['str$'],\n\t\tfunction $makeWarning(env, executionEnvironment) {\n\t\t\tlet str = env.lb('str');\n\t\t\tlet r = constructEError(str.getFullTypedValue());\n\t\t\tr.setErrorType(ERROR_TYPE_WARN);\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a new warning (an error with type WARN) with |str as the description.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'make-info',\n\t\t['str$'],\n\t\tfunction $makeInfo(env, executionEnvironment) {\n\t\t\tlet str = env.lb('str');\n\t\t\tlet r = constructEError(str.getFullTypedValue());\n\t\t\tr.setErrorType(ERROR_TYPE_INFO);\n\t\t\treturn r;\n\t\t},\n\t\t'Creates a new info (an error with type INFO) with |str as the description.'\n\t);\n}\n\nexport { createMakeBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { Builtin } from '../nex/builtin.js'\nimport { constructFatalError } from '../nex/eerror.js'\nimport { constructFloat } from '../nex/float.js'\nimport { constructInteger } from '../nex/integer.js'\nimport { constructBool } from '../nex/bool.js'\nimport { UNBOUND } from '../environment.js'\n\n\nfunction createMathBuiltins() {\n\n\t// minuend - subtrahend\n\n\tBuiltin.createBuiltin(\n\t\t/* minus */ '-',\n\t\t[ 'min#%', 'sub#%?' ],\n\t\tfunction $minus(env, executionEnvironment) {\n\t\t\tlet a = env.lb('min');\n\t\t\tlet b = env.lb('sub');\n\t\t\tif (b == UNBOUND) {\n\t\t\t\tlet n = (-a.getTypedValue());\n\t\t\t\tif (Utils.isFloat(a)) {\n\t\t\t\t\treturn constructFloat(n);\n\t\t\t\t} else {\n\t\t\t\t\treturn constructInteger(n);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tlet result = a.getTypedValue() - b.getTypedValue();\n\t\t\t\tif (Utils.isFloat(a)\n\t\t\t\t\t\t|| Utils.isFloat(b)) {\n\t\t\t\t\treturn constructFloat(result);\n\t\t\t\t} else {\n\t\t\t\t\treturn constructInteger(result);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'Subtracts |sub from |min and returns the result.',\n\t\ttrue /* is infix */\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t/* not-equal */ '<>',\n\t\t[ 'lhs#%', 'rhs#%' ],\n\t\tfunction $notEqual(env, executionEnvironment) {\n\t\t\tlet a = env.lb('lhs').getTypedValue();\n\t\t\tlet b = env.lb('rhs').getTypedValue();\n\t\t\tlet r = (a != b);\n\t\t\treturn constructBool(r);\n\t\t},\n\t\t'Returns true if |lhs evaluates to a number that is not equal to |rhs.',\n\t\ttrue /* is infix */\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $plus(env, executionEnvironment) {\n\t\tlet total = 0;\n\t\tlet foundFloat = false;\n\t\tlet ar = env.lb('add');\n\t\tfor (let i = 0; i < ar.numChildren(); i++) {\n\t\t\tlet arg = ar.getChildAt(i);\n\t\t\tif (Utils.isFloat(arg)) {\n\t\t\t\tfoundFloat = true;\n\t\t\t}\n\t\t\ttotal += arg.getTypedValue();\n\t\t}\n\t\tlet r = foundFloat ? constructFloat(total) : constructInteger(total);\n\t\treturn r;\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t/* plus */ '+',\n\t\t[ 'add#%...' ],\n\t\t$plus,\n\t\t'Adds the arguments and returns the result.',\n\t\ttrue /* is infix */\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $greaterThan(env, executionEnvironment) {\n\t\tlet a = env.lb('lhs').getTypedValue();\n\t\tlet b = env.lb('rhs').getTypedValue();\n\t\tlet r = (a > b);\n\t\treturn constructBool(r);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t/* greater-than */ '>',\n\t\t[ 'lhs#%', 'rhs#%' ],\n\t\t$greaterThan,\n\t\t'Returns true if |lhs evaluates to a number that is strictly greater than |rhs.',\n\t\ttrue /* is infix */\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $greaterThanOrEqualTo(env, executionEnvironment) {\n\t\tlet a = env.lb('lhs').getTypedValue();\n\t\tlet b = env.lb('rhs').getTypedValue();\n\t\tlet r = (a >= b);\n\t\treturn constructBool(r);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t/* greater-than-or-equal-to */ '>=',\n\t\t[ 'lhs#%', 'rhs#%' ],\n\t\t$greaterThanOrEqualTo,\n\t\t'Returns true if |lhs evaluates to a number that is greater than or equal to |rhs.',\n\t\ttrue /* is infix */\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $lessThan(env, executionEnvironment) {\n\t\tlet a = env.lb('lhs').getTypedValue();\n\t\tlet b = env.lb('rhs').getTypedValue();\n\t\tlet r = (a < b);\n\t\treturn constructBool(r);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t/* less-than */ '<',\n\t\t[ 'lhs#%', 'rhs#%' ],\n\t\t$lessThan,\n\t\t'Returns true if |lhs evaluates to a number that is strictly less than |rhs.',\n\t\ttrue /* is infix */\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $lessThanOrEqualTo(env, executionEnvironment) {\n\t\tlet a = env.lb('lhs').getTypedValue();\n\t\tlet b = env.lb('rhs').getTypedValue();\n\t\tlet r = (a <= b);\n\t\treturn constructBool(r);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t/* less-than-or-equal-to */ '<=',\n\t\t[ 'lhs#%', 'rhs#%' ],\n\t\t$lessThanOrEqualTo,\n\t\t'Returns true if |lhs evaluates to a number that is less than or equal to |rhs.',\n\t\ttrue /* is infix */\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $dividedBy(env, executionEnvironment) {\n\t\tlet a = env.lb('divid');\n\t\tlet b = env.lb('divis');\n\t\tif (b.getTypedValue() == 0) {\n\t\t\treturn constructFatalError('divide: cannot divide by zero, Sorry!');\n\t\t}\n\t\tlet result = a.getTypedValue() / b.getTypedValue();\n\t\tif (Utils.isFloat(a)\n\t\t\t\t|| Utils.isFloat(b)) {\n\t\t\treturn constructFloat(result);\n\t\t} else {\n\t\t\treturn constructInteger(result);\n\t\t}\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t/* divided-by */ '/',\n\t\t[ 'divid#%', 'divis#%' ],\n\t\t$dividedBy,\n\t\t'Divides |divid by |divis and returns the result.',\n\t\ttrue /* is infix */\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $equals(env, executionEnvironment) {\n\t\tlet a = env.lb('lhs').getTypedValue();\n\t\tlet b = env.lb('rhs').getTypedValue();\n\t\tlet r = (a == b);\n\t\treturn constructBool(r);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t/* equals */ '=',\n\t\t[ 'lhs#%', 'rhs#%' ],\n\t\t$equals,\n\t\t'Returns true if |lhs and |rhs evaluates to numbers that are equal.',\n\t\ttrue /* is infix */\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $times(env, executionEnvironment) {\n\t\tlet result = 1;\n\t\tlet foundFloat = false;\n\t\tlet ar = env.lb('fact');\n\t\tfor (let i = 0; i < ar.numChildren(); i++) {\n\t\t\tlet arg = ar.getChildAt(i);\n\t\t\tif (Utils.isFloat(arg)) {\n\t\t\t\tfoundFloat = true;\n\t\t\t}\n\t\t\tresult *= arg.getTypedValue();\n\t\t}\n\t\tlet r = foundFloat ? constructFloat(result) : constructInteger(result);\n\t\treturn r;\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t/* times */ '*',\n\t\t[ 'fact#%...' ],\n\t\t$times,\n\t\t'Multiplies the args and returns the result.',\n\t\ttrue /* is infix */\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $getPi(env, executionEnvironment) {\n\t\treturn constructFloat(Math.PI);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t'get-pi',\n\t\t[ ],\n\t\t$getPi,\n\t\t'Returns pi.'\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $getE(env, executionEnvironment) {\n\t\treturn constructFloat(Math.E);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t'get-e',\n\t\t[ ],\n\t\t$getE,\n\t\t'Returns e.'\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $acos(env, executionEnvironment) {\n\t\tlet a = env.lb('arg').getTypedValue();\n\t\tlet b = Math.acos(a);\n\t\treturn constructFloat(b);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t'acos',\n\t\t[ 'arg%' ],\n\t\t$acos,\n\t\t'Computes the inverse cosine of |arg (the angle whose cosine is |arg)'\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $asin(env, executionEnvironment) {\n\t\tlet a = env.lb('arg').getTypedValue();\n\t\tlet b = Math.asin(a);\n\t\treturn constructFloat(b);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t'asin',\n\t\t[ 'arg%' ],\n\t\t$asin,\n\t\t'Computes the inverse sine of |arg (the angle whose sine is |arg)'\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $atan(env, executionEnvironment) {\n\t\tlet a = env.lb('arg').getTypedValue();\n\t\tlet b = Math.atan(a);\n\t\treturn constructFloat(b);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t'atan',\n\t\t[ 'arg%' ],\n\t\t$atan,\n\t\t'Computes the inverse tangent of |arg (the angle whose tangent is |arg)'\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $atan2(env, executionEnvironment) {\n\t\tlet y = env.lb('y').getTypedValue();\n\t\tlet x = env.lb('x').getTypedValue();\n\t\treturn constructFloat(Math.atan2(y, x));\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t'atan2',\n\t\t[ 'y%', 'x%' ],\n\t\t$atan2,\n\t\t'Computes the angle between the x axis and the line to (x, y), in the range from +pi and -pi.'\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $ceiling(env, executionEnvironment) {\n\t\tlet a = env.lb('arg').getTypedValue();\n\t\ta = Math.ceil(a);\n\t\treturn constructFloat(a);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t'ceiling',\n\t\t[ 'arg%' ],\n\t\t$ceiling,\n\t\t'Returns the integer ceiling of |arg.'\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $cos(env, executionEnvironment) {\n\t\tlet a = env.lb('arg').getTypedValue();\n\t\tlet b = Math.cos(a);\n\t\treturn constructFloat(b);\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t'cos',\n\t\t[ 'arg%' ],\n\t\t$cos,\n\t\t'Returns the cosine of |arg (adjacent/hypotenuse)'\n\t);\n\n\t// - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  - -  \n\n\tfunction $exp(env, executionEnvironment) {\n\t\tlet a = env.lb('a').getTypedValue();\n\t\treturn constructFloat(Math.exp(a));\n\t}\n\n\tBuiltin.createBuiltin(\n\t\t'exp',\n\t\t[ 'a%' ],\n\t\t$exp,\n\t\t'Computes the exponential function of |a (e to the |a).'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'floor',\n\t\t[ 'arg%' ],\n\t\tfunction $floor(env, executionEnvironment) {\n\t\t\tlet a = env.lb('arg').getTypedValue();\n\t\t\ta = Math.floor(a);\n\t\t\treturn constructFloat(a);\n\t\t},\n\t\t'Computes the integer floor of |arg.'\n\t);\n\n\n\t// log base e, helps to differentiate\n\t// from methods that log things\n\tBuiltin.createBuiltin(\n\t\t'log-e',\n\t\t[ 'a%' ],\n\t\tfunction $logE(env, executionEnvironment) {\n\t\t\tlet a = env.lb('a').getTypedValue();\n\t\t\treturn constructFloat(Math.log(a));\n\t\t},\n\t\t'Computes the log base e of |a.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'log-10',\n\t\t[ 'a%' ],\n\t\tfunction $logTen(env, executionEnvironment) {\n\t\t\tlet a = env.lb('a').getTypedValue();\n\t\t\treturn constructFloat(Math.log10(a));\n\t\t},\n\t\t'Computes the log base 10 of |a.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'log-2',\n\t\t[ 'a%' ],\n\t\tfunction $logTwo(env, executionEnvironment) {\n\t\t\tlet a = env.lb('a').getTypedValue();\n\t\t\treturn constructFloat(Math.log2(a));\n\t\t},\n\t\t'Computes the log base 2 of |a.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'modulo',\n\t\t[ 'divid#', 'modulus#' ],\n\t\tfunction $modulo(env, executionEnvironment) {\n\t\t\tlet a = env.lb('divid');\n\t\t\tlet b = env.lb('modulus');\n\t\t\tlet result = a.getTypedValue() % b.getTypedValue();\n\t\t\treturn constructInteger(result);\n\t\t},\n\t\t'Computes |divid modulo |modulus and returns the result.',\n\t\ttrue /* is infix */\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'nth-root',\n\t\t[ 'a%', 'b%' ],\n\t\tfunction $nthRoot(env, executionEnvironment) {\n\t\t\tlet a = env.lb('a').getTypedValue();\n\t\t\tlet b = env.lb('b').getTypedValue();\n\t\t\treturn constructFloat(Math.pow(a, (1.0/b)));\n\t\t},\n\t\t'Computes the |bth root of |a.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'power',\n\t\t[ 'a%', 'b%' ],\n\t\tfunction $power(env, executionEnvironment) {\n\t\t\tlet a = env.lb('a').getTypedValue();\n\t\t\tlet b = env.lb('b').getTypedValue();\n\t\t\treturn constructFloat(Math.pow(a, b));\n\t\t},\n\t\t'Computes |a to the |b power and returns the result.',\n\t\ttrue /* is infix */\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'random',\n\t\t[],\n\t\tfunction $random(env, executionEnvironment) {\n\t\t\tlet n = Math.random();\n\t\t\treturn constructFloat(n);\n\t\t},\n\t\t'Returns a random number between 0 and 1.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'round',\n\t\t[ 'arg%' ],\n\t\tfunction $round(env, executionEnvironment) {\n\t\t\tlet a = env.lb('arg').getTypedValue();\n\t\t\ta = Math.round(a);\n\t\t\treturn constructFloat(a);\n\t\t},\n\t\t'Return |arg rounded to the nearest integer.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'sin',\n\t\t[ 'arg%' ],\n\t\tfunction $sin(env, executionEnvironment) {\n\t\t\tlet a = env.lb('arg').getTypedValue();\n\t\t\tlet b = Math.sin(a);\n\t\t\treturn constructFloat(b);\n\t\t},\n\t\t'Computes the sin (opposite/hypotenuse) of |arg.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'square-root',\n\t\t[ 'a%' ],\n\t\tfunction $squareRoot(env, executionEnvironment) {\n\t\t\tlet a = env.lb('a').getTypedValue();\n\t\t\treturn constructFloat(Math.sqrt(a));\n\t\t},\n\t\t'Computes the square root of |a.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'tan',\n\t\t[ 'arg%' ],\n\t\tfunction $tan(env, executionEnvironment) {\n\t\t\tlet a = env.lb('arg').getTypedValue();\n\t\t\tlet b = Math.tan(a);\n\t\t\treturn constructFloat(b);\n\t\t},\n\t\t'Computes the tangent (opposite/adjacent) of |arg.'\n\t);\n}\n\nexport { createMathBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Builtin } from '../nex/builtin.js'\nimport { constructFatalError } from '../nex/eerror.js'\nimport { constructWord } from '../nex/word.js'\nimport { constructBool } from '../nex/bool.js'\nimport { constructEString } from '../nex/estring.js'\nimport { constructInteger } from '../nex/integer.js'\n\nfunction createStringBuiltins() {\n\n\tBuiltin.createBuiltin(\n\t\t'string-concatenate',\n\t\t[ 'str$...' ],\n\t\tfunction $stringCat(env, executionEnvironment) {\n\t\t\tlet r = '';\n\t\t\tlet ar = env.lb('str');\n\t\t\tfor (let i = 0; i < ar.numChildren(); i++) {\n\t\t\t\tlet s = ar.getChildAt(i).getFullTypedValue();\n\t\t\t\tr += s;\n\t\t\t}\n\t\t\treturn constructEString(r);\n\t\t},\n\t\t'Concatenates the passed-in strings and returns the result.'\n\t);\n\t// this alias makes tests pass\n\tBuiltin.aliasBuiltin('string-cat', 'string-concatenate');\n\n\tBuiltin.createBuiltin(\n\t\t'string-char at',\n\t\t[ 'str$', 'pos#' ],\n\t\tfunction $stringCharAt(env, executionEnvironment) {\n\t\t\tlet s = env.lb('str').getFullTypedValue();\n\t\t\tlet n = env.lb('pos').getTypedValue();\n\t\t\tif (n < 0 || n >= s.length) {\n\t\t\t\treturn constructFatalError(`string-char-at: index ${n} is out of bounds of string \"${s}\" (must be between 0 and ${s.length - 1} inclusive). Sorry!`);\n\t\t\t}\n\t\t\tlet c = s.charAt(n);\n\t\t\treturn constructEString(c);\n\t\t},\n\t\t'Returns the character in |str at index position |pos.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'string-index of',\n\t\t[ 'str$', 'tofind$' ],\n\t\tfunction $stringIndexOf(env, executionEnvironment) {\n\t\t\tlet s = env.lb('str').getFullTypedValue();\n\t\t\tlet tofind = env.lb('tofind').getFullTypedValue();\n\t\t\tlet i = s.indexOf(tofind);\n\t\t\treturn constructInteger(i);\n\t\t},\n\t\t'Returns the index position of |tofind in |str.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'string-join on',\n\t\t[ 'strs()', 'on$' ],\n\t\tfunction $stringJoinOn(env, executionEnvironment) {\n\t\t\tlet lst = env.lb('strs');\n\t\t\tlet on = env.lb('on').getFullTypedValue();\n\t\t\tlet r = '';\n\t\t\tfor (let i = 0; i < lst.numChildren(); i++) {\n\t\t\t\tr = `${r}${i > 0 ? on : ''}${lst.getChildAt(i).getFullTypedValue()}`;\n\t\t\t}\n\t\t\treturn constructEString(r);\n\t\t},\n\t\t'Joins the string elements of |strs into a single string on the separator |on.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'string-length',\n\t\t[ 'str$' ],\n\t\tfunction $stringLength(env, executionEnvironment) {\n\t\t\tlet s = env.lb('str').getFullTypedValue();\n\t\t\tlet len = s.length;\n\t\t\treturn constructInteger(len);\n\t\t},\n\t\t'Returns the length of (number of characters in) |str'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'string-listify',\n\t\t[ 'str$' ],\n\t\tfunction $stringListify(env, executionEnvironment) {\n\t\t\tlet r = constructWord();\n\t\t\tlet s = env.lb('str').getFullTypedValue();\n\t\t\tfor (let i = 0; i < s.length; i++) {\n\t\t\t\tlet c = s.charAt(i);\n\t\t\t\tlet cc = constructEString(c);\n\t\t\t\tr.appendChild(cc);\n\t\t\t}\n\t\t\treturn r;\n\t\t},\n\t\t'Turns a string into a list of strings of one-letter each, one for each letter in |str.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'string-split on',\n\t\t[ 'str$', 'on$' ],\n\t\tfunction $stringSplitOn(env, executionEnvironment) {\n\t\t\tlet str = env.lb('str').getFullTypedValue();\n\t\t\tlet on = env.lb('on').getFullTypedValue();\n\t\t\tlet lst = constructWord();\n\t\t\tlet a = str.split(on);\n\t\t\tfor (let i = 0; i < a.length; i++) {\n\t\t\t\tlet strnex = constructEString(a[i]);\n\t\t\t\tlst.appendChild(strnex);\n\t\t\t}\n\t\t\treturn lst;\n\t\t},\n\t\t'Splits |str into separate strings on the separator |on.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'string-substring',\n\t\t[ 'str$', 'start#', 'len#' ],\n\t\tfunction $stringSubstring(env, executionEnvironment) {\n\t\t\tlet str = env.lb('str').getFullTypedValue();\n\t\t\tlet start = env.lb('start').getTypedValue();\n\t\t\tlet len = env.lb('len').getTypedValue();\n\t\t\tlet s = str.substr(start, len);\n\t\t\treturn constructEString(s);\n\t\t},\n\t\t'Retrieves a substring of |str starting at |start that is |len characters long'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'string-is-empty',\n\t\t[ 'str$' ],\n\t\tfunction $isEmptyString(env, executionEnvironment) {\n\t\t\tlet str = env.lb('str').getFullTypedValue();\n\t\t\treturn constructBool(str == '');\n\t\t},\n\t\t'Returns true if |str is the empty string.'\n\t);\n}\n\nexport { createStringBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { Builtin } from '../nex/builtin.js'\nimport { constructEString } from '../nex/estring.js'\nimport { constructFatalError } from '../nex/eerror.js'\nimport { constructFloat } from '../nex/float.js'\nimport { constructInteger } from '../nex/integer.js'\nimport { constructNil } from '../nex/nil.js'\nimport { convertJSMapToOrg } from '../nex/org.js'\nimport { RenderNode } from '../rendernode.js'\nimport { systemState } from '../systemstate.js'\nimport { rootManager } from '../rootmanager.js'\nimport { experiments, getExperimentsAsString, getSettings, setSettingValue, hasSettingName } from '../globalappflags.js'\nimport { UNBOUND } from '../environment.js'\nimport { webFontManager } from '../webfonts.js'\nimport {\n\tRENDER_MODE_NORM,\n\tRENDER_MODE_EXPLO\n} from '../globalconstants.js'\n\n/**\n * Creates all syscall builtins.\n */\nfunction createSyscalls() {\n\n\tBuiltin.createBuiltin(\n\t\t'get-settings',\n\t\t[ ],\n\t\tfunction $getSettings(env, executionEnvironment) {\n\t\t\tlet settings = getSettings();\n\t\t\tlet org = convertJSMapToOrg(settings);\n\t\t\treturn org;\n\t\t},\n\t\t\"Gets an org containing all Vodka global settings.\"\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'set-settings-value',\n\t\t[ 'val' ],\n\t\tfunction $setSettingsValue(env, executionEnvironment) {\n\t\t\tlet val = env.lb('val');\n\t\t\tif (val.numTags() != 1) {\n\t\t\t\treturn constructFatalError('set-settings-value: setting value must have a single tag indicating the setting to change.');\n\t\t\t}\n\t\t\tlet tagval = val.getTag(0).getTagString();\n\t\t\tif (!hasSettingName(tagval)) {\n\t\t\t\treturn constructFatalError(`set-settings-value: unknown setting ${tagval}.`);\n\t\t\t}\n\t\t\tif (Utils.isFloat(val) || Utils.isInteger(val)) {\n\t\t\t\tlet n = Number(val.getTypedValue());\n\t\t\t\tsetSettingValue(tagval, n);\n\t\t\t} else {\n\t\t\t\tsetSettingValue(tagval, '' + val.getTypedValue());\n\t\t\t}\n\t\t\tlet settings = getSettings();\n\t\t\tlet org = convertJSMapToOrg(settings);\n\t\t\treturn org;\n\t\t},\n\t\t\"Changes the value of a setting.\"\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'get-active-experiment-flags',\n\t\t[ ],\n\t\tfunction $getActiveExperimentFlags(env, executionEnvironment) {\n\t\t\tlet s = getExperimentsAsString();\n\t\t\treturn constructEString(s);\n\t\t},\n\t\t\"Gets a snippet of code that represents the active experiment flags that should be saved with new tests (for internal use).\"\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'load-web-font',\n\t\t[ 'fontname$' ],\n\t\tfunction $loadWebFont(env, executionEnvironment) {\n\t\t\tlet n = env.lb('fontname');\n\t\t\tlet name = n.getFullTypedValue();\n\t\t\twebFontManager.loadFont(name);\n\t\t\treturn constructNil();\n\t\t},\n\t\t'Loads a Google web font with the passed-in name (see fonts.google.com for options)'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'disconnect-funnel',\n\t\t[ ],\n\t\tfunction $disconnectFunnel(env, executionEnvironment) {\n\t\t\tsystemState.setKeyFunnelActive(false);\n\t\t\tsystemState.setMouseFunnelActive(false);\n\t\t\treturn constructNil();\n\t\t},\n\t\t'Disconnects the event funnel (used to disable IDE features).'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'get-time',\n\t\t[ ],\n\t\tfunction $getTime(env, executionEnvironment) {\n\t\t\tlet t = window.performance.now();\n\t\t\treturn constructFloat(t);\n\t\t},\n\t\t'Get the date and time.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'force-draw',\n\t\t[ 'nex' ],\n\t\tfunction $forceDraw(env, executionEnvironment) {\n\t\t\tlet n = env.lb('nex');\n\t\t\tn.renderOnlyThisNex();\n\t\t\treturn n;\n\t\t},\n\t\t'Force |nex to be rerendered (redrawn on the screen).'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'apply-css-style to',\n\t\t[ 'style$', 'nex' ],\n\t\tfunction $applyCssStyleTo(env, executionEnvironment) {\n\t\t\tlet s = env.lb('style').getFullTypedValue();\n\t\t\tlet n = env.lb('nex');\n\t\t\tn.setCurrentStyle(s);\n\t\t\treturn n;\n\t\t},\n\t\t'Apply the css style |style to |nex, overwriting whatever styling it already has.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'apply-pfont to',\n\t\t[ 'pfont$', 'nex' ],\n\t\tfunction $applyPfontTo(env, executionEnvironment) {\n\t\t\tlet pf = env.lb('pfont').getFullTypedValue();\n\t\t\tlet n = env.lb('nex');\n\t\t\tn.setPfont(pf);\n\t\t\treturn n;\n\t\t},\n\t\t'Applies a parametric font style called |pfont to |nex.'\n\t);\n\n\t\n\t// this is basically just for testing foreign function interface\n\n\tBuiltin.createBuiltin(\n\t\t'get-css-style-from',\n\t\t[ 'nex' ],\n\t\tfunction $getStyleFrom(env, executionEnvironment) {\n\t\t\tlet n = env.lb('nex');\n\t\t\tlet s = n.getCurrentStyle();\n\t\t\treturn constructEString(s);\n\t\t},\n\t\t'Return whatever css style overrides |nex currently has.'\n\t);\n\n\tBuiltin.aliasBuiltin('get-style-from', 'get-css-style-from');\n\n\tBuiltin.createBuiltin(\n\t\t'get-pixel-height',\n\t\t[ 'nex'],\n\t\tfunction $getPixelHeight(env, executionEnvironment) {\n\t\t\tlet n = env.lb('nex');\n\n\t\t\tlet rna = n.getRenderNodes();\n\t\t\tif (rna.length == 0) {\n\t\t\t\treturn constructFloat(0);\n\t\t\t}\n\t\t\tlet rn = rna[0];\n\t\t\tlet h = rn.getDomNode().getBoundingClientRect().height;\n\t\t\treturn constructFloat(h);\n\t\t},\n\t\t'Returns the pixel height for the nex. If the nex is not visible on the screen this returns zero. If the nex appears in multiple places on the screen, and the sizes are different for some reason (e.g. one is in normal mode, the other is exploded) it will return the size of the first one.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'get-pixel-width',\n\t\t[ 'nex' ],\n\t\tfunction $getPixelWidth(env, executionEnvironment) {\n\t\t\tlet n = env.lb('nex');\n\n\t\t\tlet rna = n.getRenderNodes();\n\t\t\tif (rna.length == 0) {\n\t\t\t\treturn constructFloat(0);\n\t\t\t}\n\t\t\tlet rn = rna[0];\n\t\t\tlet h = rn.getDomNode().getBoundingClientRect().width;\n\t\t\treturn constructFloat(h);\n\t\t},\n\t\t'Returns the pixel width for the nex. If the nex is not visible on the screen this returns zero. If the nex appears in multiple places on the screen, and the sizes are different for some reason (e.g. one is in normal mode, the other is exploded) it will return the size of the first one.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'jslog',\n\t\t[ 'nex' ],\n\t\tfunction $jslog(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tconsole.log(nex.debugString());\n\t\t\treturn nex;\n\t\t},\n\t\t'Logs the |nex to the browser Javascript console.'\n\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'run-js',\n\t\t[ 'expr$', 'nex...' ],\n\t\tfunction $runJs(env, executionEnvironment) {\n\t\t\tlet strn = env.lb('expr');\n\t\t\tlet lst = env.lb('nex');\n\t\t\tlet str = strn.getFullTypedValue();\n\t\t\t// the reason I'm creating these dollar sign variables\n\t\t\t// is so that the javascript code we eval can refer\n\t\t\t// to them.\n\t\t\tvar $dom = [];\n\t\t\tvar $nex = [];\n\t\t\tvar $node = [];\n\t\t\tfor (let i = 0; i < lst.numChildren(); i++) {\n\t\t\t\tlet child = lst.getChildAt(i);\n\t\t\t\t$nex[i] = child;\n\t\t\t\tif (child.getRenderNodes()) {\n\t\t\t\t\tlet nodes = child.getRenderNodes();\n\t\t\t\t\t$node[i] = nodes[0];\n\t\t\t\t\tif ($node[i]) {\n\t\t\t\t\t\t$dom[i] = $node[i].getDomNode();\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t$dom[i] = child.renderedDomNode;\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet result = eval(str);\n\t\t\tif (typeof result == 'number') {\n\t\t\t\tif (Math.round(result) == result) {\n\t\t\t\t\treturn constructInteger(result);\n\t\t\t\t} else {\n\t\t\t\t\treturn constructFloat(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn constructEString('' + result);\n\t\t\t}\n\t\t},\n\t\t'Runs arbitrary Javascript code |expr.'\n\t);\n}\n\nexport { createSyscalls }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { RenderNode } from './rendernode.js'\nimport { Root } from './nex/root.js'\nimport { systemState } from './systemstate.js'\nimport {\n\tRENDER_MODE_EXPLO,\n\tRENDER_MODE_NORM\n} from './globalconstants.js'\n\n\n/**\n * The hidden root controller is used for the awkward situation where we want to be\n * able to get information about a nex that pertains to the way it will be rendered\n * (for example, its width and height). Nexes are technically in a lower-level-layer\n * than the rendering code, so in some cases you might ask for rendering info about\n * a nex that *has never been rendered*. So, to get that information, it has to be\n * rendered in \"secret\" (invisibly).\n */\nclass RootManager  {\n\tconstructor() {\n\t}\n\n\t// This is currently unused, instead get-pixel-height and get-pixel-width just return\n\t// zero if something's never been rendered -- fine for now but we might bring\n\t// back this class at some point?\n\n\tcreateNewRoot(args) {\n\t\tif (!args) {\n\t\t\targs = {};\n\t\t}\n\t\tif (!args.mode) {\n\t\t\targs.mode = RENDER_MODE_NORM;\n\t\t}\n\t\tif (!args.id) {\n\t\t\targs.id = 'vodkaroot';\n\t\t}\n\t\tlet rootnex = new Root(true /* attached */);\n\t\tlet root = new RenderNode(rootnex);\n\t\troot.setRenderMode(args.mode);\n\t\troot.setRenderDepth(0);\n\t\tdocument.vodkaroot = root; // for debugging in chrome dev tools\n\t\tlet rootDomNode = document.getElementById(args.id);\n\t\troot.setDomNode(rootDomNode);\n\t\trootnex.setDirtyForRendering(true);\n\t\tsystemState.setRoot(root);\n\t\treturn root;\t\n\t}\n\n\trenderInHiddenRoot(nex, rendermode) {\n\t\tlet wasDirty = nex.getDirtyForRendering();\n\t\tlet hiddenRoot = this.createNewRoot({\n\t\t\tmode: rendermode,\n\t\t\tid: 'hiddenroot'\n\t\t})\n\n\t\t// render pass has to monotonically increase but it can skip, so when this is\n\t\t// called, the main (visible) render pass number will skip numbers.\n\t\tsystemState.setGlobalRenderPassNumber(systemState.getGlobalRenderPassNumber() + 1);\n\t\t// has to be synchronous so we can measure\n\t\thiddenRoot.render();\n\t\t// if it was dirty before, re-dirty it\n\t\tnex.setDirtyForRendering(wasDirty);\n\t\treturn nex.getRenderNodes()[0];\n\t}\n}\n\nconst rootManager = new RootManager();\n\nexport { rootManager  }\n\n","\n\nclass WebFontManager {\n\n\tloadFont(name) {\n\t\tWebFont.load({\n\t\t\tgoogle: {\n\t\t\t\tfamilies: [name]\n\t\t\t}\n\t\t})\n\t}\n\n}\n\nconst webFontManager = new WebFontManager();\n\n\nexport { webFontManager }","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Builtin } from '../nex/builtin.js'\nimport { constructFatalError, newTagOrThrowOOM } from '../nex/eerror.js'\nimport { constructBool } from '../nex/bool.js'\nimport { Tag } from '../tag.js'\nimport { contractEnforcer } from '../contractfunctions.js';\n\nfunction createTagBuiltins() {\n\n\t// IT IS AN INTENTIONAL CHOICE THAT THERE ARE NO FUNCTIONS TO REMOVE TAGS\n\t// Tags enforce types via contracts. If you can remove tags, you can\n\t// subvert any type protections that someone wants to add to something.\n\t// you can remove them using the editor of course, but not with code.\n\n\tBuiltin.createBuiltin(\n\t\t'add-tag to',\n\t\t[ 'tag$', 'nex' ],\n\t\tfunction $addTag(env, executionEnvironment) {\n\t\t\tlet nex = env.lb('nex');\n\t\t\tlet tagname = env.lb('tag').getFullTypedValue();\n\t\t\tlet tag = newTagOrThrowOOM(tagname, 'add-tag builtin');\n\t\t\tlet errorMessage = contractEnforcer.enforce(tag, nex);\n\t\t\tif (errorMessage) {\n\t\t\t\tlet e = constructFatalError(errorMessage);\n\t\t\t\treturn e;\n\t\t\t}\n\t\t\tnex.addTag(newTagOrThrowOOM(tagname, 'add-tag builtin'));\n\t\t\treturn nex;\n\t\t},\n\t\t'Adds the tag |tag to |nex.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t' has-tag',\n\t\t[ 'nex', 'tag$' ],\n\t\tfunction $hasTag(env, executionEnvironment) {\n\t\t\tlet n = env.lb('nex');\n\t\t\tlet tagname = env.lb('tag').getFullTypedValue();\n\t\t\tlet tag = newTagOrThrowOOM(tagname, 'has-tag builtin');\n\t\t\tif (n.hasTag(tag)) {\n\t\t\t\treturn constructBool(true);\n\t\t\t} else {\n\t\t\t\treturn constructBool(false);\n\t\t\t}\n\t\t},\n\t\t'Returns true if |nex has a tag equal to |tag.'\n\t);\n\n}\n\nexport { createTagBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\nimport { Builtin } from '../nex/builtin.js' \nimport { constructBool } from '../nex/bool.js' \n\nfunction createTestBuiltins() {\n\n\tBuiltin.createBuiltin(\n\t\t'is-boolean',\n\t\t[ 'nex' ],\n\t\tfunction $isBoolean(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isBool(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a boolean.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-command',\n\t\t[ 'nex' ],\n\t\tfunction $isCommand(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isCommand(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a command.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-instantiator',\n\t\t[ 'nex' ],\n\t\tfunction $isInstantiator(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isInstantiator(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a command.`\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'is-doc',\n\t\t[ 'nex' ],\n\t\tfunction $isDoc(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isDoc(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a doc.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-empty',\n\t\t[ 'list()' ],\n\t\tfunction $isEmpty(env, executionEnvironment) {\n\t\t\tlet lst = env.lb('list');\n\t\t\tlet rb = !lst.hasChildren();\n\t\t\treturn constructBool(rb);\n\t\t},\n\t\t`Returns true if |list is empty.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-deferred-command',\n\t\t[ 'nex' ],\n\t\tfunction $isDeferredCommand(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isDeferredCommand(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a deferred command.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-deferred-value',\n\t\t[ 'nex' ],\n\t\tfunction $isDeferredValue(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isDeferredValue(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a deferred value.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-error',\n\t\t[ 'nex' ],\n\t\tfunction $isError(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isError(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is an error.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-float',\n\t\t[ 'nex' ],\n\t\tfunction $isFloat(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isFloat(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a float.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-integer',\n\t\t[ 'nex' ],\n\t\tfunction $isInteger(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isInteger(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is an integer.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-lambda',\n\t\t[ 'nex' ],\n\t\tfunction $isLambda(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isLambda(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a lambda.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-letter',\n\t\t[ 'nex' ],\n\t\tfunction $isLetter(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isLetter(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a letter.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-line',\n\t\t[ 'nex' ],\n\t\tfunction $isLine(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isLine(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a line.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-list',\n\t\t[ 'nex' ],\n\t\tfunction $isList(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isNexContainer(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a list.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-nil',\n\t\t[ 'nex' ],\n\t\tfunction $isNil(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isNil(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is nil.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-separator',\n\t\t[ 'nex' ],\n\t\tfunction $isSeparator(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isSeparator(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a separator.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-string',\n\t\t[ 'nex' ],\n\t\tfunction $isString(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isEString(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a string.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-symbol',\n\t\t[ 'nex' ],\n\t\tfunction $isSymbol(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isESymbol(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a symbol.`\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'is-word',\n\t\t[ 'nex' ],\n\t\tfunction $isWord(env, executionEnvironment) {\n\t\t\treturn constructBool(Utils.isWord(env.lb('nex')));\n\t\t},\n\t\t`Returns true if |nex is a word.`\n\t);\n}\n\nexport { createTestBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport * as Utils from '../utils.js'\n\n\nimport { Nex } from '../nex/nex.js' \nimport { NexContainer } from '../nex/nexcontainer.js' \nimport { ValueNex } from '../nex/valuenex.js' \nimport { Builtin } from '../nex/builtin.js' \nimport { constructFatalError } from '../nex/eerror.js' \n\nimport { constructEString } from '../nex/estring.js' \nimport { constructFloat } from '../nex/float.js' \nimport { constructInteger } from '../nex/integer.js' \nimport { constructLetter } from '../nex/letter.js' \nimport { constructWord } from '../nex/word.js' \n\nimport { evaluateNexSafely } from '../evaluator.js'\n\n\nimport { ERROR_TYPE_WARN, ERROR_TYPE_FATAL, ERROR_TYPE_INFO, ERROR_TYPE_PREVIOUSLY_FATAL } from '../nex/eerror.js'\n\nfunction createTypeConversionBuiltins() {\n\n\tBuiltin.createBuiltin(\n\t\t'get-lambda',\n\t\t[ 'nex&' ],\n\t\tfunction $getLambda(env, executionEnvironment) {\n\t\t\tlet n = env.lb('nex');\n\t\t\treturn n.getLambda();\n\t\t},\n\t\t'Returns the lambda expression that is used by the passed-in closure to execute code. Warning: modifying this lambda will change the code of the closure.'\n\t\t)\n\n\tBuiltin.createBuiltin(\n\t\t'no-fail',\n\t\t[ '_nex' ],\n\t\tfunction nofail(env, executionEnvironment) {\n\t\t\tlet expr = env.lb('nex');\n\t\t\tlet newresult = evaluateNexSafely(expr, executionEnvironment);\n\t\t\tif (Utils.isFatalError(newresult)) {\n\t\t\t\tnewresult.setErrorType(ERROR_TYPE_PREVIOUSLY_FATAL);\n\t\t\t}\n\t\t\treturn newresult;\n\t\t},\n\t\t'If evaluating |nex results in a fatal error, this converts the fatal error into the \"previously fatal\" error type, which doesn\\'t trigger error cascading.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'to-float',\n\t\t[ 'nex' ],\n\t\tfunction $toFloat(env, executionEnvironment) {\n\t\t\tlet v = env.lb('nex');\n\t\t\tif (Utils.isFloat(v)) {\n\t\t\t\treturn v;\n\t\t\t} else if (Utils.isInteger(v)) {\n\t\t\t\treturn constructFloat(v.getTypedValue());\n\t\t\t} else if (Utils.isBool(v)) {\n\t\t\t\treturn v.getTypedValue() ? constructFloat(1): constructFloat(0);\n\t\t\t} else if (Utils.isEString(v)) {\n\t\t\t\tlet s = v.getFullTypedValue();\n\t\t\t\tlet mayben = parseFloat(s);\n\t\t\t\tif (Number.isNaN(mayben)) {\n\t\t\t\t\treturn constructFatalError(`to-float: could not convert \"${s}\". Sorry!`);\n\t\t\t\t} else {\n\t\t\t\t\treturn constructFloat(mayben);\n\t\t\t\t}\n\t\t\t} else if (Utils.isLetter(v)) {\n\t\t\t\t// could be a number.\n\t\t\t\tlet s = v.getText();\n\t\t\t\tlet mayben = parseFloat(s);\n\t\t\t\tif (Number.isNaN(mayben)) {\n\t\t\t\t\treturn constructFatalError(`to-float: could not convert \"${s}\". Sorry!`);\n\t\t\t\t} else {\n\t\t\t\t\treturn constructFloat(mayben);\n\t\t\t\t}\n\t\t\t} else if (Utils.isWord(v) || Utils.isLine(v) || Utils.isDoc(v)) {\n\t\t\t\t// could be a number.\n\t\t\t\tlet s = v.getValueAsString();\n\t\t\t\tlet mayben = parseFloat(s);\n\t\t\t\tif (Number.isNaN(mayben)) {\n\t\t\t\t\t// rofl\n\t\t\t\t\treturn constructFatalError(`to-float: could not convert \"${s}\" (object of type ${v.getTypeName()}). Sorry!`);\n\t\t\t\t} else {\n\t\t\t\t\treturn constructFloat(mayben);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn constructFatalError(`to-float: conversion of type ${v.getTypeName()} is unimplemented. Sorry!`);\n\t\t\t}\n\t\t},\n\t\t'Converts |nex to a float, or returns an error if this is impossible.'\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'to-integer',\n\t\t[ 'nex' ],\n\t\tfunction $toInteger(env, executionEnvironment) {\n\t\t\tlet v = env.lb('nex');\n\t\t\tif (Utils.isInteger(v)) {\n\t\t\t\treturn v;\n\t\t\t} else if (Utils.isFloat(v)) {\n\t\t\t\treturn constructInteger(Math.floor(v.getTypedValue()));\n\t\t\t} else if (Utils.isBool(v)) {\n\t\t\t\treturn v.getTypedValue() ? constructInteger(1): constructInteger(0);\n\t\t\t} else if (Utils.isEString(v)) {\n\t\t\t\tlet s = v.getFullTypedValue();\n\t\t\t\tlet mayben = parseInt(s);\n\t\t\t\tif (Number.isNaN(mayben)) {\n\t\t\t\t\treturn constructFatalError(`to-integer: could not convert \"${s}\". Sorry!`);\n\t\t\t\t} else {\n\t\t\t\t\treturn constructInteger(mayben);\n\t\t\t\t}\n\t\t\t} else if (Utils.isLetter(v)) {\n\t\t\t\t// could be a number.\n\t\t\t\tlet s = v.getText();\n\t\t\t\tlet mayben = parseInt(s);\n\t\t\t\tif (Number.isNaN(mayben)) {\n\t\t\t\t\treturn constructFatalError(`to-integer: could not convert \"${s}\". Sorry!`);\n\t\t\t\t} else {\n\t\t\t\t\treturn constructInteger(mayben);\n\t\t\t\t}\n\t\t\t} else if (Utils.isWord(v) || Utils.isLine(v) || Utils.isDoc(v)) {\n\t\t\t\t// could be a number.\n\t\t\t\tlet s = v.getValueAsString();\n\t\t\t\tlet mayben = parseInt(s);\n\t\t\t\tif (Number.isNaN(mayben)) {\n\t\t\t\t\t// rofl\n\t\t\t\t\treturn constructFatalError(`to-integer: could not convert \"${s}\" (object of type ${v.getTypeName()}). Sorry!`);\n\t\t\t\t} else {\n\t\t\t\t\treturn constructInteger(mayben);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn constructFatalError(`to-integer: conversion of type ${v.getTypeName()} is unimplemented. Sorry!`);\n\t\t\t}\n\t\t},\n\t\t'Converts |nex to an integer, or returns an error if this is impossible.'\n\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'to-string',\n\t\t[ 'nex' ],\n\t\tfunction $toString(env, executionEnvironment) {\n\t\t\tlet v = env.lb('nex');\n\t\t\tif (Utils.isEString(v)) {\n\t\t\t\treturn constructEString(v.getFullTypedValue());\n\t\t\t} else if (Utils.isBool(v)) {\n\t\t\t\treturn constructEString(v.getTypedValue() ? 'yes' : 'no');\n\t\t\t} else if (Utils.isFloat(v)) {\n\t\t\t\treturn constructEString('' + v.getTypedValue());\n\t\t\t} else if (Utils.isInteger(v)) {\n\t\t\t\treturn constructEString('' + v.getTypedValue());\n\t\t\t} else if (Utils.isLetter(v)) {\n\t\t\t\treturn constructEString('' + v.getText());\n\t\t\t} else if (Utils.isSeparator(v)) {\n\t\t\t\treturn constructEString('' + v.getText());\n\t\t\t} else if (Utils.isWord(v) || Utils.isLine(v) || Utils.isDoc(v)) {\n\t\t\t\tlet ss = v.getValueAsString();\n\t\t\t\tif (typeof(ss) == 'string') {\n\t\t\t\t\treturn constructEString(ss);\n\t\t\t\t} else {\n\t\t\t\t\treturn constructFatalError(`to-string: could not convert \"${ss}\" (object of type ${v.getTypeName()}). Sorry!`);\n\t\t\t\t}\n\t\t\t} else if (Utils.isOrg(v)) {\n\t\t\t\treturn constructEString('' + v.getValueAsString());\n\t\t\t} else {\n\t\t\t\treturn constructFatalError(`to-string: conversion of type ${v.getTypeName()} is unimplemented. Sorry!`);\n\n\t\t\t}\n\t\t},\n\t\t'Converts |nex to a string, or returns an error if this is impossible.'\n\n\t);\n\n\tBuiltin.createBuiltin(\n\t\t'to-word',\n\t\t[ 'nex' ],\n\t\tfunction $toWord(env, executionEnvironment) {\n\t\t\tlet v = env.lb('nex');\n\n\t\t\tif (Utils.isWord(v)) {\n\t\t\t\treturn v;\n\t\t\t}\n\t\t\tlet jsStringToDoc = (function(str) {\n\t\t\t\tvar w = constructWord();\n\t\t\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\t\t\tlet lt = constructLetter(str.charAt(i));\n\t\t\t\t\tw.appendChild(lt);\n\t\t\t\t}\n\t\t\t\treturn w;\n\t\t\t});\n\t\t\tif (Utils.isInteger(v)\n\t\t\t\t|| Utils.isFloat(v)\n\t\t\t\t|| Utils.isBool(v)\n\t\t\t\t) {\n\t\t\t\treturn jsStringToDoc('' + v.getTypedValue())\n\t\t\t} else if (Utils.isEString(v)) {\n\t\t\t\treturn jsStringToDoc('' + v.getFullTypedValue())\n\t\t\t} else if (Utils.isLetter(v)) {\n\t\t\t\tlet w = constructWord();\n\t\t\t\tw.appendChild(v.makeCopy());\n\t\t\t\treturn w;\n\t\t\t} else {\n\t\t\t\t// should at least be able to do lines and docs.\n\t\t\t\t// I feel like maybe to-word should just be in util-functions tho.\n\t\t\t\treturn constructFatalError(`to-word: conversion of type ${v.getTypeName()} is unimplemented. Sorry!`);\n\t\t\t}\n\t\t},\n\t\t'Converts |nex to a word, or returns an error if this is impossible.'\n\t);\n\n}\n\nexport { createTypeConversionBuiltins }\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\nimport * as Utils from \"../utils.js\";\n\nimport { Builtin } from \"../nex/builtin.js\";\n\nimport { constructFatalError, newTagOrThrowOOM } from \"../nex/eerror.js\";\nimport { constructWavetable } from \"../nex/wavetable.js\";\nimport { constructNil } from \"../nex/nil.js\";\nimport { constructInteger } from \"../nex/integer.js\";\nimport { constructOrg } from \"../nex/org.js\";\nimport { constructFloat } from \"../nex/float.js\";\nimport { constructEString } from \"../nex/estring.js\";\nimport { constructDeferredValue } from \"../nex/deferredvalue.js\";\nimport { constructEError } from \"../nex/eerror.js\";\nimport { GenericActivationFunctionGenerator } from \"../asyncfunctions.js\";\n\nimport { UNBOUND } from \"../environment.js\";\nimport {\n  loadSample,\n  startRecordingAudio,\n  stopRecordingAudio,\n} from \"../webaudio.js\";\nimport {\n  convertValueFromTag,\n  convertTimeToSamples,\n  setBpm,\n  nexToTimebase,\n  getReferenceFrequency,\n  setDefaultTimebase,\n  getDefaultTimebase,\n  getSampleRate,\n  getConstantSignalFromValue,\n} from \"../wavetablefunctions.js\";\nimport { loopPlay, oneshotPlay, abortPlayback } from \"../webaudio.js\";\nimport { Tag } from \"../tag.js\";\nimport { ERROR_TYPE_INFO } from \"../nex/eerror.js\";\nimport { Command } from \"../nex/command.js\";\nimport { sAttach, sEval } from \"../syntheticroot.js\";\nimport { heap } from \"../heap.js\";\nimport { systemState } from \"../systemstate.js\";\n\nfunction createWavetableBuiltins() {\n  Builtin.createBuiltin(\n    \"set-default-timebase\",\n    [\"a\"],\n    function $setDefaultTimebase(env, executionEnvironment) {\n      let a = env.lb(\"a\");\n      setDefaultTimebase(a);\n      return constructNil();\n    },\n    \"Looks at the tags on |a and sets the default timebase based on their values.\"\n  );\n\n  Builtin.createBuiltin(\n    \"get-default-timebase\",\n    [],\n    function $getDefaultTimebase(env, executionEnvironment) {\n      let tb = getDefaultTimebase();\n      return constructEString(tb);\n    },\n    \"Returns the default timebase.\"\n  );\n\n  Builtin.createBuiltin(\n    \"oneshot-play\",\n    [\"wt_\", \"channels#()?\"],\n    function $oneshotPlay(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let channels = env.lb(\"channels\");\n\n      let buffers = [];\n      if (Utils.isNexContainer(wt)) {\n        for (let i = 0; i < wt.numChildren(); i++) {\n          buffers.push(wt.getChildAt(i).getCachedBuffer());\n        }\n      } else {\n        buffers.push(wt.getCachedBuffer());\n      }\n\n      let channelnumbers = [0, 1];\n      if (channels != UNBOUND) {\n        channelnumbers = [];\n        if (Utils.isNexContainer(channels)) {\n          for (let i = 0; i < channels.numChildren(); i++) {\n            channelnumbers.push(channels.getChildAt(i).getTypedValue());\n          }\n        } else {\n          channelnumbers.push(channels.getTypedValue());\n        }\n      }\n\n      oneshotPlay(buffers, channelnumbers);\n      return wt;\n    },\n    \"Plays |wt immediately on the given channel. If |channel is not provided, the sound is played on the first 2 channels. If |channel and/or |wt are lists, Vodka will do its best to match up sounds with channels.\"\n  );\n\n  Builtin.createBuiltin(\n    \"loop-play\",\n    [\"wt_\", \"channels#()?\"],\n    function $loopPlay(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let channels = env.lb(\"channels\");\n\n      let buffers = [];\n      if (Utils.isNexContainer(wt)) {\n        for (let i = 0; i < wt.numChildren(); i++) {\n          buffers.push(wt.getChildAt(i).getCachedBuffer());\n        }\n      } else {\n        buffers.push(wt.getCachedBuffer());\n      }\n\n      let channelnumbers = [0, 1];\n      if (channels != UNBOUND) {\n        channelnumbers = [];\n        if (Utils.isNexContainer(channels)) {\n          for (let i = 0; i < channels.numChildren(); i++) {\n            channelnumbers.push(channels.getChildAt(i).getTypedValue());\n          }\n        } else {\n          channelnumbers.push(channels.getTypedValue());\n        }\n      }\n\n      loopPlay(buffers, channelnumbers);\n      return wt;\n    },\n    \"Starts playing wt| at the next measure start on |channel.  If |channel is not provided, the sound is played on the first 2 channels. If |channel and/or |wt are lists, Vodka will do its best to match up sounds with channels.\"\n  );\n\n  Builtin.createBuiltin(\n    \"start-recording\",\n    [\"_wt_\"],\n    function $startRecording(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      startRecordingAudio(wt);\n      return wt;\n    },\n    \"Tells |wt to start recording.\"\n  );\n\n  Builtin.createBuiltin(\n    \"stopRecording\",\n    [\"_wt_\"],\n    function $startRecording(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      stopRecordingAudio(wt);\n      return wt;\n    },\n    \"Tells |wt to stop recording.\"\n  );\n\n  Builtin.createBuiltin(\n    \"abort-playback\",\n    [\"channel#?\"],\n    function $abortPlayback(env, executionEnvironment) {\n      let channel = env.lb(\"channel\");\n      let channelnumber = -1;\n      if (channel != UNBOUND) {\n        channelnumber = channel.getTypedValue();\n      }\n\n      abortPlayback(channelnumber);\n      return constructNil();\n    },\n    \"Starts playing the sound at the next measure start\"\n  );\n\n  Builtin.createBuiltin(\n    \"split\",\n    [\"wt_\"],\n    function $play(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let r = constructOrg();\n      for (let i = 0; i < wt.numSections(); i++) {\n        let sd = wt.getSectionData(i);\n        let w = constructWavetable(sd.data.length);\n        let wdata = w.getData();\n        for (let i = 0; i < sd.data.length; i++) {\n          wdata[i] = sd.data[i];\n        }\n        w.init();\n        r.appendChild(w);\n      }\n      return r;\n    },\n    \"Splits a wavetable into smaller sections based on markers added in wavetable editor\"\n  );\n\n  Builtin.createBuiltin(\n    \"wavefold\",\n    [\"wt_\"],\n    function $reverse(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n\n      let dur = wt.getDuration();\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      for (let i = 0; i < dur; i++) {\n        let val = wt.valueAtSample(i);\n        while (val > 1 || val < -1) {\n          if (val > 1) {\n            val = 1 - (val - 1);\n          }\n          if (val < -1) {\n            val = -1 + -(val + 1); // this math makes sense to me\n          }\n        }\n        data[i] = val;\n      }\n      r.init();\n      return r;\n    },\n    \"Reverses wavetable |wt\"\n  );\n\n  Builtin.createBuiltin(\n    \"reverse\",\n    [\"wt_\"],\n    function $reverse(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n\n      let dur = wt.getDuration();\n      let r = constructWavetable(dur);\n      let data = r.getData();\n      for (let i = 0; i < dur; i++) {\n        data[i] = wt.valueAtSample(dur - i);\n      }\n      r.init();\n      return r;\n    },\n    \"Reverses wavetable |wt\"\n  );\n\n  Builtin.createBuiltin(\n    \"constant\",\n    [\"val#%?\", \"len#%?\"],\n    function $const(env, executionEnvironment) {\n      let len = env.lb(\"len\");\n      let val = env.lb(\"val\");\n\n      let dur = 256;\n      if (len != UNBOUND) {\n        dur = convertTimeToSamples(len);\n      }\n      let valfloat = 1.0;\n      if (val != UNBOUND) {\n        valfloat = convertValueFromTag(val);\n      }\n\n      return getConstantSignalFromValue(valfloat, dur);\n    },\n    \"Returns |dur samples of a constant value |val\"\n  );\n\n  Builtin.createBuiltin(\n    \"singlepole\",\n    [\"wt1_\", \"wt2#%_\"],\n    function $singlepole(env, executionEnvironment) {\n      let wt1 = env.lb(\"wt1\");\n      let wt2 = env.lb(\"wt2\");\n\n      if (!(wt2.getTypeName() == \"-wavetable-\")) {\n        wt2 = getConstantSignalFromValue(\n          wt2.getTypedValue(),\n          wt1.getDuration()\n        );\n        sAttach(wt2);\n      }\n\n      let dur = Math.max(wt1.getDuration(), wt2.getDuration());\n      let r = constructWavetable(dur);\n      let data = r.getData();\n      let yk = wt1.valueAtSample(0);\n\n      let cutoffAtOne = 20000;\n      let timeconstant = 1 / getSampleRate();\n\n      for (let i = 0; i < dur; i++) {\n        let wt1val = wt1.valueAtSample(i);\n        let wt2val = wt2.valueAtSample(i);\n        let cutoff = wt2val * cutoffAtOne;\n        let tau = 1 / cutoff;\n        let alpha = timeconstant / tau;\n        yk += alpha * (wt1val - yk);\n        data[i] = yk;\n      }\n      r.init();\n      return r;\n    },\n    \"Runs |wt1 through a single pole filter with a cutoff determined by |wt2. If an integer or float is passed in for wt2, it is converted to a constant signal. A value of 1 corresponds to a filter cutoff frequency of 20kHz.\"\n  );\n\n  Builtin.createBuiltin(\n    \"convolve\",\n    [\"wt_\", \"ir_\"],\n    function $convolve(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let ir = env.lb(\"ir\");\n\n      let wtLen = wt.getDuration();\n      let irLen = ir.getDuration();\n      let outLen = wtLen + irLen;\n      let r = constructWavetable(outLen); // -1\n      let rdata = r.getData();\n      for (let outIndex = 0; outIndex < outLen; outIndex++) {\n        let sum = 0;\n        for (let offset = 0; offset < irLen; offset++) {\n          let irIndex = offset;\n          let wtIndex = outIndex - offset;\n          if (irIndex < irLen && wtIndex >= 0) {\n            let irValue = ir.valueAtSample(irIndex);\n            // Note: wt will loop to the beginning of the sample if we ask for an index beyond the end of it.\n            // However for a realistic reverb what we really want is zeros once we get to the end of the sound.\n            // We will be indexing past the end of the sound when outIndex gets greater than wtLen and\n            // offset is 0 or a small value.\n            let wtValue = wtIndex >= wtLen ? 0.0 : wt.valueAtSample(wtIndex);\n            sum += irValue * wtValue;\n          }\n        }\n        rdata[outIndex] = sum;\n      }\n      r.init();\n      return r;\n    },\n    \"Convolves |wt with |ir. If |ir is an impulse response, this should give a reverb effect. Otherwise this will create a hybrid sound that shares some characteristics of both sounds. Warning: this function is very slow, you may have to wait a while.\"\n  );\n\n  Builtin.createBuiltin(\n    \"slew\",\n    [\"wt1_\", \"wt2#%_\"],\n    function $slew(env, executionEnvironment) {\n      let wt1 = env.lb(\"wt1\");\n      let wt2 = env.lb(\"wt2\");\n\n      if (!(wt2.getTypeName() == \"-wavetable-\")) {\n        wt2 = getConstantSignalFromValue(\n          wt2.getTypedValue(),\n          wt1.getDuration()\n        );\n        sAttach(wt2);\n      }\n\n      let dur = Math.max(wt1.getDuration(), wt2.getDuration());\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      let previousValue = wt1.valueAtSample(0);\n      data[0] = previousValue;\n      for (let i = 1; i < dur; i++) {\n        let thisval = wt1.valueAtSample(i);\n        let maxchange = Math.max(0, wt2.valueAtSample(i));\n\n        let diff = thisval - previousValue;\n\n        if (diff > maxchange) {\n          data[i] = previousValue + maxchange;\n        } else if (diff < -maxchange) {\n          data[i] = previousValue - maxchange;\n        } else {\n          data[i] = thisval;\n        }\n        previousValue = data[i];\n      }\n      r.init();\n      return r;\n    },\n    \"Slows down rate of change of |wt1 to a maximum value per sample given by |wt2. If wt1 is a signal residing between -1 and 1, values of wt2 that are between 0 and 1 will yield best results.\"\n  );\n\n  // fix this, example situation where it breaks:\n  // take a normal ramp (2 beats) and pass it through a function that takes the value to the 5th power\n  // the function will return, but some async bullshit will continue and some numbers will keep incrementing in the js console, not sure what is happening\n\n  Builtin.createBuiltin(\n    \"wavecalc\",\n    [\"wt_\", \"f&\"],\n    function $const(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let f = env.lb(\"f\");\n\n      let dur = wt.getDuration();\n      let r = constructWavetable(dur);\n      let data = r.getData();\n      for (let i = 0; i < dur; i++) {\n        let v = constructFloat(wt.valueAtSample(i));\n        let result = sEval(\n          systemState\n            .getSCF()\n            .makeCommandWithClosureOneArg(f, systemState.getSCF().makeQuote(v)),\n          executionEnvironment,\n          \"wavecalc: error returned from function\"\n        );\n        if (result.getTypeName() != \"-float-\") {\n          return constructFatalError(\"wavecalc: function must return a float\");\n        }\n        data[i] = result.getTypedValue();\n      }\n      r.init();\n      return r;\n    },\n    \"Calls function |f on every sample in |wt (this may take a while for long samples)\"\n  );\n\n  Builtin.createBuiltin(\n    \"noise\",\n    [\"len#%?\"],\n    function $noise(env, executionEnvironment) {\n      let len = env.lb(\"len\");\n      if (len == UNBOUND) {\n        len = constructInteger(getReferenceFrequency());\n        len.addTag(newTagOrThrowOOM(\"hz\", \"noise wavetable builtin, timebase\"));\n        sAttach(len);\n      }\n      let dur = convertTimeToSamples(len);\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      for (let i = 0; i < dur; i++) {\n        let n = Math.random() * 2.0 - 1.0;\n        data[i] = n;\n      }\n      r.init();\n      return r;\n    },\n    \"Returns dur samples (or seconds, etc) of white noise\"\n  );\n\n  Builtin.createBuiltin(\n    \"sinewave\",\n    [\"nn#%?\"],\n    function $sinewave(env, executionEnvironment) {\n      let nn = env.lb(\"nn\");\n      if (nn == UNBOUND) {\n        nn = constructInteger(getReferenceFrequency());\n        nn.addTag(\n          newTagOrThrowOOM(\"hz\", \"sinewave wavetable builtin, timebase\")\n        );\n        sAttach(nn);\n      }\n\n      let dur = convertTimeToSamples(nn);\n      let r = constructWavetable(dur);\n      let data = r.getData();\n      for (let i = 0; i < dur; i++) {\n        let d = Math.sin((i / dur) * 2 * Math.PI);\n        data[i] = d;\n      }\n      r.init();\n      return r;\n    },\n    \"Returns a wavetable of a sine wave\"\n  );\n\n  Builtin.createBuiltin(\n    \"gate\",\n    [\"nn#%?\"],\n    function $squarewave(env, executionEnvironment) {\n      let nn = env.lb(\"nn\");\n      if (nn == UNBOUND) {\n        nn = constructInteger(1);\n        nn.addTag(newTagOrThrowOOM(\"b\", \"gate wavetable builtin, timebase\"));\n        sAttach(nn);\n      }\n\n      let dur = convertTimeToSamples(nn);\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      for (let i = 0; i < dur; i++) {\n        if (i < dur / 2) {\n          data[i] = 0;\n        } else {\n          data[i] = 1;\n        }\n      }\n      r.init();\n      return r;\n    },\n    \"Returns a wavetable of a gate signal\"\n  );\n\n  Builtin.createBuiltin(\n    \"squarewave\",\n    [\"nn#%?\"],\n    function $squarewave(env, executionEnvironment) {\n      let nn = env.lb(\"nn\");\n      if (nn == UNBOUND) {\n        nn = constructInteger(getReferenceFrequency());\n        nn.addTag(\n          newTagOrThrowOOM(\"hz\", \"squarewave wavetable builtin, timebase\")\n        );\n        sAttach(nn);\n      }\n\n      let dur = convertTimeToSamples(nn);\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      let numHarmonics = 16;\n      let freq = (1 / dur) * getSampleRate();\n      for (let i = 0; i < dur; i++) {\n        let omega = 2 * Math.PI * freq;\n        // time in seconds of how far we are in the wave\n        let time = (1 / getSampleRate()) * i;\n\n        let s = 0;\n        for (let k = 1; k <= numHarmonics; k++) {\n          let oddnum = k * 2 - 1;\n          let v = (1 / oddnum) * Math.sin(oddnum * omega * time);\n          s += v;\n        }\n        data[i] = s * (4 / Math.PI);\n      }\n      r.init();\n      return r;\n    },\n    \"Returns a wavetable of a square wave\"\n  );\n\n  Builtin.createBuiltin(\n    \"sawwave\",\n    [\"nn#%?\"],\n    function $sawwave(env, executionEnvironment) {\n      let nn = env.lb(\"nn\");\n      if (nn == UNBOUND) {\n        nn = constructInteger(getReferenceFrequency());\n        nn.addTag(\n          newTagOrThrowOOM(\"hz\", \"sawwave wavetable builtin, timebase\")\n        );\n        sAttach(nn);\n      }\n\n      let dur = convertTimeToSamples(nn);\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      for (let i = 0; i < dur; i++) {\n        let d = i / dur;\n        data[i] = d;\n      }\n      r.init();\n      return r;\n    },\n    \"Returns a wavetable of a saw wave\"\n  );\n\n  Builtin.createBuiltin(\n    \"ramp\",\n    [\"len#%?\"],\n    function $ramp(env, executionEnvironment) {\n      let len = env.lb(\"len\");\n      if (len == UNBOUND) {\n        len = constructInteger(1);\n        len.addTag(\n          newTagOrThrowOOM(\"seconds\", \"ramp wavetable builtin, timebase\")\n        );\n        sAttach(len);\n      }\n\n      let dur = convertTimeToSamples(len);\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      for (let i = 0; i < dur; i++) {\n        let d = 1.0 - i / dur;\n        data[i] = d;\n      }\n      r.init();\n      return r;\n    },\n    \"Returns a sample that ramps from one to zero in |len.\"\n  );\n\n  Builtin.createBuiltin(\n    \"resample-to\",\n    [\"wt_\", \"freq#%_?\"],\n    function $resampleTo(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let freq = env.lb(\"freq\");\n      if (freq == UNBOUND) {\n        freq = constructInteger(1);\n        freq.addTag(\n          newTagOrThrowOOM(\"seconds\", \"resample wavetable builtin, timebase\")\n        );\n        sAttach(freq);\n      }\n      if (!(freq.getTypeName() == \"-wavetable-\")) {\n        let tag = freq.hasTags() ? freq.getTag(0) : null;\n        freq = getConstantSignalFromValue(freq.getTypedValue());\n        if (tag) {\n          freq.addTag(tag);\n        }\n      }\n\n      let timebase = nexToTimebase(freq);\n      let oldDuration = wt.getDuration();\n      let freqDuration = freq.getDuration();\n\n      // IDK if there's a smarter way to do this than doing two loops,\n      // but I want to calculate the size of the destination first.\n\n      // for reasons I don't understand the below loop crashes chrome if it\n      // goes on too long. I don't know why it's getting an OOM condition.\n      // Experimentally on my machine I can get to about 120,000,000\n      // but I'll restrict the user to 10,000,000\n\n      let maxdur = 10000000;\n      let dur = 0;\n      let oldPosition = 0;\n      for (let i = 0; oldPosition < oldDuration; i = (i + 1) % freqDuration) {\n        let shiftValue = freq.valueAtSample(i);\n        // at every time step we have a different idea of what the new duration\n        // will be, this is the current value\n        let instantaneousNewDuration = convertTimeToSamples(\n          shiftValue,\n          timebase\n        );\n        if (dur > maxdur) {\n          return constructFatalError(\n            `resample-to: result wavetable too long! Must be less than ${maxdur} samples.`\n          );\n        }\n        // for example, if the old duration is 1 second, and the new duration is 0.5 seconds,\n        // then as we are building the new waveform sample by sample, we effectively skip\n        // every other sample. The amount of time we need to advance in each step is given by\n        // the old duration divided by the new duration (in this example, 1 / 0.5 = 2.0 samples)\n        // Of course, we recalculate every step because the resample amount can be a waveform.\n        let amountToAdvance = oldDuration / instantaneousNewDuration;\n        oldPosition += amountToAdvance;\n        dur++;\n      }\n      if (dur == 0) {\n        return constructFatalError(\n          `resample-to: result wavetable too short (would be zero-length).`\n        );\n      }\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      let j = 0;\n      oldPosition = 0;\n      for (\n        let i = 0;\n        oldPosition < oldDuration;\n        j++, i = (i + 1) % freqDuration\n      ) {\n        let v = wt.interpolatedValueAtSample(oldPosition);\n        let shiftValue = freq.valueAtSample(i);\n        // convert that to samples\n        let instantaneousNewDuration = convertTimeToSamples(\n          shiftValue,\n          timebase\n        );\n        // that number is the total number of samples it would be\n        // if you resampled this entire wave at that rate.\n        // But we are doing one timestep at a time, so\n        // divide by original sample length.\n        let amountToAdvance = oldDuration / instantaneousNewDuration;\n        oldPosition += amountToAdvance;\n        data[j] = v;\n      }\n\n      r.init();\n      return r;\n    },\n    \"Resamples the audio to a given duration or frequency (for example, changing a sample from 2 seconds to 4 seconds).\"\n  );\n\n  Builtin.createBuiltin(\n    \"resample-by\",\n    [\"wt_\", \"amount#%_\"],\n    function $resampleBy(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let amt = env.lb(\"amount\");\n      if (amt == UNBOUND) {\n        amt = constructInteger(1);\n        sAttach(amt);\n      }\n\n      let resultDuration = 0;\n\n      let oldDuration = wt.getDuration();\n\n      if (!(amt.getTypeName() == \"-wavetable-\")) {\n        let scaleFactor = amt.getTypedValue();\n        if (scaleFactor == 0) {\n          return constructFatalError(\n            \"resample-by: cannot scale to a constant value that is zero.\"\n          );\n        }\n        amt = getConstantSignalFromValue(scaleFactor);\n        resultDuration = oldDuration * (1 / Math.abs(scaleFactor));\n      } else {\n        // match the duration of the second arg.\n        resultDuration = amt.getDuration();\n      }\n      let amtDuration = amt.getDuration();\n      let maxdur = 1000000;\n      if (resultDuration > maxdur) {\n        return constructFatalError(\n          `resample-by: result wavetable too long! Must be less than ${maxdur} samples.`\n        );\n      }\n      if (resultDuration <= 0) {\n        // is it possible to get here?\n        return constructFatalError(\n          `resample-by: result wavetable too short (would be zero-length).`\n        );\n      }\n\n      let r = constructWavetable(resultDuration);\n      let data = r.getData();\n\n      let oldPosition = 0;\n      for (let i = 0; i < resultDuration; i++) {\n        let v = wt.interpolatedValueAtSample(oldPosition);\n        let amountToAdvance = amt.valueAtSample(i % amtDuration);\n        oldPosition += amountToAdvance;\n        data[i] = v;\n      }\n\n      r.init();\n      return r;\n    },\n    'Resamples the audio by a percentage given by the second arg. Positive 1 means no change. Negative values cause the \"play head\" to reverse direction. If the second argument is a constant, the duration of the result is determined by the first argument, otherwise the duration of the second argument determines the result duration.'\n  );\n\n  Builtin.createBuiltin(\n    \"resample-scale\",\n    [\"wt_\", \"degree#\"],\n    function $resampleScale(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let deg = env.lb(\"degree\");\n      let scaleDegree = deg.getTypedValue();\n\n      // 24 -> 4\n      // 12 -> 2\n      // 0 -> 1\n      // -12 -> 0.5\n\n      // scale factor is 2 ** (degree / 12)\n\n      let scaleFactor = 2 ** (scaleDegree / 12);\n\n      let oldDuration = wt.getDuration();\n\n      let resultDuration = oldDuration * (1 / Math.abs(scaleFactor));\n\n      let maxdur = 1000000;\n      if (resultDuration > maxdur) {\n        return constructFatalError(\n          `resample-scale: result wavetable too long! Must be less than ${maxdur} samples.`\n        );\n      }\n      if (resultDuration <= 0) {\n        // is it possible to get here?\n        return constructFatalError(\n          `resample-scale: result wavetable too short (would be zero-length).`\n        );\n      }\n\n      let r = constructWavetable(resultDuration);\n      let data = r.getData();\n\n      let oldPosition = 0;\n      for (let i = 0; i < resultDuration; i++) {\n        let v = wt.interpolatedValueAtSample(oldPosition);\n        let amountToAdvance = scaleFactor;\n        oldPosition += amountToAdvance;\n        data[i] = v;\n      }\n\n      r.init();\n      return r;\n    },\n    \"Assumes the given sample is the fundamental in a diatonic scale and resamples to a scale degree determined by the second integer argument (e.e. 3 is a minor third up, -1 is a half step down). Note that this uses equal temperament.\"\n  );\n\n  Builtin.createBuiltin(\n    \"normalize\",\n    [\"wt_\"],\n    function $normalize(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let amp = wt.getAmp();\n      let gain = 1 / amp;\n\n      let dur = wt.getDuration();\n      let r = constructWavetable(dur);\n      let data = r.getData();\n      for (let i = 0; i < wt.getDuration(); i++) {\n        let val = wt.valueAtSample(i);\n        data[i] = val * gain;\n      }\n      r.init();\n      return r;\n    },\n    \"Normalizes a wavetable (attenuates it such that the highest peak is exactly at full scale, or 1)\"\n  );\n\n  Builtin.createBuiltin(\n    \"half-rectify\",\n    [\"wt_\"],\n    function $halfrectify(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n\n      let dur = wt.getDuration();\n      let r = constructWavetable(dur);\n      let data = r.getData();\n      for (let i = 0; i < wt.getDuration(); i++) {\n        let val = wt.valueAtSample(i);\n        if (val >= 0) {\n          data[i] = val;\n        } else {\n          data[i] = 0;\n        }\n      }\n      r.init();\n      return r;\n    },\n    \"Changes all negative signal values in |wt to zero, but leaves positive values alone.\"\n  );\n\n  Builtin.createBuiltin(\n    \"full-rectify\",\n    [\"wt_\"],\n    function $fullrectify(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n\n      let dur = wt.getDuration();\n      let r = constructWavetable(dur);\n      let data = r.getData();\n      for (let i = 0; i < wt.getDuration(); i++) {\n        let val = wt.valueAtSample(i);\n        if (val >= 0) {\n          data[i] = val;\n        } else {\n          data[i] = -val;\n        }\n      }\n      r.init();\n      return r;\n    },\n    \"Inverts just the negative signal values in |wt, leaving positive values alone.\"\n  );\n\n  Builtin.createBuiltin(\n    \"invert\",\n    [\"wt_\"],\n    function $invert(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n\n      let dur = wt.getDuration();\n      let r = constructWavetable(dur);\n      let data = r.getData();\n      for (let i = 0; i < wt.getDuration(); i++) {\n        let val = wt.valueAtSample(i);\n        data[i] = -val;\n      }\n      r.init();\n      return r;\n    },\n    \"Inverts the sign of all values in |wt, making positive negative and negative positive.\"\n  );\n\n  Builtin.createBuiltin(\n    \"offset\",\n    [\"wt_\", \"amt#%_\"],\n    function $offset(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let amt = env.lb(\"amt\");\n\n      if (!(amt.getTypeName() == \"-wavetable-\")) {\n        amt = getConstantSignalFromValue(amt.getTypedValue(), wt.getDuration());\n        sAttach(amt);\n      }\n\n      let dur = Math.max(wt.getDuration(), amt.getDuration());\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      for (let i = 1; i < dur; i++) {\n        let val = wt.valueAtSample(i);\n        let offset = amt.valueAtSample(i);\n        data[i] = val + offset;\n      }\n      r.init();\n      return r;\n    },\n    \"Offsets the signal value of |wt by |amt (note that |amt can be another wavetable).\"\n  );\n\n  Builtin.createBuiltin(\n    \"phase-shift\",\n    [\"wt_\", \"amt#%_\"],\n    function $offset(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let amt = env.lb(\"amt\");\n\n      if (!(amt.getTypeName() == \"-wavetable-\")) {\n        amt = getConstantSignalFromValue(amt.getTypedValue(), wt.getDuration());\n        sAttach(amt);\n      }\n\n      let originalDur = wt.getDuration();\n      let dur = Math.max(originalDur, amt.getDuration());\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      for (let i = 1; i < dur; i++) {\n        let shift = amt.valueAtSample(i);\n        let samplesToShift = shift * originalDur;\n        let val = wt.interpolatedValueAtSample(i + samplesToShift);\n        data[i] = val;\n      }\n      r.init();\n      return r;\n    },\n    'phase shifts the signal by |amt. The length of |wt is considered to be one \"cycle\" (even if it is a complex waveform). The values for |amt should range from 1.0 (full cycle shift forward) to -1.0 (full cycle shift backward). A wavetable can be passed in for |amt.'\n  );\n\n  Builtin.createBuiltin(\n    \"gain\",\n    [\"wtlst#%_...\"],\n    function $gain(env, executionEnvironment) {\n      let wtlst = env.lb(\"wtlst\");\n\n      // if the first arg to wtlst is a list instead of a wt, use it\n      if (wtlst.numChildren() == 1 && wtlst.getChildAt(0).isNexContainer()) {\n        wtlst = wtlst.getChildAt(0);\n      }\n\n      let waves = [];\n\n      let dur = 0;\n      for (let i = 0; i < wtlst.numChildren(); i++) {\n        let c = wtlst.getChildAt(i);\n        if (!(c.getTypeName() == \"-wavetable-\")) {\n          c = getConstantSignalFromValue(c.getTypedValue());\n        }\n        let d = c.getDuration();\n        if (d > dur) {\n          dur = d;\n        }\n        waves.push(c);\n      }\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      for (let i = 0; i < dur; i++) {\n        let v = 1;\n        for (let j = 0; j < waves.length; j++) {\n          v *= waves[j].valueAtSample(i);\n        }\n        data[i] = v;\n      }\n      r.init();\n      return r;\n    },\n    \"Multiplies together all the passed in numbers or waves\"\n  );\n\n  Builtin.createBuiltin(\n    \"clipad\",\n    [\"wt_\", \"len#%\"],\n    function $sizeto(env, executionEnvironment) {\n      let len = env.lb(\"len\");\n      let wt = env.lb(\"wt\");\n\n      let dur = convertTimeToSamples(len);\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      let index = 0;\n      let wtdur = wt.getDuration();\n\n      for (let i = 0; i < dur; i++) {\n        if (i < wtdur) {\n          data[index++] = wt.valueAtSample(i);\n        } else {\n          data[index++] = 0;\n        }\n      }\n      r.init();\n      return r;\n    },\n    \"Clips the length of the wavetable, or pads the end of it with silence, depending on whether the passed-in length is greater or less than the length of the wavetable.\"\n  );\n\n  Builtin.createBuiltin(\n    \"remove-from-start\",\n    [\"wt_\", \"len#%\"],\n    function $removeStart(env, executionEnvironment) {\n      let len = env.lb(\"len\");\n      let wt = env.lb(\"wt\");\n\n      let amountToRemove = convertTimeToSamples(len);\n      let originalDuration = wt.getDuration();\n      if (amountToRemove > originalDuration) {\n        amountToRemove = originalDuration;\n      }\n      if (amountToRemove < 0) {\n        amountToRemove = 0;\n      }\n      let startPosition = amountToRemove;\n      let resultDur = originalDuration - amountToRemove;\n\n      let r = constructWavetable(resultDur);\n      let data = r.getData();\n\n      for (let i = startPosition; i < originalDuration; i++) {\n        data[i - startPosition] = wt.valueAtSample(i);\n      }\n      r.init();\n      return r;\n    },\n    \"Removes |len amount of sound from the start of |wt.\"\n  );\n\n  Builtin.createBuiltin(\n    \"remove-from-end\",\n    [\"wt_\", \"len#%\"],\n    function $removeEnd(env, executionEnvironment) {\n      let len = env.lb(\"len\");\n      let wt = env.lb(\"wt\");\n\n      let amountToRemove = convertTimeToSamples(len);\n      let originalDuration = wt.getDuration();\n      if (amountToRemove > originalDuration) {\n        amountToRemove = originalDuration;\n      }\n      if (amountToRemove < 0) {\n        amountToRemove = 0;\n      }\n\n      let placeToStop = originalDuration - amountToRemove;\n      let resultDur = placeToStop;\n\n      let r = constructWavetable(resultDur);\n      let data = r.getData();\n\n      for (let i = 0; i < placeToStop; i++) {\n        data[i] = wt.valueAtSample(i);\n      }\n      r.init();\n      return r;\n    },\n    \"Removes |len amount of sound from the end of |wt.\"\n  );\n\n  Builtin.createBuiltin(\n    \"delay\",\n    [\"wt_\", \"time#%\"],\n    function $delay(env, executionEnvironment) {\n      let time = env.lb(\"time\");\n      let wt = env.lb(\"wt\");\n\n      time = convertTimeToSamples(time);\n      let originalDuration = wt.getDuration();\n      let outputDuration = originalDuration + time;\n\n      let r = constructWavetable(outputDuration);\n      let data = r.getData();\n\n      for (let i = time; i < outputDuration; i++) {\n        data[i] = wt.valueAtSample(i - time);\n      }\n      r.init();\n      return r;\n    },\n    \"Outputs a delayed copy of |wt (the beginning is padded with silence). Combine with the feedback builtin to get a classic delay sound.\"\n  );\n\n  Builtin.createBuiltin(\n    \"feedback\",\n    [\"wt_\", \"f&\", \"attenuation%\", \"n#\"],\n    function $delay(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let f = env.lb(\"f\");\n      let attenuation = env.lb(\"attenuation\").getTypedValue();\n      let n = env.lb(\"n\").getTypedValue();\n\n      let dur = wt.getDuration();\n      let wtData = wt.getData();\n      let output = constructWavetable(dur);\n      let outData = output.getData();\n\n      for (let i = 0; i < dur; i++) {\n        outData[i] = wtData[i];\n      }\n\n      let fedBackSignal = wt;\n      for (let i = 0; i < n; i++) {\n        fedBackSignal = sEval(\n          systemState.getSCF().makeCommandWithClosureOneArg(f, fedBackSignal)\n        );\n        let fedBackData = fedBackSignal.getData();\n        for (let j = 0; j < fedBackSignal.getDuration(); j++) {\n          fedBackData[j] = fedBackData[j] * attenuation;\n        }\n        for (let j = 0; j < dur; j++) {\n          if (j < fedBackSignal.getDuration()) {\n            outData[j] += fedBackData[j];\n          }\n        }\n      }\n\n      output.init();\n      return output;\n    },\n    \"Calls the function |f on |wt to produce an output, then calls |f on that output, then calls |f on the output of that, and so on, |n times, attenuating the output by |attenuation each time before passing it back into |f. The output of this function is the sum of all the outputs. This mimics analog feedback, but note that the |n parameter is a hard limit on the number of times the function is fed back into itself.\"\n  );\n\n  Builtin.createBuiltin(\n    \"amplitude\",\n    [\"wt_\"],\n    function $amplitude(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let val = wt.getAmp();\n      return constructFloat(val);\n    },\n    \"Gets the amplitude of a signal (max of absolute value, not RMS)\"\n  );\n\n  Builtin.createBuiltin(\n    \"duration\",\n    [\"wt_\"],\n    function $duration(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let val = wt.getDuration();\n      return constructInteger(val);\n    },\n    \"Gets the duration of a signal in samples\"\n  );\n\n  Builtin.createBuiltin(\n    \"silence\",\n    [\"len%#?\"],\n    function $lenation(env, executionEnvironment) {\n      let len = env.lb(\"len\");\n      if (len == UNBOUND) {\n        len = constructInteger(4);\n        len.addTag(\n          newTagOrThrowOOM(\"beats\", \"silence wavetable builtin, timebase\")\n        );\n        sAttach(len);\n      }\n      let dur = convertTimeToSamples(len);\n      return constructWavetable(dur);\n    },\n    \"Creates an empty wavetable (silence) with a duration of the requested number of samples\"\n  );\n\n  Builtin.createBuiltin(\n    \"mix\",\n    [\"wtlst#%_...\"],\n    function $mix(env, executionEnvironment) {\n      let wtlst = env.lb(\"wtlst\");\n\n      // if the first arg to wtlst is a list instead of a wt, use it\n      if (wtlst.numChildren() == 1 && wtlst.getChildAt(0).isNexContainer()) {\n        wtlst = wtlst.getChildAt(0);\n      }\n\n      let waves = [];\n\n      let dur = 0;\n      for (let i = 0; i < wtlst.numChildren(); i++) {\n        let c = wtlst.getChildAt(i);\n        if (!(c.getTypeName() == \"-wavetable-\")) {\n          c = getConstantSignalFromValue(c.getTypedValue());\n        }\n        let d = c.getDuration();\n        if (d > dur) {\n          dur = d;\n        }\n        waves.push(c);\n      }\n\n      let r = constructWavetable(dur);\n      let data = r.getData();\n      for (let i = 0; i < dur; i++) {\n        let v = 0;\n        for (let j = 0; j < waves.length; j++) {\n          v += waves[j].valueAtSample(i);\n        }\n        data[i] = v;\n      }\n      r.init();\n      return r;\n    },\n    \"Mixes together all the wavetables passed in\"\n  );\n\n  Builtin.createBuiltin(\n    \"loop-for\",\n    [\"wt#%_\", \"len%#?\"],\n    function $loopFor(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      if (!(wt.getTypeName() == \"-wavetable-\")) {\n        wt = getConstantSignalFromValue(wt.getTypedValue());\n      }\n\n      let len = env.lb(\"len\");\n      if (len == UNBOUND) {\n        len = constructInteger(4);\n        len.addTag(\n          newTagOrThrowOOM(\"beats\", \"loop-for wavetable builtin, timebase\")\n        );\n        sAttach(len);\n      }\n      let dur = convertTimeToSamples(len);\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      for (let i = 0; i < dur; i++) {\n        data[i] = wt.valueAtSample(i);\n      }\n      r.init();\n      return r;\n    },\n    \"Loops a sample for |len time.\"\n  );\n\n  Builtin.createBuiltin(\n    \"repeat\",\n    [\"wt_\", \"reps#?\"],\n    function $repeat(env, executionEnvironment) {\n      let wt = env.lb(\"wt\");\n      let times = 1;\n      if (times != UNBOUND) {\n        times = env.lb(\"reps\").getTypedValue();\n      }\n      let wtdur = wt.getDuration();\n      let dur = wtdur * times;\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      for (let i = 0; i < dur; i++) {\n        data[i] = wt.valueAtSample(i % wtdur);\n      }\n      r.init();\n      return r;\n    },\n    \"Repeats (loops) a sample a number of times exactly equal to |reps.\"\n  );\n\n  Builtin.createBuiltin(\n    \"seq\",\n    [\"wtlst()#%_...\"],\n    function $chain(env, executionEnvironment) {\n      let wtlst = env.lb(\"wtlst\");\n\n      let waves = [];\n      for (let i = 0; i < wtlst.numChildren(); i++) {\n        let c = wtlst.getChildAt(i);\n        if (c.getTypeName() == \"-wavetable-\") {\n          waves.push(c);\n        } else if (c.isNexContainer()) {\n          for (let j = 0; j < c.numChildren(); j++) {\n            let c2 = c.getChildAt(j);\n            if (c2.getTypeName() == \"-wavetable-\") {\n              waves.push(c2);\n            } else {\n              waves.push(getConstantSignalFromValue(c2.getTypedValue()));\n            }\n          }\n        } else if (Utils.isInteger(c) || Utils.isFloat(c)) {\n          waves.push(getConstantSignalFromValue(c.getTypedValue()));\n        } else {\n          return constructFatalError(\n            `seq: invalid type - must be wavetable, integer, or float. Got ${c.getTypeName()}`\n          );\n        }\n      }\n\n      let dur = 0;\n      for (let i = 0; i < waves.length; i++) {\n        let c = waves[i];\n        dur += c.getDuration();\n      }\n\n      let r = constructWavetable(dur);\n      let data = r.getData();\n\n      let k = 0;\n      for (let i = 0; i < waves.length; i++) {\n        let c = waves[i];\n        for (let j = 0; j < c.getDuration(); j++, k++) {\n          data[k] = c.valueAtSample(j);\n        }\n      }\n      r.init();\n      return r;\n    },\n    \"Sequences a list of wavetables into a single wavetable by concatenating them. If a list is passed in, the list must contain integers, floats, or wavetables only.\"\n  );\n\n  Builtin.createBuiltin(\n    \"load-sample\",\n    [\"fname$\"],\n    function $loadSample(env, executionEnvironment) {\n      let fname = env.lb(\"fname\").getFullTypedValue();\n\n      let deferredValue = constructDeferredValue();\n      deferredValue.set(\n        new GenericActivationFunctionGenerator(\"load-sample\", function (\n          callback,\n          deferredValue\n        ) {\n          loadSample(fname, function (sampledata) {\n            let r = constructWavetable(sampledata.length);\n            r.initWith(sampledata);\n            callback(r);\n          });\n        })\n      );\n      let loadingMessage = constructEError(`loading sample`);\n      loadingMessage.setErrorType(ERROR_TYPE_INFO);\n      deferredValue.appendChild(loadingMessage);\n      deferredValue.activate();\n      return deferredValue;\n\n      // let r = constructWavetable();\n      // r.loadFromFile(fname);\n      // return r;\n    },\n    \"Loads a sample file from disk.\"\n  );\n\n  Builtin.createBuiltin(\n    \"set-bpm\",\n    [\"bpm#%\"],\n    function $setBpm(env, executionEnvironment) {\n      let bpm = env.lb(\"bpm\");\n      let v = bpm.getTypedValue();\n      setBpm(v);\n      return constructNil();\n    },\n    \"Sets the global BPM used in time calculations.\"\n  );\n}\n\nexport { createWavetableBuiltins };\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { Builtin } from '../nex/builtin.js'; \nimport { getMidiDevices } from '../midifunctions.js'\nimport { constructOrg } from '../nex/org.js'; \nimport { constructDeferredValue } from '../nex/deferredvalue.js'; \nimport { constructFatalError, constructInfo, newTagOrThrowOOM } from '../nex/eerror.js'\nimport { convertJSMapToOrg } from '../nex/org.js'\nimport { Tag } from '../tag.js'\nimport {\n\tMidiActivationFunctionGenerator,\n\tGenericActivationFunctionGenerator\n} from '../asyncfunctions.js'\n\n\nfunction createMidiBuiltins() {\n\tBuiltin.createBuiltin(\n\t\t'list-midi-inputs',\n\t\t[ ],\n\t\tfunction $listMidiInputs(env, executionEnvironment) {\n\t\t\tlet dv = constructDeferredValue();\n\t\t\tdv.set(new GenericActivationFunctionGenerator(\n\t\t\t\t'list-midi-inputs', \n\t\t\t\tfunction(callback, exp) {\n\t\t\t\t\tgetMidiDevices(function(devs) {\n\t\t\t\t\t\t// devices will just be a string\n\t\t\t\t\t\t// convert to nice estrings\n\t\t\t\t\t\tlet r = constructOrg();\n\t\t\t\t\t\tfor (let i = 0; i < devs.length ; i++) {\n\t\t\t\t\t\t\tlet org = convertJSMapToOrg(devs[i]);\n\t\t\t\t\t\t\torg.setHorizontal();\n\t\t\t\t\t\t\torg.addTag(newTagOrThrowOOM('midiport', 'list midi imputs builtin'));\n\t\t\t\t\t\t\tr.appendChild(org);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tcallback(r);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t));\n\t\t\tlet waitmessage = constructInfo(`listing midi inputs`);\n\t\t\tdv.appendChild(waitmessage)\n\t\t\treturn dv;\n\t\t},\n\t\t'Lists midi inputs.'\n\t);\n\n\n\tBuiltin.createBuiltin(\n\t\t'wait-for-midi',\n\t\t[ 'midiport()' ],\n\t\tfunction $setMidi(env, executionEnvironment) {\n\t\t\tlet midiport = env.lb('midiport');\n\t\t\tlet ismidiport = midiport.hasTag(newTagOrThrowOOM('midiport', 'wait for midi builtin, is midi port'))\n\t\t\tlet id = midiport.getChildTagged(newTagOrThrowOOM('id', 'wait for midi builtin, id'));\n\t\t\tif (!ismidiport || !id) {\n\t\t\t\treturn constructFatalError('wait-for-midi: must pass in a midiport object with a valid ID');\n\t\t\t}\n\t\t\tlet dv = constructDeferredValue();\n\t\t\tdv.setAutoreset(true);\n\t\t\tlet afg = new MidiActivationFunctionGenerator(id.getTypedValue());\n\t\t\tdv.set(afg);\n\t\t\tdv.activate();\n\t\t\treturn dv;\n\t\t},\n\t\t'Returns a deferred value that updates any time a midi event is received on |midiport.'\n\t);\n\t\n}\n\nexport { createMidiBuiltins }\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\nimport { eventQueue } from '../eventqueue.js'\nimport { eventQueueDispatcher } from '../eventqueuedispatcher.js'\n\neventQueue.initialize();\n\nexport function runTest(testname) {\n\teval('TEST_' + testname + '();');\n}\n\nfunction assertEqual(a, b) {\n\tif (a != b) {\n\t\tthrow new Error('asserting equal failed: a = ' + a + ' b = ' + b);\n\t}\n}\n\nfunction assertTruthy(a) {\n\tif (!a) {\n\t\tthrow new Error('asserting truthy failed');\n\t}\n}\n\nfunction assertFalsy(a) {\n\tif (a) {\n\t\tthrow new Error('asserting falsy failed');\n\t}\n}\n\nfunction TEST_eventqueue_events_alertanimation() {\n\tlet fakeRenderNode = new Object();\n\teventQueueDispatcher.enqueueAlertAnimation(fakeRenderNode);\n\tlet item = eventQueue.retrieveNextItem();\n\tlet correctItem = {\n\t\taction: 'doAlertAnimation',\n\t\tshouldDedupe: true,\n\t\trenderNode: fakeRenderNode\n\t}\n\tassertTruthy(item);\n\tassertTruthy(item.equals(correctItem));\n\tassertEqual(item.action, correctItem.action);\n\tassertEqual(item.shouldDedupe, correctItem.shouldDedupe);\n\tassertEqual(item.renderNode, correctItem.renderNode);\n}\n\nfunction TEST_eventqueue_events_doclickhandleraction() {\n\tlet fakeTarget = new Object();\n\tlet fakeRenderNode = new Object();\n\tlet fakeEvent = new Object();\n\tlet fakeAtTarget = true;\n\teventQueueDispatcher.enqueueDoClickHandlerAction(fakeTarget, fakeRenderNode, fakeAtTarget, fakeEvent);\n\tlet item = eventQueue.retrieveNextItem();\n\tlet correctItem = {\n\t\taction: 'doClickHandlerAction',\n\t\ttarget: fakeTarget,\n\t\trenderNode: fakeRenderNode,\n\t\tevent: fakeEvent,\n\t\tshouldDedupe: false,\n\t}\n\tassertTruthy(item);\n\tassertEqual(item.action, correctItem.action);\n\tassertEqual(item.shouldDedupe, correctItem.shouldDedupe);\n\tassertEqual(item.event, correctItem.event);\n\tassertEqual(item.target, correctItem.target);\n\tassertEqual(item.renderNode, correctItem.renderNode);\n}\n\nfunction TEST_eventqueue_events_dokeyinput() {\n\tlet keycode = 'a';\n\tlet whichkey = 'b';\n\tlet hasShift = true;\n\tlet hasCtrl = true;\n\tlet hasMeta = true;\n\tlet hasAlt = true;\n\teventQueueDispatcher.enqueueDoKeyInput(keycode, whichkey, hasShift, hasCtrl, hasMeta, hasAlt);\n\tlet item = eventQueue.retrieveNextItem();\n\tlet correctItem = {\n\t\taction: 'doKeyInput',\n\t\tshouldDedupe: false,\n\t\tkeycode: keycode,\n\t\twhichkey: whichkey,\n\t\thasShift: hasShift,\n\t\thasCtrl: hasCtrl,\n\t\thasMeta: hasMeta,\n\t\thasAlt: hasAlt\n\t}\n\tassertTruthy(item);\n\tassertEqual(item.action, correctItem.action);\n\tassertEqual(item.shouldDedupe, correctItem.shouldDedupe);\n\tassertEqual(item.keycode, correctItem.keycode);\n\tassertEqual(item.whichkey, correctItem.whichkey);\n\tassertEqual(item.hasShift, correctItem.hasShift);\n\tassertEqual(item.hasCtrl, correctItem.hasCtrl);\n\tassertEqual(item.hasMeta, correctItem.hasMeta);\n\tassertEqual(item.hasAlt, correctItem.hasAlt);\n}\n\n\nfunction TEST_eventqueue_events_gc() {\n\teventQueueDispatcher.enqueueGC();\n\tlet item = eventQueue.retrieveNextItem();\n\tlet correctItem = {\n\t\taction: 'gc',\n\t\tshouldDedupe: true,\n\t}\n\tassertTruthy(item);\n\tassertTruthy(item.equals(correctItem));\n\tassertEqual(item.action, correctItem.action);\n\tassertEqual(item.shouldDedupe, correctItem.shouldDedupe);\n}\n\nfunction TEST_eventqueue_events_renderonlydirty() {\n\teventQueueDispatcher.enqueueRenderOnlyDirty();\n\tlet item = eventQueue.retrieveNextItem();\n\tlet correctItem = {\n\t\taction: 'renderOnlyDirty',\n\t\tshouldDedupe: true,\n\t}\n\tassertTruthy(item);\n\tassertTruthy(item.equals(correctItem));\n\tassertEqual(item.action, correctItem.action);\n\tassertEqual(item.shouldDedupe, correctItem.shouldDedupe);\n}\n\nfunction TEST_eventqueue_events_toplevelrender() {\n\teventQueueDispatcher.enqueueTopLevelRender();\n\tlet item = eventQueue.retrieveNextItem();\n\tlet correctItem = {\n\t\taction: 'topLevelRender',\n\t\tshouldDedupe: true,\n\t}\n\tassertTruthy(item);\n\tassertTruthy(item.equals(correctItem));\n\tassertEqual(item.action, correctItem.action);\n\tassertEqual(item.shouldDedupe, correctItem.shouldDedupe);\n}\n\nfunction TEST_eventqueue_events_importanttoplevelrender() {\n\teventQueueDispatcher.enqueueImportantTopLevelRender();\n\tlet item = eventQueue.retrieveNextItem();\n\tlet correctItem = {\n\t\taction: 'importantTopLevelRender',\n\t\tshouldDedupe: true,\n\t}\n\tassertTruthy(item);\n\tassertTruthy(item.equals(correctItem));\n\tassertEqual(item.action, correctItem.action);\n\tassertEqual(item.shouldDedupe, correctItem.shouldDedupe);\n}\n\n\nfunction TEST_eventqueue_priority_inverseordering() {\n\tlet obj = new Object();\n\teventQueueDispatcher.enqueueGC();\n\teventQueueDispatcher.enqueueAlertAnimation(obj);\n\teventQueueDispatcher.enqueueRenderOnlyDirty();\n\teventQueueDispatcher.enqueueDeferredFinish(obj, obj)\n\teventQueueDispatcher.enqueueDoKeyInput(obj, obj, obj, obj, obj, obj);\n\tassertEqual(eventQueue.retrieveNextItem().action, 'doKeyInput');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'deferredFinish');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'renderOnlyDirty');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'doAlertAnimation');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'gc');\n}\n\n\nfunction TEST_eventqueue_priority_addedwhiledequeueing() {\n\tlet obj = new Object();\n\teventQueueDispatcher.enqueueGC();\n\teventQueueDispatcher.enqueueAlertAnimation(obj);\n\teventQueueDispatcher.enqueueRenderOnlyDirty();\n\teventQueueDispatcher.enqueueDeferredFinish(obj, obj)\n\teventQueueDispatcher.enqueueDoKeyInput(obj, obj, obj, obj, obj, obj);\n\tassertEqual(eventQueue.retrieveNextItem().action, 'doKeyInput');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'deferredFinish');\n\teventQueueDispatcher.enqueueDoKeyInput(obj, obj, obj, obj, obj, obj);\n\tassertEqual(eventQueue.retrieveNextItem().action, 'doKeyInput');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'renderOnlyDirty');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'doAlertAnimation');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'gc');\n}\n\nfunction TEST_eventqueue_priority_inverseordering2() {\n\tlet obj = new Object();\n\teventQueueDispatcher.enqueueGC();\n\teventQueueDispatcher.enqueueAlertAnimation(obj);\n\teventQueueDispatcher.enqueueTopLevelRender();\n\teventQueueDispatcher.enqueueDeferredFinish(obj, obj)\n\teventQueueDispatcher.enqueueDoClickHandlerAction(obj, obj, obj);\n\tassertEqual(eventQueue.retrieveNextItem().action, 'doClickHandlerAction');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'deferredFinish');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'topLevelRender');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'doAlertAnimation');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'gc');\n}\n\nfunction TEST_eventqueue_priority_normalandimportantrender() {\n\tlet obj = new Object();\n\teventQueueDispatcher.enqueueTopLevelRender();\n\teventQueueDispatcher.enqueueImportantTopLevelRender();\n\tassertEqual(eventQueue.retrieveNextItem().action, 'importantTopLevelRender');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'topLevelRender');\n}\n\nfunction TEST_eventqueue_deduping() {\n\tlet obj = new Object();\n\teventQueueDispatcher.enqueueGC();\n\teventQueueDispatcher.enqueueGC();\n\teventQueueDispatcher.enqueueGC();\n\teventQueueDispatcher.enqueueGC();\n\teventQueueDispatcher.enqueueAlertAnimation(obj);\n\teventQueueDispatcher.enqueueAlertAnimation(obj);\n\teventQueueDispatcher.enqueueAlertAnimation(obj);\n\teventQueueDispatcher.enqueueAlertAnimation(obj);\n\teventQueueDispatcher.enqueueRenderOnlyDirty();\n\teventQueueDispatcher.enqueueRenderOnlyDirty();\n\teventQueueDispatcher.enqueueRenderOnlyDirty();\n\teventQueueDispatcher.enqueueRenderOnlyDirty();\n\teventQueueDispatcher.enqueueTopLevelRender();\n\teventQueueDispatcher.enqueueTopLevelRender();\n\teventQueueDispatcher.enqueueTopLevelRender();\n\teventQueueDispatcher.enqueueTopLevelRender();\n\teventQueueDispatcher.enqueueTopLevelRender();\n\teventQueueDispatcher.enqueueRenderOnlyDirty();\n\teventQueueDispatcher.enqueueTopLevelRender();\n\teventQueueDispatcher.enqueueImportantTopLevelRender();\n\teventQueueDispatcher.enqueueImportantTopLevelRender();\n\teventQueueDispatcher.enqueueImportantTopLevelRender();\n\teventQueueDispatcher.enqueueImportantTopLevelRender();\n\tassertEqual(eventQueue.retrieveNextItem().action, 'importantTopLevelRender');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'renderOnlyDirty');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'topLevelRender');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'renderOnlyDirty');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'topLevelRender');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'doAlertAnimation');\n\tassertEqual(eventQueue.retrieveNextItem().action, 'gc');\n\tassertFalsy(eventQueue.retrieveNextItem());\n}\n\n\n","/*\nThis file is part of Vodka.\n\nVodka is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nVodka is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with Vodka.  If not, see <https://www.gnu.org/licenses/>.\n*/\n\n\n\nvar prev = null\n\n\nfunction doFakeEvent(key, shift, ctrl, alt, cmd, meta) {\n\tmobileClearInput();\n\tlet e = {};\n\te.key = key;\n\te.altKey = alt;\n\te.ctrlKey = ctrl;\n\te.shiftKey = shift;\n\te.metaKey = meta;\n\tdoKeydownEvent(e);\n}\n\nvar mobileControlPanelVisible = false;\nvar hideTimeout = null;\n\nfunction setHideTimeout() {\n\tif (hideTimeout) {\n\t\tclearTimeout(hideTimeout);\n\t}\n\thideTimeout = setTimeout(function() {\n\t\tdocument.getElementById(\"mobilecontrolpanel\").style.opacity = 0.0;\n\t\tmobileControlPanelVisible = false;\n\t}, 30000);\n}\n\nfunction showOrDoFakeEvent(key, shift, ctrl, alt, cmd, meta) {\n\tif (!mobileControlPanelVisible) {\n\t\tmobileControlPanelVisible = true;\n\t\tdocument.getElementById(\"mobilecontrolpanel\").style.opacity = 1;\n\t\tsetHideTimeout();\n\t\treturn;\n\t}\n\tsetHideTimeout();\n\tdoFakeEvent(key, shift, ctrl, alt, cmd, meta);\n}\n\n\nfunction mobileClearInput() {\n\tdocument.getElementById('mobile_input').value = '';\n}\n\nfunction doMobileKeyDown(e) {\n\tif (e.key == 'Enter') {\n\t\tmobileClearInput();\n\t}\n}\n\n\nfunction setupMobile() {\n\tvar mobileInput = document.getElementById(\"mobile_input\");\n\tmobileInput.onchange = function(e) {\n\t\t// lol this is basically when enter\n\t\tprev = \"\";\n\t\tdoFakeEvent(\"Enter\", false, false, false, false, false);\n\t\tsetTimeout(function() {\n\t\t\tmobileInput.value = prev;\n\t\t}, 1);\n\t}\n\tmobileInput.oninput = function(e) {\n\t\tif (prev === null) {\n\t\t\t// well I guess we added stuff\n\t\t\tprev = mobileInput.value;\n\t\t\tdoFakeEvent(prev, false, false, false, false, false);\n\t\t} else {\n\t\t\t// either it's shorter or longer!\n\t\t\tlet newone = mobileInput.value;\n\t\t\tif (newone.length > prev.length) {\n\t\t\t\tlet k = newone.charAt(newone.length - 1);\n\t\t\t\tprev = newone;\n\t\t\t\tdoFakeEvent(k, false, false, false, false, false);\n\t\t\t} else {\n\t\t\t\tprev = newone;\n\t\t\t\t// gotta be shorter?\n\t\t\t\tdoFakeEvent(\"Backspace\", false, false, false, false, false);\n\t\t\t}\n\t\t}\n\t\tsetTimeout(function() {\n\t\t\tmobileInput.value = prev;\n\t\t}, 1);\n\t\treturn true;\n\t}\n\n\tsystemState.setIsMobile(true);\n\tdocument.getElementById(\"mobilecontrolpanel\").style.display = 'flex';\n\tdocument.getElementById(\"codepane\").classList.add('mobile');\n\n\tdocument.getElementById(\"mobile_out\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"Tab\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_in\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"Tab\", false, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_prev\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"ArrowLeft\", false, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_next\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"ArrowRight\", false, false, false, false, false);\n\t}\n\n\tdocument.getElementById(\"mobile_del\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"Backspace\", false, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_sde\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"Backspace\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_esc\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"Escape\", false, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_til\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"~\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_exc\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"!\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_ats\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"@\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_num\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"#\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_dol\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"$\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_per\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"%\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_car\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"^\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_amp\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"&\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_ast\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"*\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_par\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"(\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_bce\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"{\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_brk\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"[\", true, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_flp\").onclick = function() {\n\t\tshowOrDoFakeEvent(\" \", true, false, false, false, false);\n\t}\n\n\tdocument.getElementById(\"mobile_edit\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"Enter\", false, true, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_sted\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"Enter\", false, false, false, false, false);\n\t}\n\n\tdocument.getElementById(\"mobile_cut\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"x\", false, false, false, false, true);\n\t}\n\tdocument.getElementById(\"mobile_copy\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"c\", false, false, false, false, true);\n\t}\n\tdocument.getElementById(\"mobile_paste\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"v\", false, false, false, false, true);\n\t}\n\n\tdocument.getElementById(\"mobile_eval\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"Enter\", false, false, false, false, false);\n\t}\n\tdocument.getElementById(\"mobile_quiet\").onclick = function() {\n\t\tshowOrDoFakeEvent(\"Enter\", true, false, false, false, false);\n\t}\n}\n\n\nexport { setupMobile, doMobileKeyDown }"],"names":[],"version":3,"file":"host.9876d776.js.map","sourceRoot":"/__parcel_source_root/"}