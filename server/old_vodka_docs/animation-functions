v2:~(|package @animation ~(_import @style-functions_) ~(_import @util-functions_) ~(_bind @FPS #20_) ~(_bind @reactivate-nested-animations &"() list()"(|~(|util:traverse-nexes-satisfying-and-do @list &"! item"(|~(_is-expectation @item_)|) &"* item*"(|@item|)|)|)_) ~(_bind @do-on-every &"* f& nex interval#"(|[doc](|[line](_[word](_[letter]"R" [letter]"u" [letter]"n" [letter]"s"_) [separator]" " [word](_[letter]"t" [letter]"h" [letter]"e"_) [separator]" " [word](_[letter]"F"_) [separator]" " [word](_[letter]"f" [letter]"u" [letter]"n" [letter]"c" [letter]"t" [letter]"i" [letter]"o" [letter]"n"_) [separator]" " [word](_[letter]"o" [letter]"n"_) [separator]" " [word](_[letter]"N" [letter]"E" [letter]"X"_) [separator]" " [word](_[letter]"e" [letter]"v" [letter]"e" [letter]"r" [letter]"y"_) [separator]" " [word](_[letter]"I" [letter]"N" [letter]"T" [letter]"E" [letter]"R" [letter]"V" [letter]"A" [letter]"L"_) [separator]" " [word](_[letter]"m" [letter]"i" [letter]"l" [letter]"l" [letter]"i" [letter]"s" [letter]"e" [letter]"c" [letter]"o" [letter]"n" [letter]"d" [letter]"s"_) [separator]"."_)|) ~(_let @exp ~(_cons @nex *(__)_)_) ~(_set-delay ~(_ff-with @exp &" _n"(|~(_reset @exp_) ~(_f @n_)|)_) @interval_)|)_) ~(_bind @do-on-every-with-param &"* f& nex interval#"(|~(_let @p #0_) ~(_let @exp ~(_cons @nex *(__)_)_) ~(_set-delay ~(_ff-with @exp &" _n"(|~(_reset @exp_) ~(_set @p ~(_::pl:: @p #1_)_) ~(_f @nex @p_)|)_) @interval_)|)_) ~(_bind @do-on-every-for &"* f& nex interval# iterations#"(|~(_let @its #0_) ~(_let @exp ~(_cons @nex *(__)_)_) ~(_set-delay ~(_ff-with @exp &" _n"(|~(_set @its ~(_::pl:: @its #1_)_) ~(|if ~(_::lt:: @its @iterations_) ~(_reset @exp_) ^|) ~(_f @n_)|)_) @interval_)|)_) ~(_bind @animate-with-for-duration-of &"* nex animatefunc& duration%"(|~(_let @delay-ms ~(_to-integer ~(_::ov:: %1000 @FPS_)_)_) ~(_let @num-frames ~(_::ti:: @duration @FPS_)_) ~(_let @increment ~(_::ov:: %1 @num-frames_)_) ~(_let @val %0_) ~(_do-on-every-for &" n"(|~(_set @val ~(_::pl:: @val @increment_)_) ~(_animatefunc @n @val_)|) @nex @delay-ms ~(_to-integer @num-frames_)_)|)_) ~(_bind @loop &" exp-generator&"(|~(|ff-with ~(_make-expectation ~(_exp-generator _)_) &" n"(|~(_eval ~(_exp-generator _)_)|)|)|)_) ~(_bind @loop2 &" exp*"(|~(_let @gen &(|~(_copy @exp_)|)_) ~(_let @r ~(|ff-with ~(_make-expectation ~(_gen _)_) &" exp"(|~(_reset @r_) ~(_gen _)|)|)_) @r|)_) ~(_bind @osc-pfont &"* nex pfontgen& from% to%"(|~(|do-on-every-with-param &" nex p"(|~(_let @sval ~(_::pl:: ~(_::ov:: ~(_sin ~(_::ov:: ~(_to-float @p_) %10_)_) %2_) %0.5_)_) ~(_let @val ~(_::pl:: ~(_::ti:: ~(_- @to @from_) @sval_) @from_)_) ~(_apply-pfont-to ~(_pfontgen @val_) @nex_)|) @nex #40|)|)_) ~(_bind @fade-in-for-seconds &"* nex duration%"(|~(|animate-with-for-duration-of ~(_style:with-alpha-of @nex %0_) &" nex val"(|~(_style:with-alpha-of @nex @val_)|) @duration|)|)_) ~(_bind @seq &" exps*..."(|~(_let @seq-holder ~(|ff-with ~(_make-expectation ^_) &" exp"(|~(|if ~(_is-empty @exps_) @exp ~(|begin ~(_let @r ~(_car @exps_)_) ~(_set @exps ~(_cdr @exps_)_) ~(_reset @seq-holder_) @r|)|)|)|)_) @seq-holder|)_) ~(_bind @fade-out-for-seconds &"* nex duration%"(|~(|animate-with-for-duration-of ~(_style:with-alpha-of @nex %1_) &" nex val"(|~(_style:with-alpha-of @nex ~(_- %1 @val_)_)|) @duration|)|)_) ~(_bind @hold-for-seconds &"* nex duration%"(|~(_set-delay ~(_make-expectation @nex_) ~(_to-integer ~(_::ti:: @duration %1000_)_)_)|)_) ~(_bind @fudge-interval &" interval#"(|~(_to-integer ~(_::ti:: ~(_to-float @interval_) ~(_::pl:: %0.9 ~(_::ti:: %0.2 ~(_random _)_)_)_)_)|)_) ~(_bind @fade-between &"* thing1 thing2 fadetime% holdtime%"(|~(_loop &(_~(|seq ~(_fade-in-for-seconds @thing1 @fadetime_) ~(_hold-for-seconds @thing1 @holdtime_) ~(_fade-out-for-seconds @thing1 @fadetime_) ~(_fade-in-for-seconds @thing2 @fadetime_) ~(_hold-for-seconds @thing2 @holdtime_) ~(_fade-out-for-seconds @thing2 @fadetime_)|)_)_)|)_)|)